:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,+element,-list)).
:- modeb(*,f(+list,+element,-list)).

:- determination(f/3,head/2).
:- determination(f/3,tail/2).
:- determination(f/3,geq/2).
:- determination(f/3,empty/1).
:- determination(f/3,even/1).
:- determination(f/3,odd/1).
:- determination(f/3,one/1).
:- determination(f/3,zero/1).
:- determination(f/3,decrement/2).
:- determination(f/3,f/3).
%% :- determination(f/3,increment/2).
%% :- determination(f/3,element/2).
%% :- determination(f/3,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.
:-end_bg.
:-begin_in_pos.
f([57, 36, 70, 67],2,[70, 67]).
f([45, 32, 28, 6, 8, 61, 22, 53, 74, 15, 23, 13, 6, 95, 63, 97, 6, 45, 69, 39, 90, 27, 59, 96, 80, 41, 15, 21, 54, 68, 23, 51, 18, 27, 8, 16, 59, 101, 42, 18],23,[96, 80, 41, 15, 21, 54, 68, 23, 51, 18, 27, 8, 16, 59, 101, 42, 18]).
f([54, 74, 82, 2, 11],5,[]).
f([35, 23, 79, 36, 65, 11, 9, 4, 94, 39, 6, 71, 28, 60, 79, 100, 40, 38, 82, 80, 77, 28, 73, 70],14,[79, 100, 40, 38, 82, 80, 77, 28, 73, 70]).
f([74, 34, 8, 57],3,[57]).
f([68, 7, 2, 25, 50, 61, 45, 59, 53, 96, 65, 93, 22, 97, 12, 67, 82, 35, 35, 64, 11, 28, 22, 55, 16, 10, 79, 46, 25],5,[61, 45, 59, 53, 96, 65, 93, 22, 97, 12, 67, 82, 35, 35, 64, 11, 28, 22, 55, 16, 10, 79, 46, 25]).
f([35, 90, 97, 94, 55, 55, 96, 89],5,[55, 96, 89]).
f([15, 72, 77, 47, 34, 30, 24, 51, 77, 66, 39, 92, 22, 71, 22, 93, 90, 91, 50, 93, 50, 54, 18, 72, 59, 78, 46, 27, 93, 39, 17, 19, 26, 96, 65, 34, 94, 7, 72, 22, 56, 74],38,[72, 22, 56, 74]).
f([30, 54, 34, 91, 70, 27, 59, 40, 74, 79, 96, 77, 7, 65, 47, 99, 27, 2, 78, 54, 1, 78, 26, 8, 78, 55, 84, 79],21,[78, 26, 8, 78, 55, 84, 79]).
f([20, 19, 68, 86, 93, 77],1,[19, 68, 86, 93, 77]).
:-end_in_pos.
:-begin_in_neg.
f([65, 6, 21, 98, 3, 35, 94, 69, 80, 72, 94, 98, 49, 100, 26, 44, 42, 11, 47, 80, 94, 35, 39, 65, 100, 91, 49, 6, 97, 42, 55, 48, 10, 101, 92],6,[44, 42, 11, 47, 80, 94, 35, 39, 65, 100, 91, 49, 6, 97, 42, 55, 48, 10, 101, 92]).
f([85, 74, 99, 101, 66, 48, 14, 2, 37, 8, 40, 65, 98, 86, 13, 9, 9, 57, 88, 90, 9, 74, 55, 94, 56, 38, 48, 57, 16, 3, 24, 39, 84, 19, 42, 12, 97, 15, 24, 75, 96, 68, 27, 32, 38, 55],4,[56, 38, 48, 57, 16, 3, 24, 39, 84, 19, 42, 12, 97, 15, 24, 75, 96, 68, 27, 32, 38, 55]).
f([27, 10, 66, 72, 23, 54, 27, 80, 23, 52, 97, 9, 72, 76, 63, 21, 15, 1, 47, 89, 14, 8, 95, 40, 13, 79],19,[23, 52, 97, 9, 72, 76, 63, 21, 15, 1, 47, 89, 14, 8, 95, 40, 13, 79]).
f([91, 29, 17, 81, 98, 17, 86, 48, 13, 21, 22, 36, 66, 12, 61, 59, 25, 84, 79, 56, 73, 100, 46, 33, 48],15,[17, 81, 98, 17, 86, 48, 13, 21, 22, 36, 66, 12, 61, 59, 25, 84, 79, 56, 73, 100, 46, 33, 48]).
f([31, 49, 101],3,[31, 49, 101]).
f([87, 91, 30, 37, 51, 46, 79, 95, 11, 39, 100, 22, 56, 74, 81, 20, 64, 59, 57, 15, 52, 87, 38, 43, 23, 90, 45, 23, 31, 97, 54, 95, 53, 36, 27, 54],30,[91, 30, 37, 51, 46, 79, 95, 11, 39, 100, 22, 56, 74, 81, 20, 64, 59, 57, 15, 52, 87, 38, 43, 23, 90, 45, 23, 31, 97, 54, 95, 53, 36, 27, 54]).
f([42, 62, 36, 33, 89, 69, 48, 22, 5, 18],4,[18]).
f([65, 94, 13, 6, 60, 8, 54, 94, 63, 15, 61, 52, 80, 41, 89, 26, 15, 50, 72, 11, 82, 89, 40, 47, 19, 9, 50, 64, 62, 60, 87, 80, 61, 68, 50, 31, 88, 46, 63, 67, 56, 47, 59, 60, 48, 33, 81, 33, 70, 52],45,[94, 13, 6, 60, 8, 54, 94, 63, 15, 61, 52, 80, 41, 89, 26, 15, 50, 72, 11, 82, 89, 40, 47, 19, 9, 50, 64, 62, 60, 87, 80, 61, 68, 50, 31, 88, 46, 63, 67, 56, 47, 59, 60, 48, 33, 81, 33, 70, 52]).
f([53, 80, 89, 30, 87, 72, 101, 88, 64, 13, 5, 15, 64, 5, 18, 71, 87, 15, 48, 80, 17, 52, 95, 8, 44, 65, 21, 48, 27, 39, 36, 86, 47, 100, 27, 85, 62, 41, 33, 32, 101],25,[87, 72, 101, 88, 64, 13, 5, 15, 64, 5, 18, 71, 87, 15, 48, 80, 17, 52, 95, 8, 44, 65, 21, 48, 27, 39, 36, 86, 47, 100, 27, 85, 62, 41, 33, 32, 101]).
f([33, 44, 37, 73, 91, 20, 12, 78],7,[91, 20, 12, 78]).
:-end_in_neg.

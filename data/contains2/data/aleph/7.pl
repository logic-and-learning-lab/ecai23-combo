:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list)).
:- modeb(*,f(+list)).

:- determination(f/1,head/2).
:- determination(f/1,tail/2).
:- determination(f/1,geq/2).
:- determination(f/1,empty/1).
:- determination(f/1,even/1).
:- determination(f/1,odd/1).
:- determination(f/1,one/1).
:- determination(f/1,zero/1).
:- determination(f/1,decrement/2).
:- determination(f/1,f/1).
%% :- determination(f/1,increment/2).
%% :- determination(f/1,element/2).
%% :- determination(f/1,cons/3).

:- determination(f/1,c_0/1).
:- determination(f/1,c_1/1).
:- determination(f/1,c_2/1).
:- determination(f/1,c_3/1).
:- determination(f/1,c_4/1).
:- determination(f/1,c_5/1).
:- determination(f/1,c_6/1).
:- determination(f/1,c_7/1).
:- determination(f/1,c_8/1).
:- determination(f/1,c_9/1).
:- determination(f/1,c_10/1).

:-modeb(*,c_0(-element)).
:-modeb(*,c_1(-element)).
:-modeb(*,c_2(-element)).
:-modeb(*,c_3(-element)).
:-modeb(*,c_4(-element)).
:-modeb(*,c_5(-element)).
:-modeb(*,c_6(-element)).
:-modeb(*,c_7(-element)).
:-modeb(*,c_8(-element)).
:-modeb(*,c_9(-element)).
:-modeb(*,c_10(-element)).

:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.

my_append(A,B,C):-
    append(A,[B],C).





c_0(0).
c_1(1).
c_2(2).
c_3(3).
c_4(4).
c_5(5).
c_6(6).
c_7(7).
c_8(8).
c_9(9).
c_10(10).
c_11(11).
c_12(12).
c_13(13).
c_14(14).
c_15(15).
c_16(16).
c_17(17).
c_18(18).
c_19(19).
c_20(20).
c_21(21).
c_22(22).
c_23(23).
c_24(24).
c_25(25).
c_26(26).
c_27(27).
c_28(28).
c_29(29).
c_30(30).
c_31(31).
c_32(32).
c_33(33).
c_34(34).
c_35(35).
c_36(36).
c_37(37).
c_38(38).
c_39(39).
c_40(40).
c_41(41).
c_42(42).
c_43(43).
c_44(44).
c_45(45).
c_46(46).
c_47(47).
c_48(48).
c_49(49).
c_50(50).
c_51(51).
c_52(52).
c_53(53).
c_54(54).
c_55(55).
c_56(56).
c_57(57).
c_58(58).
c_59(59).
c_60(60).
c_61(61).
c_62(62).
c_63(63).
c_64(64).
c_65(65).
c_66(66).
c_67(67).
c_68(68).
c_69(69).
c_70(70).
c_71(71).
c_72(72).
c_73(73).
c_74(74).
c_75(75).
c_76(76).
c_77(77).
c_78(78).
c_79(79).
c_80(80).
c_81(81).
c_82(82).
c_83(83).
c_84(84).
c_85(85).
c_86(86).
c_87(87).
c_88(88).
c_89(89).
c_90(90).
c_91(91).
c_92(92).
c_93(93).
c_94(94).
c_95(95).
c_96(96).
c_97(97).
c_98(98).
c_99(99).
c_100(100).
:-end_bg.
:-begin_in_pos.
f([98, 63, 11, 88, 66, 9, 47, 56, 76, 59, 26, 9, 60, 32, 65, 43, 37, 91, 56, 49, 23, 54, 99, 72, 23, 84, 98, 62, 11, 8, 17, 57, 73]).
f([66, 98, 78, 19, 9, 37, 80, 90, 42, 36, 1, 77, 51, 66, 61, 1, 48, 82, 45, 67, 18, 78, 15, 78, 101, 44, 28, 20, 66, 79, 5, 42, 38, 93, 45]).
f([21, 78, 55, 78, 72, 68, 32, 50, 5, 55, 95, 44, 38, 31, 77, 5, 80, 37, 10, 3, 78, 88, 32, 21, 6, 101, 100, 87, 69, 88, 25, 97, 70, 36, 21, 28, 50, 16]).
f([93, 4, 25, 52, 48, 76, 99, 73, 96, 9]).
f([89, 100, 29, 68, 97, 42, 83, 93, 88, 83, 2, 9, 69, 45, 61, 56, 32, 81, 50, 96]).
f([30, 71, 38, 31, 26, 5, 99, 46, 82, 11, 64, 5, 14, 27, 88, 49, 88, 52, 82, 75, 59, 54, 40, 56, 23, 74, 49, 74, 19, 62, 9, 3, 35, 43, 98, 19, 48, 67]).
f([57, 26, 68, 71, 11, 52, 54, 60, 29, 44, 93, 8, 84, 33, 97, 47, 31, 55, 17, 74, 25, 5, 97, 61, 45, 100, 91, 40, 65, 10, 83, 2, 65, 19, 84, 2, 1, 51, 7, 46, 64, 30, 9, 33]).
f([67, 84, 18, 101, 73, 77, 11, 54, 49, 45, 6, 60, 44, 85, 94, 90, 12, 35, 45, 58, 45, 35, 75, 5, 3, 42, 69, 59, 12, 64, 92, 31, 64, 97, 101, 92, 16, 2, 80, 71, 85]).
f([1, 6, 87, 9, 65, 45, 52, 92, 31, 16, 35, 28, 77, 97, 48, 97, 55]).
f([34, 34, 3, 64, 76, 96, 84, 11, 91, 15, 11, 36, 38, 66, 43, 66, 6, 98, 85, 41, 23, 66, 35, 47, 94, 92, 26, 7, 97, 58, 101, 82, 47, 71, 5, 22, 56]).
f([61, 68, 39, 76, 67, 95, 25, 21, 84, 51, 61, 20, 46, 9, 14, 76, 43, 35, 77]).
f([6, 70, 91, 30, 67, 37, 25, 56, 89, 16, 9, 35, 14, 61, 6, 24, 64, 64, 13, 11, 61, 36, 66, 61, 90, 89, 24, 73, 51, 30, 55, 4, 49, 4, 79, 14, 97, 31, 2, 61, 76, 29, 78, 101]).
f([2, 37, 39, 56, 97, 88, 71, 98, 72, 34, 19, 5, 55, 28, 43, 44, 15, 93, 47, 6, 98, 101, 8, 73, 9, 42, 76, 13, 46, 54, 79, 20, 72, 63, 41, 38, 3, 53, 40, 50, 80, 8, 99, 1, 73, 45, 6, 36]).
f([90, 6, 37, 30, 20, 37, 44, 61, 70, 98, 69, 35, 69, 81]).
f([41, 31, 60, 40, 99, 30, 96, 87, 65, 6, 26, 66, 97, 25, 81, 33, 91, 57, 85, 7, 4, 61, 10, 73, 9, 65, 2, 18, 12, 31, 91, 35, 92, 79, 24, 49, 52, 75, 38, 61, 73, 82, 60, 67, 55, 48, 19, 48, 5]).
f([14, 9, 25, 51, 85, 41, 63, 72, 17, 35, 3, 34, 20, 76, 79, 79, 51, 56]).
f([90, 28, 53, 56, 32, 28, 31, 89, 54, 20, 86, 20, 17, 95, 67, 55, 90, 22, 49, 63, 80, 84, 69, 16, 58, 58, 94, 28, 72, 2, 23, 13, 34, 36, 92, 32, 6, 78, 42, 38, 19, 52, 91, 57, 94, 3, 92]).
f([62, 50, 39, 95, 90, 9, 57, 49, 20, 33, 31, 22, 93, 73, 58, 15, 43, 70, 59, 69, 86, 2, 53, 90]).
f([53, 42, 13, 31, 64, 58, 31, 48, 88, 87, 60, 29, 6, 81, 60, 61, 53, 19, 76, 78, 46, 40, 74, 46, 27, 84, 60, 98, 6, 25, 74, 70, 6, 5, 75, 67, 1, 31, 18, 14, 80, 81, 19, 14, 2, 29, 48, 53, 78]).
f([1, 10, 90, 78, 51, 4, 9, 47, 20, 78, 78, 54, 75, 17, 81, 19, 3, 41, 68, 75, 64, 85, 72, 26, 92, 70, 49, 13, 89, 32, 49, 63, 42, 51, 47, 91, 57, 35, 32, 35, 68, 20, 13]).
:-end_in_pos.
:-begin_in_neg.
f([79, 35, 67, 70, 101, 5, 67, 28, 89, 38, 21, 100, 52, 64, 96, 20, 83, 38, 49, 71, 67]).
f([17, 34, 101, 80, 35, 90, 7, 15, 74, 37, 80, 18, 68, 100, 85, 56, 53, 61, 101, 72, 91, 99, 73]).
f([71, 48, 40, 23, 88, 43, 36, 7, 101, 22, 40, 93, 18, 35, 91, 33, 93, 62, 31, 48, 38, 97, 17, 62, 37, 86, 21, 94, 30, 49, 33, 86]).
f([26, 74, 68, 60, 48, 82, 2, 39, 38, 68, 58, 8, 57, 23, 15, 41, 13, 2, 75, 30, 79, 74, 49, 100, 75, 100, 71, 46, 87, 93, 29, 69, 2, 53, 50, 70, 70, 7, 8, 57, 97, 66, 37, 60, 10, 34, 39, 56]).
f([10, 73, 26, 67, 60, 45, 66, 4, 96, 29, 47, 50, 46, 59, 99, 100, 95, 27]).
f([63, 32, 64, 27, 46, 89, 63, 43, 72, 64, 43, 69, 22, 86, 94, 97, 75, 26, 5, 42, 5, 79]).
f([70, 24, 75, 55, 41, 89, 59, 98, 8, 53, 67, 28, 98, 72, 63, 51, 43, 46, 54, 53, 12, 27, 53, 64, 101, 50, 41, 42, 83, 46, 30, 5, 21]).
f([73, 1, 26, 93, 69]).
f([98, 15, 74, 56, 64, 82, 28, 36, 86, 95, 12, 96, 90, 45, 37, 61, 44, 8, 61, 27, 96, 64, 52]).
f([11, 3, 29, 17, 97, 31, 77, 67, 91, 90, 36, 7, 30, 21, 48, 87, 10, 38, 58, 22, 60, 74, 60, 30, 22, 30, 76, 13, 19]).
f([49, 87, 1, 58, 55]).
f([53, 50, 37, 41, 55, 14, 48, 21, 90, 59, 89, 73, 24, 24, 69, 33, 53, 59, 28, 53, 80, 25, 25, 25, 16, 20, 12, 79, 91, 40]).
f([93, 66, 2, 58, 77, 15, 92, 77, 92, 74, 24, 33, 59, 46, 11, 19, 34, 95, 7, 92, 62, 95, 51, 20, 73, 83, 40]).
f([73, 54, 7, 53, 13, 60, 101, 37, 81, 95, 87, 34]).
f([35, 33, 55]).
f([51, 42, 25, 36, 87, 62, 28]).
f([29, 84, 24, 62, 76, 97, 55, 7, 68, 90, 26, 98, 87, 74, 37, 63, 59, 65, 90, 23, 68, 61, 60, 11, 84, 28, 89, 66, 91, 29, 4, 88, 97, 21]).
f([50, 96, 45, 90, 95, 28, 24, 78, 33]).
f([11, 17, 40, 60, 33, 16, 50, 71, 14, 35, 2, 10, 51, 46, 16]).
f([50, 49, 41, 24, 35, 63, 14, 11, 11, 63, 77, 73, 31, 44, 97, 17, 27, 64, 44, 42, 38, 98, 70, 52, 36, 13, 11, 60, 69, 32, 53, 64, 85, 43, 12, 99, 13]).
:-end_in_neg.

:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list)).
:- modeb(*,f(+list)).
%% :- modeb(*,cons(+element,+list,-list)).

:- determination(f/1,head/2).
:- determination(f/1,tail/2).
:- determination(f/1,geq/2).
:- determination(f/1,empty/1).
:- determination(f/1,even/1).
:- determination(f/1,odd/1).
:- determination(f/1,one/1).
:- determination(f/1,zero/1).
:- determination(f/1,decrement/2).
:- determination(f/1,f/1).
%% :- determination(f/1,element/2).
%% :- determination(f/1,increment/2).
%% :- determination(f/1,element/2).
%% :- determination(f/1,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.

my_append(A,B,C):-
    append(A,[B],C).





c_0(0).
c_1(1).
c_2(2).
c_3(3).
c_4(4).
c_5(5).
c_6(6).
c_7(7).
c_8(8).
c_9(9).
c_10(10).
c_11(11).
c_12(12).
c_13(13).
c_14(14).
c_15(15).
c_16(16).
c_17(17).
c_18(18).
c_19(19).
c_20(20).
c_21(21).
c_22(22).
c_23(23).
c_24(24).
c_25(25).
c_26(26).
c_27(27).
c_28(28).
c_29(29).
c_30(30).
c_31(31).
c_32(32).
c_33(33).
c_34(34).
c_35(35).
c_36(36).
c_37(37).
c_38(38).
c_39(39).
c_40(40).
c_41(41).
c_42(42).
c_43(43).
c_44(44).
c_45(45).
c_46(46).
c_47(47).
c_48(48).
c_49(49).
c_50(50).
c_51(51).
c_52(52).
c_53(53).
c_54(54).
c_55(55).
c_56(56).
c_57(57).
c_58(58).
c_59(59).
c_60(60).
c_61(61).
c_62(62).
c_63(63).
c_64(64).
c_65(65).
c_66(66).
c_67(67).
c_68(68).
c_69(69).
c_70(70).
c_71(71).
c_72(72).
c_73(73).
c_74(74).
c_75(75).
c_76(76).
c_77(77).
c_78(78).
c_79(79).
c_80(80).
c_81(81).
c_82(82).
c_83(83).
c_84(84).
c_85(85).
c_86(86).
c_87(87).
c_88(88).
c_89(89).
c_90(90).
c_91(91).
c_92(92).
c_93(93).
c_94(94).
c_95(95).
c_96(96).
c_97(97).
c_98(98).
c_99(99).
c_100(100).
:-end_bg.
:-begin_in_pos.
f([10, 12, 12, 14, 16, 18, 22, 31, 33, 34, 37, 39, 55, 60, 66, 77, 82, 96, 97, 99]).
f([4, 4, 10, 12, 15, 16, 16, 20, 20, 23, 25, 32, 33, 34, 36, 39, 41, 43, 48, 54, 54, 57, 58, 60, 66, 68, 71, 71, 72, 73, 74, 75, 77, 81, 81, 82, 83, 84, 85, 86, 86, 91, 96, 97, 100, 101]).
f([17, 18, 24, 34, 38, 41, 47, 50, 50, 50, 69, 74, 80, 80, 87, 88]).
f([6, 8, 12, 13, 13, 13, 18, 27, 27, 31, 33, 36, 36, 39, 40, 40, 41, 43, 44, 50, 54, 55, 56, 59, 64, 66, 66, 67, 67, 68, 68, 69, 70, 71, 74, 79, 81, 86, 89, 94, 95, 98]).
f([1, 4, 6, 6, 14, 16, 17, 18, 21, 28, 31, 32, 32, 37, 40, 42, 43, 43, 46, 47, 48, 49, 53, 61, 64, 64, 64, 67, 69, 70, 84, 86, 98, 100, 101]).
f([4, 9, 19, 29, 31, 36, 48, 60, 66, 66, 78, 86]).
f([3, 4, 9, 29, 29, 33, 33, 39, 39, 39, 40, 41, 53, 59, 59, 60, 68, 71, 78, 78, 81, 82, 83, 86, 92, 92, 93, 98]).
f([2, 3, 3, 5, 5, 9, 15, 16, 18, 31, 33, 34, 35, 39, 39, 40, 42, 48, 49, 51, 65, 69, 75, 77, 78, 80, 81, 85, 89, 93]).
f([3, 6, 18, 18, 20, 32, 36, 40, 43, 43, 47, 60, 61, 62, 76, 77, 83, 87, 92]).
f([11, 25, 27, 51, 59, 76, 87, 91]).
f([6, 10, 21, 21, 25, 25, 26, 27, 31, 32, 33, 34, 36, 38, 38, 41, 42, 45, 47, 52, 54, 57, 57, 60, 61, 62, 62, 63, 64, 64, 69, 73, 76, 81, 84, 85, 89, 89, 90, 92, 93, 94, 98, 99, 101]).
f([5, 10, 25, 59, 97]).
f([18, 38, 61, 83, 92]).
f([19, 29, 32, 44, 49, 87, 87]).
f([1, 2, 4, 26, 32, 50, 65, 74, 75, 89, 92, 94]).
f([1, 2, 6, 10, 13, 13, 27, 27, 30, 31, 31, 34, 44, 47, 50, 50, 51, 57, 58, 67, 69, 82, 85, 85, 87, 92, 99]).
f([43]).
f([1, 3, 5, 5, 8, 9, 9, 10, 13, 13, 14, 15, 18, 18, 22, 25, 25, 30, 30, 35, 36, 37, 37, 41, 41, 44, 50, 50, 52, 59, 61, 62, 64, 66, 68, 68, 69, 71, 72, 75, 80, 81, 82, 83, 85, 90, 93, 96, 97, 98, 99]).
f([8, 16, 30, 41, 64, 65, 65, 66, 73, 76, 81, 81, 83, 83, 84, 86, 87, 90, 91, 101]).
f([3, 4, 8, 17, 17, 20, 24, 29, 33, 35, 36, 51, 51, 54, 65, 68, 72, 77, 77, 80, 83, 90, 94, 97, 98, 99]).
:-end_in_pos.
:-begin_in_neg.
f([60, 73, 100, 15, 85, 16, 12, 54, 49, 43, 3, 18, 38, 82, 63, 58, 35, 64, 8, 86, 13, 41, 86, 37, 54, 85, 100, 30, 28, 49, 93, 88, 68, 8, 51, 86, 87, 79, 83, 96, 22, 26, 19, 45, 6, 52, 74, 67]).
f([88, 101, 83, 43, 79, 22, 74, 53, 12, 9, 12, 66, 60, 15, 43, 7, 101, 83, 71, 38, 8, 72, 85, 97, 31, 80]).
f([90, 45, 51, 96, 14, 76, 96, 75, 66, 40, 81, 23, 24, 100, 74, 91, 33, 41, 62, 66, 3, 60, 11, 70, 19, 12, 35, 46, 17, 69, 85, 38, 89, 65, 2, 27, 42, 9, 86, 46]).
f([3, 51, 62, 15, 39, 35, 45, 37, 29, 79, 14, 46, 12, 51, 9, 92, 71, 35, 50, 101, 53, 73, 4, 19, 29, 97]).
f([58, 46, 28, 71, 50, 47, 32, 2, 4, 63, 86, 66, 51, 11, 77, 60, 15, 28, 49, 68, 41, 10, 94]).
f([76, 82, 96, 27, 95, 12, 46, 52, 92, 9]).
f([77, 77, 2, 41, 18, 38, 36, 85, 27, 3, 42, 20, 10, 4, 79, 67, 84, 8, 12, 100, 61, 37, 64, 69, 39, 100, 7, 99, 58, 75, 43, 61, 50, 27, 22, 68, 75, 24, 9, 75, 10, 5, 72, 26, 46, 72, 77, 65]).
f([49, 52, 55, 96, 12, 21, 70, 57, 51, 49, 83, 75]).
f([8, 57, 17, 26, 21, 67, 85, 12, 80, 11, 16, 50, 63, 61, 81, 48, 82, 59, 58, 29, 3, 38, 44, 62, 8, 58, 84, 59, 27, 14, 35, 82, 16, 49, 37, 87, 84, 12, 10, 28, 20, 73, 49, 15]).
f([76, 57, 37, 91, 44, 68, 46, 10, 53]).
f([59, 42, 18, 56, 8, 27, 29, 61, 41, 32, 26, 32, 61, 57, 40, 48, 37, 15, 31, 47, 93, 100, 79, 94, 22, 8, 27, 68, 55, 74, 13, 29, 18, 20, 67, 14, 96, 4, 90, 19, 33, 70, 97, 61, 81, 83, 78, 74, 82]).
f([3, 32, 98, 55, 25]).
f([48, 47, 83, 84, 75, 37, 91, 10, 95, 83, 15, 95, 77, 24, 91, 27, 93, 42, 76, 71, 36, 78, 12, 1, 73, 81, 30, 18]).
f([15, 77, 72, 65, 59, 11, 37, 3, 78, 66, 69, 37, 21, 66, 26, 42, 84, 75, 4, 5, 97, 63, 44, 54, 59, 72, 89, 32, 85, 33, 6, 56, 87, 94, 70, 68]).
f([85, 25, 66, 90, 79, 93, 51, 82, 4, 24, 80, 99, 25, 101, 37, 7, 32, 22, 41, 77, 99, 70, 50, 82, 74, 97, 96, 71, 8, 17, 56, 69, 44]).
f([85, 80, 90, 4, 61, 12, 38, 63, 19, 28, 55, 86, 71, 72, 7, 47, 83, 69, 1, 78, 61, 77, 54, 77, 74, 27, 23, 84, 75, 59, 57, 93, 12, 50, 81, 15, 95, 42, 78, 60, 78, 77, 55]).
f([42, 47, 85, 71, 74, 23, 62, 4, 62, 26, 91, 15, 23, 34, 13, 69]).
f([18, 18, 97, 55, 54, 81, 15, 75, 7, 22, 66, 2, 49, 62, 86, 42, 74, 88, 13, 27, 47, 5, 57, 7, 100, 37, 38, 87, 33, 83, 52, 25, 71, 80, 61, 60, 70, 48, 80, 21, 40, 35, 59, 34, 13, 5]).
f([27, 51, 24, 72, 38, 81, 39, 90, 21, 73, 24, 70, 43, 81, 89, 63, 79, 4, 54, 20, 79, 2, 34, 9, 11, 94, 44, 16, 64]).
f([16, 10, 82, 32, 74, 18, 70, 50]).
:-end_in_neg.

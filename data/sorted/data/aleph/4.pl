:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list)).
:- modeb(*,f(+list)).
%% :- modeb(*,cons(+element,+list,-list)).

:- determination(f/1,head/2).
:- determination(f/1,tail/2).
:- determination(f/1,geq/2).
:- determination(f/1,empty/1).
:- determination(f/1,even/1).
:- determination(f/1,odd/1).
:- determination(f/1,one/1).
:- determination(f/1,zero/1).
:- determination(f/1,decrement/2).
:- determination(f/1,f/1).
%% :- determination(f/1,element/2).
%% :- determination(f/1,increment/2).
%% :- determination(f/1,element/2).
%% :- determination(f/1,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.

my_append(A,B,C):-
    append(A,[B],C).





c_0(0).
c_1(1).
c_2(2).
c_3(3).
c_4(4).
c_5(5).
c_6(6).
c_7(7).
c_8(8).
c_9(9).
c_10(10).
c_11(11).
c_12(12).
c_13(13).
c_14(14).
c_15(15).
c_16(16).
c_17(17).
c_18(18).
c_19(19).
c_20(20).
c_21(21).
c_22(22).
c_23(23).
c_24(24).
c_25(25).
c_26(26).
c_27(27).
c_28(28).
c_29(29).
c_30(30).
c_31(31).
c_32(32).
c_33(33).
c_34(34).
c_35(35).
c_36(36).
c_37(37).
c_38(38).
c_39(39).
c_40(40).
c_41(41).
c_42(42).
c_43(43).
c_44(44).
c_45(45).
c_46(46).
c_47(47).
c_48(48).
c_49(49).
c_50(50).
c_51(51).
c_52(52).
c_53(53).
c_54(54).
c_55(55).
c_56(56).
c_57(57).
c_58(58).
c_59(59).
c_60(60).
c_61(61).
c_62(62).
c_63(63).
c_64(64).
c_65(65).
c_66(66).
c_67(67).
c_68(68).
c_69(69).
c_70(70).
c_71(71).
c_72(72).
c_73(73).
c_74(74).
c_75(75).
c_76(76).
c_77(77).
c_78(78).
c_79(79).
c_80(80).
c_81(81).
c_82(82).
c_83(83).
c_84(84).
c_85(85).
c_86(86).
c_87(87).
c_88(88).
c_89(89).
c_90(90).
c_91(91).
c_92(92).
c_93(93).
c_94(94).
c_95(95).
c_96(96).
c_97(97).
c_98(98).
c_99(99).
c_100(100).
:-end_bg.
:-begin_in_pos.
f([37, 47, 83]).
f([2, 10, 26, 29, 34, 37, 38, 41, 56, 61, 76, 79, 95, 98]).
f([1, 2, 6, 9, 13, 14, 18, 19, 20, 22, 27, 28, 28, 32, 32, 34, 36, 37, 37, 37, 39, 42, 43, 43, 44, 46, 52, 54, 56, 59, 60, 60, 63, 67, 68, 70, 74, 80, 85, 85, 87, 89, 91, 92, 92, 92, 92, 101]).
f([3, 4, 21, 24, 24, 30, 35, 36, 40, 42, 51, 51, 53, 53, 56, 60, 60, 67, 75, 76, 79, 80, 89, 97]).
f([4, 8, 10, 13, 14, 17, 17, 19, 19, 21, 22, 22, 23, 24, 24, 24, 27, 28, 29, 31, 38, 43, 44, 44, 47, 48, 49, 52, 56, 56, 58, 58, 60, 60, 73, 74, 78, 78, 79, 81, 82, 85, 87, 88, 88, 95, 96, 99, 99, 100, 100]).
f([2, 4, 20, 24, 26, 29, 30, 44, 57, 61, 63, 70, 78, 81, 82, 86, 88, 98, 98]).
f([7, 11, 17, 18, 20, 24, 25, 26, 35, 36, 44, 49, 49, 57, 60, 63, 67, 71, 75, 76, 82, 87, 89, 91, 94, 95, 95, 100]).
f([7, 12, 12, 14, 30, 30, 36, 37, 39, 40, 50, 52, 52, 53, 56, 56, 59, 61, 62, 64, 67, 69, 86, 89, 90, 91, 92, 93, 96, 99, 101]).
f([2, 5, 9, 11, 13, 14, 15, 15, 21, 24, 25, 27, 32, 34, 40, 44, 49, 51, 53, 56, 57, 59, 59, 61, 61, 67, 68, 70, 72, 73, 74, 75, 79, 83, 87, 88, 90, 90, 93, 96, 97, 99, 101]).
f([1, 10, 10, 11, 14, 24, 24, 26, 29, 32, 48, 48, 51, 58, 69, 74, 76, 78, 100, 101]).
f([4, 4, 5, 11, 25, 25, 25, 28, 30, 32, 32, 33, 34, 36, 40, 40, 42, 46, 47, 57, 58, 58, 59, 60, 61, 61, 61, 64, 64, 64, 65, 66, 67, 69, 69, 70, 74, 79, 82, 83, 86, 88, 90, 90, 90, 91, 92, 93, 94, 95, 99]).
f([17, 21, 24, 30, 37, 40, 43, 51, 52, 52, 59, 76, 80, 88, 101]).
f([1, 2, 5, 5, 13, 13, 14, 16, 25, 31, 39, 39, 48, 52, 63, 68, 71, 72, 76, 77, 82, 86, 93, 94, 96, 98]).
f([7, 29, 59, 70]).
f([2, 12, 16, 18, 22, 25, 34, 36, 37, 37, 37, 47, 49, 50, 51, 52, 52, 53, 54, 55, 64, 68, 68, 73, 75, 77, 79, 81, 81, 83, 84, 84, 85, 86, 87, 88, 95, 96]).
f([17, 21, 40, 44, 44, 65, 68, 75, 89, 98, 99]).
f([8, 13, 36, 41, 56, 60, 61, 65, 69, 72, 77, 85, 87, 88, 90, 101]).
f([1, 2, 5, 7, 7, 8, 16, 19, 23, 29, 31, 32, 33, 35, 35, 39, 42, 44, 46, 46, 47, 56, 58, 63, 77, 78, 78, 79, 82, 85, 90, 96, 96, 99, 99, 100, 100]).
f([24, 25, 26, 33, 34, 34, 39, 61, 71, 91, 97, 97]).
f([3, 9, 17, 18, 21, 21, 22, 23, 24, 24, 25, 26, 26, 28, 30, 33, 36, 37, 43, 49, 52, 52, 56, 57, 60, 61, 61, 61, 65, 67, 71, 73, 79, 81, 83, 85, 89, 91, 96, 97, 98, 100, 101, 101]).
:-end_in_pos.
:-begin_in_neg.
f([75, 51, 50, 89, 19, 4, 82, 59, 47, 42, 2, 76, 40, 98, 57, 66, 31, 4, 6, 48, 101, 3, 101, 90, 19, 17, 42, 5, 78, 55, 47, 53, 47, 32, 45, 60, 41, 4, 69, 10, 83, 8, 8, 14, 45, 47]).
f([27, 60, 22, 64, 62, 82, 57, 66, 69, 37, 42, 28, 29, 59, 65]).
f([27, 67, 101, 87, 10, 15, 84, 78, 70, 49, 13, 77, 101, 4, 66, 10, 53, 72, 61]).
f([61, 74, 56, 64, 19, 62, 44, 45, 83, 76, 80, 7, 28, 40, 57, 39, 51, 29, 56, 99, 62, 78, 12, 88, 55, 45, 75, 62, 8, 83, 101, 17]).
f([67, 29, 79, 62, 13, 34, 22, 36, 30, 45, 27, 79, 93, 80, 25, 94]).
f([17, 81, 31, 37, 88, 3, 34, 3, 38]).
f([89, 62, 2, 24, 59, 9, 51, 86, 93, 39, 49, 42, 90, 19, 100, 9, 85, 88, 13, 81, 4, 100, 20, 75, 47, 60, 30]).
f([10, 83, 48, 15, 39, 93, 48, 67, 88, 45]).
f([37, 94, 50, 5, 89, 77, 23, 21, 73, 43, 52, 30, 54, 88, 21, 32, 52, 72, 22, 63, 41, 87]).
f([97, 91, 20, 67, 76, 79, 96, 3, 65, 84, 83, 28, 68, 28, 90, 3, 67, 14, 46, 39, 58]).
f([39, 90, 35, 44, 17, 83, 20, 67, 49, 8, 68, 75, 22, 28, 89, 24, 38, 45, 60, 5, 6, 47, 35, 13, 86, 34, 15, 86, 15, 89, 79, 56, 76, 22, 24, 89, 58, 99]).
f([31, 52, 70, 36, 9, 16, 58, 75, 97, 7, 8, 70, 94, 33, 55, 14, 57, 75, 8]).
f([69, 6, 94, 29, 68, 10, 13, 15, 64, 13, 39, 92, 46, 32, 11, 17, 79, 98, 19, 11, 32, 87, 17, 57, 98, 97, 54, 89, 42, 3]).
f([45, 68, 90, 50, 12, 69, 91, 51, 61, 21, 36, 69, 44, 73, 28, 48, 34, 17, 53, 81]).
f([82, 16, 81, 65, 92, 38, 17, 2, 3, 70, 97, 34, 10, 53, 99, 87, 29, 7, 3, 40, 88, 26, 28, 21, 78, 18, 12, 13, 71, 71, 25, 13, 16, 87, 11, 22, 89, 14, 51, 79, 58, 24, 63]).
f([31, 76, 11, 33, 96, 51, 47, 19, 1, 84, 51, 56, 62, 43, 66, 77, 54, 16, 56, 101, 19, 46, 27, 19, 37, 62, 27, 30, 51, 33, 80, 14, 80, 94, 64, 76, 95]).
f([2, 89, 92, 73, 98, 67, 85, 72, 4, 95, 95, 99, 96, 98, 2, 61, 84, 31, 5, 73, 68, 80, 6, 2, 90, 27, 29, 39]).
f([34, 68, 52, 63]).
f([95, 16, 85, 76, 66, 91, 9, 46, 14, 74, 63, 15, 101, 65, 5, 55, 81, 37, 21, 54, 58, 56, 66, 6, 30, 49, 75, 46, 84, 12, 37, 14, 100, 95, 22, 32, 24, 92, 82, 43, 33, 86, 22, 31, 76, 24, 36, 94, 22, 99]).
f([23, 6]).
:-end_in_neg.

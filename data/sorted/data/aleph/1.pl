:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list)).
:- modeb(*,f(+list)).
%% :- modeb(*,cons(+element,+list,-list)).

:- determination(f/1,head/2).
:- determination(f/1,tail/2).
:- determination(f/1,geq/2).
:- determination(f/1,empty/1).
:- determination(f/1,even/1).
:- determination(f/1,odd/1).
:- determination(f/1,one/1).
:- determination(f/1,zero/1).
:- determination(f/1,decrement/2).
:- determination(f/1,f/1).
%% :- determination(f/1,element/2).
%% :- determination(f/1,increment/2).
%% :- determination(f/1,element/2).
%% :- determination(f/1,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.

my_append(A,B,C):-
    append(A,[B],C).





c_0(0).
c_1(1).
c_2(2).
c_3(3).
c_4(4).
c_5(5).
c_6(6).
c_7(7).
c_8(8).
c_9(9).
c_10(10).
c_11(11).
c_12(12).
c_13(13).
c_14(14).
c_15(15).
c_16(16).
c_17(17).
c_18(18).
c_19(19).
c_20(20).
c_21(21).
c_22(22).
c_23(23).
c_24(24).
c_25(25).
c_26(26).
c_27(27).
c_28(28).
c_29(29).
c_30(30).
c_31(31).
c_32(32).
c_33(33).
c_34(34).
c_35(35).
c_36(36).
c_37(37).
c_38(38).
c_39(39).
c_40(40).
c_41(41).
c_42(42).
c_43(43).
c_44(44).
c_45(45).
c_46(46).
c_47(47).
c_48(48).
c_49(49).
c_50(50).
c_51(51).
c_52(52).
c_53(53).
c_54(54).
c_55(55).
c_56(56).
c_57(57).
c_58(58).
c_59(59).
c_60(60).
c_61(61).
c_62(62).
c_63(63).
c_64(64).
c_65(65).
c_66(66).
c_67(67).
c_68(68).
c_69(69).
c_70(70).
c_71(71).
c_72(72).
c_73(73).
c_74(74).
c_75(75).
c_76(76).
c_77(77).
c_78(78).
c_79(79).
c_80(80).
c_81(81).
c_82(82).
c_83(83).
c_84(84).
c_85(85).
c_86(86).
c_87(87).
c_88(88).
c_89(89).
c_90(90).
c_91(91).
c_92(92).
c_93(93).
c_94(94).
c_95(95).
c_96(96).
c_97(97).
c_98(98).
c_99(99).
c_100(100).
:-end_bg.
:-begin_in_pos.
f([5, 12, 34, 41, 48, 58, 72, 76, 100]).
f([17, 20, 21, 27, 31, 35, 42, 43, 50, 58, 68, 79, 89, 98]).
f([11, 11, 26, 45, 52, 54, 66, 83]).
f([3, 5, 8, 17, 22, 23, 31, 33, 41, 49, 51, 51, 55, 56, 65, 67, 70, 70, 72, 72, 80, 88, 91, 92, 95, 98, 99, 100]).
f([1, 3, 4, 6, 18, 18, 20, 23, 25, 30, 35, 45, 47, 50, 52, 55, 59, 62, 62, 66, 70, 71, 73, 80, 80, 83, 84, 85, 88, 90, 94, 96]).
f([20, 26, 29, 29, 34, 35, 37, 42, 44, 50, 52, 54, 55, 56, 63, 63, 66, 78, 78, 86, 87, 98]).
f([55, 70, 101]).
f([5, 6, 12, 15, 19, 20, 26, 27, 32, 37, 39, 41, 44, 48, 52, 65, 68, 68, 77, 90, 98, 99]).
f([1, 5, 5, 7, 15, 16, 20, 20, 21, 21, 23, 25, 28, 28, 32, 32, 34, 36, 38, 39, 42, 44, 46, 46, 52, 52, 56, 63, 68, 69, 70, 72, 73, 74, 74, 79, 80, 83, 86, 86, 88, 96, 99, 101]).
f([1, 3, 4, 6, 9, 11, 25, 26, 27, 27, 28, 31, 35, 40, 43, 46, 47, 51, 52, 56, 57, 57, 58, 66, 69, 71, 75, 76, 77, 86, 86, 88, 90, 91, 100]).
f([7, 45, 46, 47, 56, 59, 83, 93]).
f([4, 6, 9, 9, 12, 13, 17, 19, 28, 31, 33, 36, 38, 38, 39, 40, 46, 47, 47, 49, 50, 51, 51, 61, 62, 69, 69, 77, 83, 88, 90, 90, 91, 91, 92, 93, 96, 97, 101, 101]).
f([1, 3, 4, 4, 7, 11, 11, 15, 16, 17, 17, 18, 19, 21, 23, 29, 33, 34, 46, 52, 54, 54, 55, 57, 60, 63, 68, 68, 77, 78, 80, 84, 89, 90, 90, 98]).
f([17, 31, 32, 34, 45, 49, 51, 53, 54, 57, 60, 70]).
f([4, 6, 6, 11, 14, 15, 16, 25, 28, 29, 33, 38, 40, 56, 60, 65, 77, 77, 79, 81, 82, 83, 85, 91, 93, 99, 100, 101]).
f([5, 8, 11, 14, 22, 24, 36, 42, 44, 45, 47, 53, 53, 55, 56, 59, 60, 65, 65, 67, 74, 75, 78, 83, 89, 90, 93, 97]).
f([3, 4, 5, 6, 13, 13, 13, 15, 16, 17, 17, 20, 21, 23, 24, 24, 26, 29, 31, 35, 43, 47, 62, 75, 75, 76, 79, 81, 83, 83, 86, 93, 95, 97]).
f([3, 6, 14, 15, 20, 21, 22, 26, 28, 31, 32, 33, 34, 39, 41, 41, 50, 54, 71, 72, 80, 83, 92, 96, 97, 97, 100]).
f([9, 25, 35, 37, 43, 44, 65, 66, 66, 85, 89, 90, 93, 97]).
f([12, 17, 22, 28, 38, 45, 45, 56]).
:-end_in_pos.
:-begin_in_neg.
f([6, 91, 34, 17, 3, 8, 24, 72, 72, 42, 36, 60, 11]).
f([66, 99, 43, 36, 75, 7, 27, 68, 77, 21, 12, 68, 26, 14, 49, 19, 24, 100, 98, 59, 82, 37, 16, 72, 16, 54, 48, 97, 84, 22, 95, 59, 28, 45, 26, 80, 18, 9, 23, 74, 98, 81]).
f([68, 75, 55, 48, 97, 64, 44, 38, 22, 85, 7, 34, 13, 10, 98, 16, 21, 94, 41, 18, 3, 72, 18, 58, 79, 34, 74, 84, 40, 78, 19, 65, 81, 84, 5, 63, 39, 97, 82, 41]).
f([99, 2, 51, 76, 93, 58, 96, 94, 8, 41, 40, 75, 100, 67, 79, 81, 70, 4, 79, 71, 60, 64, 58, 50, 78, 30, 20, 50, 30, 65, 50, 82, 51, 74, 20]).
f([27, 50, 53, 83, 24, 62, 88, 2, 76, 52, 27, 45, 48, 15, 21]).
f([36, 19, 14, 45]).
f([61, 93, 24, 79, 70, 29, 83, 1, 19, 19, 96, 34, 58, 64, 94, 28, 86, 14, 58, 35, 28, 72, 50, 33, 28, 83, 72, 8, 82, 33, 92, 91, 15, 77, 1, 19, 20, 29, 96, 48, 8, 24, 77, 25, 78, 69, 36, 62, 10, 81, 21]).
f([17, 6, 45, 77, 57, 6, 28, 67, 39, 1, 58, 97, 99]).
f([70, 7]).
f([49, 68, 39, 59, 35, 53, 40, 40, 64, 90, 11, 9, 44]).
f([90, 26, 101, 13, 29, 37, 5, 74, 81, 70, 16, 66, 17, 84, 23, 68, 9, 50, 28, 67, 92, 60, 7, 91, 26, 35, 96, 80, 80, 44, 79, 48, 92, 100, 99, 20, 24, 25, 31]).
f([97, 63, 54, 69, 77, 25, 29, 19, 64, 54, 28, 91, 36, 46, 91, 6, 13, 35, 79, 34, 52, 20, 13, 19, 20, 36, 9, 82, 15, 20, 7, 61, 2, 74, 21, 29, 85, 101, 31]).
f([59, 5, 13, 70, 13, 44, 86, 100, 32, 15, 29, 101, 57, 50, 9, 13, 37, 40, 90, 30, 42, 46, 97, 73, 51, 67, 46, 81, 21, 38]).
f([92, 49, 98, 7, 71, 63, 12, 9, 44, 62, 17, 66, 69, 96, 20, 69, 68, 15, 71, 26, 8, 50, 70, 62, 88, 57, 70, 72, 95, 5, 92, 65, 42, 39, 4, 100, 26, 74, 44, 8, 2, 56, 55, 61]).
f([7, 44, 72, 98, 26, 92, 28, 68, 72, 86, 94, 67, 83, 58, 90, 13, 26, 94, 34]).
f([11, 67, 76, 46, 29, 65, 79, 93, 99]).
f([16, 39, 27, 3, 49, 72, 36, 61, 81, 55, 99, 23, 5, 63, 9, 81, 3, 11, 73, 24, 87, 91, 44, 66, 79, 18, 94, 63, 18, 17, 69, 71, 41, 31, 76, 48, 89, 5, 70, 49, 23, 85, 81]).
f([20, 71, 55, 100, 14, 56, 61, 32, 88, 47, 4, 77, 84, 72, 16, 20, 100, 101, 58, 59, 70, 5, 4, 94, 5, 85, 53, 61, 82, 89, 26, 5, 23, 22, 19, 59, 99, 29, 92, 25, 99, 35, 72, 7, 45]).
f([6, 90, 9, 63, 38, 37, 61, 33, 65, 15, 94, 55]).
f([55, 6, 45, 35, 45, 11, 75, 75, 88, 9, 48, 52, 14, 1, 91, 77, 56, 69, 89, 13, 30, 10, 7, 16, 73]).
:-end_in_neg.

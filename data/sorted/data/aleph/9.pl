:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list)).
:- modeb(*,f(+list)).
%% :- modeb(*,cons(+element,+list,-list)).

:- determination(f/1,head/2).
:- determination(f/1,tail/2).
:- determination(f/1,geq/2).
:- determination(f/1,empty/1).
:- determination(f/1,even/1).
:- determination(f/1,odd/1).
:- determination(f/1,one/1).
:- determination(f/1,zero/1).
:- determination(f/1,decrement/2).
:- determination(f/1,f/1).
%% :- determination(f/1,element/2).
%% :- determination(f/1,increment/2).
%% :- determination(f/1,element/2).
%% :- determination(f/1,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.

my_append(A,B,C):-
    append(A,[B],C).





c_0(0).
c_1(1).
c_2(2).
c_3(3).
c_4(4).
c_5(5).
c_6(6).
c_7(7).
c_8(8).
c_9(9).
c_10(10).
c_11(11).
c_12(12).
c_13(13).
c_14(14).
c_15(15).
c_16(16).
c_17(17).
c_18(18).
c_19(19).
c_20(20).
c_21(21).
c_22(22).
c_23(23).
c_24(24).
c_25(25).
c_26(26).
c_27(27).
c_28(28).
c_29(29).
c_30(30).
c_31(31).
c_32(32).
c_33(33).
c_34(34).
c_35(35).
c_36(36).
c_37(37).
c_38(38).
c_39(39).
c_40(40).
c_41(41).
c_42(42).
c_43(43).
c_44(44).
c_45(45).
c_46(46).
c_47(47).
c_48(48).
c_49(49).
c_50(50).
c_51(51).
c_52(52).
c_53(53).
c_54(54).
c_55(55).
c_56(56).
c_57(57).
c_58(58).
c_59(59).
c_60(60).
c_61(61).
c_62(62).
c_63(63).
c_64(64).
c_65(65).
c_66(66).
c_67(67).
c_68(68).
c_69(69).
c_70(70).
c_71(71).
c_72(72).
c_73(73).
c_74(74).
c_75(75).
c_76(76).
c_77(77).
c_78(78).
c_79(79).
c_80(80).
c_81(81).
c_82(82).
c_83(83).
c_84(84).
c_85(85).
c_86(86).
c_87(87).
c_88(88).
c_89(89).
c_90(90).
c_91(91).
c_92(92).
c_93(93).
c_94(94).
c_95(95).
c_96(96).
c_97(97).
c_98(98).
c_99(99).
c_100(100).
:-end_bg.
:-begin_in_pos.
f([1, 2, 7, 16, 19, 23, 26, 26, 28, 30, 30, 32, 34, 39, 39, 44, 46, 57, 61, 66, 66, 70, 71, 72, 75, 76, 77, 78, 85, 86, 96, 96, 97, 98, 99, 99]).
f([4, 8, 9, 10, 10, 11, 12, 14, 14, 15, 18, 19, 20, 21, 22, 23, 23, 26, 26, 27, 28, 29, 31, 35, 38, 41, 41, 55, 55, 56, 58, 58, 59, 60, 60, 65, 66, 67, 72, 73, 75, 85, 86, 90, 92, 93, 94, 96, 97, 99, 101]).
f([4, 13, 16, 16, 18, 18, 19, 23, 25, 25, 38, 39, 43, 49, 53, 55, 56, 57, 59, 67, 70, 75, 75, 82, 85, 96]).
f([1, 5, 11, 14, 14, 17, 20, 22, 30, 36, 39, 40, 41, 43, 44, 44, 58, 58, 62, 64, 65, 69, 70, 71, 80, 82, 83, 87, 89, 91, 93, 93, 94, 94, 96]).
f([1, 3, 10, 15, 15, 16, 18, 22, 22, 23, 24, 24, 26, 33, 34, 35, 37, 39, 42, 47, 50, 54, 57, 57, 59, 61, 66, 66, 67, 69, 71, 74, 76, 79, 84, 84, 85, 88, 91, 92, 95, 95, 99, 99]).
f([13, 22, 28, 42, 42, 42, 43, 43, 49, 50, 58, 59, 63, 66, 66, 68, 70, 70, 72, 75, 76, 76, 81, 85, 85, 88, 90, 93, 93, 95, 96]).
f([8, 27, 41, 74, 83]).
f([1, 1, 2, 2, 3, 4, 7, 16, 19, 20, 21, 28, 29, 31, 38, 38, 44, 44, 50, 54, 54, 55, 60, 63, 63, 64, 71, 73, 87, 87]).
f([1, 3, 3, 4, 4, 9, 11, 13, 15, 17, 19, 22, 30, 32, 36, 37, 37, 44, 44, 50, 50, 51, 53, 54, 54, 58, 59, 64, 64, 71, 72, 74, 75, 80, 83, 88, 91, 93]).
f([5, 7, 7, 10, 18, 22, 24, 27, 27, 27, 36, 40, 45, 45, 47, 49, 53, 55, 57, 59, 60, 62, 63, 64, 66, 71, 74, 78, 84, 84, 84, 84, 88, 88, 89, 96, 97, 101]).
f([36, 55, 63, 72, 72]).
f([3, 6, 17, 26, 28, 30, 47, 48, 57, 60, 65, 65, 70, 72, 73, 75, 76, 77, 81, 82, 82, 87, 89, 91]).
f([2, 2, 2, 4, 6, 13, 14, 16, 18, 18, 21, 21, 23, 23, 23, 25, 26, 27, 29, 39, 41, 43, 46, 46, 49, 50, 51, 54, 55, 59, 62, 65, 68, 74, 76, 78, 78, 80, 82, 84, 85, 86, 86, 87, 89, 89, 89, 94, 94]).
f([7, 7, 10, 14, 15, 15, 16, 16, 32, 37, 41, 44, 45, 49, 50, 53, 60, 65, 71, 72, 73, 73, 78, 81, 81, 92, 98, 99, 101]).
f([1, 3, 3, 4, 6, 7, 10, 15, 20, 26, 27, 28, 35, 39, 39, 44, 44, 45, 45, 45, 48, 48, 50, 51, 51, 52, 56, 57, 58, 68, 70, 72, 73, 78, 82, 93, 93, 97, 99]).
f([30, 84]).
f([5, 10, 13, 15, 20, 21, 27, 29, 29, 32, 34, 36, 36, 36, 41, 44, 45, 46, 47, 49, 52, 54, 55, 55, 57, 57, 60, 60, 61, 61, 64, 70, 71, 75, 76, 80, 82, 83, 86, 86, 88, 88, 90, 90, 91, 94, 95, 96, 99]).
f([1, 11, 18, 21, 23, 23, 26, 29, 34, 41, 51, 56, 57, 66, 68, 74]).
f([3, 7, 11, 12, 14, 23, 30, 33, 34, 36, 41, 44, 48, 51, 55, 68, 70, 71, 83, 85, 86, 90, 94, 95, 95, 98]).
f([2, 3, 7, 8, 10, 22, 24, 25, 35, 36, 43, 44, 45, 48, 51, 51, 52, 53, 57, 57, 66, 68, 69, 70, 74, 74, 74, 75, 83, 85, 87, 92, 98, 98, 100]).
:-end_in_pos.
:-begin_in_neg.
f([76, 20, 97, 69, 22, 29, 30, 27, 44, 74]).
f([12, 65, 15, 96, 32, 98, 12, 52, 96, 21, 20, 76, 10, 98, 62, 23, 76, 40, 99, 77, 55, 74, 58, 79, 19]).
f([51, 75, 92, 93, 88, 10, 10, 13, 65, 71, 68, 60, 53, 101, 44, 96, 98, 98, 36, 54, 31, 80, 92, 98, 26, 39, 101, 52, 50, 11, 45, 9, 58, 33]).
f([23, 79, 72, 8, 96, 6, 64, 62, 14, 48, 82, 22, 72, 82, 82, 57]).
f([17, 20, 101, 18, 78, 8, 59, 101, 86, 82, 39, 59, 75, 93, 3, 95, 68, 49, 28, 15, 35]).
f([52, 83, 61, 60, 10, 63, 48, 16, 27, 3]).
f([66, 54, 83, 78, 94, 65, 6, 65, 22]).
f([93, 24, 12, 6, 94, 73, 57, 73, 11, 98, 69, 14, 19, 83, 33, 68, 69, 45, 75, 56, 1, 84, 42, 6, 47, 51, 87, 65, 65, 67, 75, 2, 47, 35, 17, 28, 70, 67, 59, 35, 29, 45, 63, 88]).
f([45, 46, 68, 24, 55, 63, 22, 54, 5, 71, 1, 44, 11, 14, 88, 31, 67, 72, 41, 64, 67, 78, 70, 12, 22]).
f([33, 40, 69, 77, 35, 7, 53, 64, 56, 15]).
f([48, 55, 34, 59, 75, 34, 44, 45, 73, 27, 9, 6, 63, 36, 91, 7, 27, 71, 2, 82, 8, 88, 4, 89, 39, 2, 100, 97, 17, 37, 8]).
f([73, 74, 3, 88, 65, 67, 22, 58, 68, 36, 5, 18, 96, 58, 93, 68, 101, 16, 45, 6, 71, 52, 40, 20, 82, 21, 59, 79, 86, 43, 54]).
f([64, 20, 9, 96, 76, 25, 33, 67, 64, 31, 62, 26, 42, 56, 41, 59, 93, 69, 51, 21, 24, 11, 49, 6, 65, 68, 34, 32, 8, 65, 99, 98, 3, 55, 58, 73, 55, 74, 21, 44, 39, 88, 6, 95, 44, 53, 22]).
f([82, 77, 98, 18, 43, 6, 15, 17, 31, 45, 88, 46, 84, 68, 98, 22, 30, 73, 46, 21, 44, 46, 16, 79, 23, 24, 21, 25, 84, 65, 12, 77, 88, 62, 2, 76, 95, 60, 76, 3, 99, 12, 50, 13, 65]).
f([24, 64, 43, 3, 19, 84, 98, 100, 86, 72, 23, 33, 95, 97, 52, 69, 24, 45, 100, 60, 68, 45, 69, 8, 52, 49]).
f([72, 62, 8, 59, 73, 81, 51, 61]).
f([39, 16, 55, 53, 96, 10, 15, 25, 3, 96, 12, 3, 5, 7, 21, 59, 64, 3, 44, 95, 56, 91, 11, 25, 9, 20, 17, 53, 42, 18, 3, 41, 89, 69, 83, 66, 24, 48, 70, 81, 77, 17, 37, 56, 73, 84]).
f([2, 30, 67, 50, 10, 4, 71, 67, 65, 56, 76, 13, 89, 99, 62, 51, 49, 29, 82, 43, 50, 91, 54, 28, 29, 86, 86, 3, 32, 28, 70, 25, 34, 17, 77, 56, 91, 99, 30, 56, 51, 39, 84, 66, 33, 31]).
f([72, 32, 42, 71, 34, 40, 23, 34, 10, 36, 2, 73, 96, 66, 7, 77, 10, 75, 55, 14, 5, 82, 91, 42, 20]).
f([24, 51, 27, 61, 89, 36, 64, 53, 3, 43, 98, 30, 72, 56, 4, 93, 65, 48, 26, 15, 91, 51, 31, 79, 89, 87, 41, 58, 85, 41, 66, 3, 73, 96, 49, 55, 93, 38, 74, 69, 54, 13, 95, 63, 33]).
:-end_in_neg.

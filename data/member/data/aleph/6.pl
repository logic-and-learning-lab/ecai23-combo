:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,-element)).
:- modeb(*,f(+list,-element)).
%% :- modeb(*,cons(+element,+list,-list)).

:- determination(f/2,head/2).
:- determination(f/2,tail/2).
:- determination(f/2,geq/2).
:- determination(f/2,empty/1).
:- determination(f/2,even/1).
:- determination(f/2,odd/1).
:- determination(f/2,one/1).
:- determination(f/2,zero/1).
:- determination(f/2,decrement/2).
:- determination(f/2,f/2).
%% :- determination(f/2,element/2).
%% :- determination(f/2,increment/2).
%% :- determination(f/2,element/2).
%% :- determination(f/2,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.

my_append(A,B,C):-
    append(A,[B],C).





c_0(0).
c_1(1).
c_2(2).
c_3(3).
c_4(4).
c_5(5).
c_6(6).
c_7(7).
c_8(8).
c_9(9).
c_10(10).
c_11(11).
c_12(12).
c_13(13).
c_14(14).
c_15(15).
c_16(16).
c_17(17).
c_18(18).
c_19(19).
c_20(20).
c_21(21).
c_22(22).
c_23(23).
c_24(24).
c_25(25).
c_26(26).
c_27(27).
c_28(28).
c_29(29).
c_30(30).
c_31(31).
c_32(32).
c_33(33).
c_34(34).
c_35(35).
c_36(36).
c_37(37).
c_38(38).
c_39(39).
c_40(40).
c_41(41).
c_42(42).
c_43(43).
c_44(44).
c_45(45).
c_46(46).
c_47(47).
c_48(48).
c_49(49).
c_50(50).
c_51(51).
c_52(52).
c_53(53).
c_54(54).
c_55(55).
c_56(56).
c_57(57).
c_58(58).
c_59(59).
c_60(60).
c_61(61).
c_62(62).
c_63(63).
c_64(64).
c_65(65).
c_66(66).
c_67(67).
c_68(68).
c_69(69).
c_70(70).
c_71(71).
c_72(72).
c_73(73).
c_74(74).
c_75(75).
c_76(76).
c_77(77).
c_78(78).
c_79(79).
c_80(80).
c_81(81).
c_82(82).
c_83(83).
c_84(84).
c_85(85).
c_86(86).
c_87(87).
c_88(88).
c_89(89).
c_90(90).
c_91(91).
c_92(92).
c_93(93).
c_94(94).
c_95(95).
c_96(96).
c_97(97).
c_98(98).
c_99(99).
c_100(100).
:-end_bg.
:-begin_in_pos.
f([43, 41, 19, 83, 61, 13, 68, 48, 89, 65, 91, 88, 86, 97, 2, 71, 2, 19, 7, 70, 24, 101, 87, 48, 9, 88, 41, 29, 43, 85, 51, 23, 27, 69, 13],71).
f([5, 98, 77, 3, 16, 28, 10, 38, 37, 26],3).
f([5, 41, 93, 9, 47, 26],47).
f([41, 15, 57, 21, 87, 52, 20, 29, 77, 35, 9, 27, 37, 89, 2, 91, 96, 20, 5, 94, 30, 12, 72, 79, 8, 55, 58, 54, 59, 76, 59, 22, 11, 83, 14, 50, 80, 50, 22, 33, 59, 22],83).
f([19, 12, 48, 23, 29, 63, 38, 24, 31],12).
f([61, 39, 76, 68, 98, 36, 100, 86, 57, 54, 36, 15, 73, 100, 71, 54, 86, 32, 90, 93, 32, 66, 84, 77, 47, 14, 49, 22, 90, 5, 101, 97, 6, 79, 61, 66, 37, 10, 26, 31, 42, 56],86).
f([41, 69, 80, 38, 30, 3, 39, 73, 71, 82, 53, 99, 51, 100],69).
f([8, 65, 23, 53, 92, 91, 67, 14, 72, 82, 18, 29, 13, 84, 100, 33, 14, 52, 98, 76, 29, 39, 63, 60, 70, 48, 91, 40, 38, 84, 26, 85, 19, 54, 91, 98, 53, 3, 47, 81, 33, 31, 73, 83, 27, 9, 47, 74, 59],47).
f([69, 39, 10, 25, 60, 76],39).
f([40, 92, 88, 77, 46, 100, 64, 101, 68, 32, 27, 28, 81, 4, 94, 20, 28, 37, 26, 16, 41, 69, 12, 68, 93, 5, 84, 46, 16, 17, 75, 47, 89, 28, 8, 100, 80, 45, 101, 30, 72, 64],26).
f([92, 43, 5, 88, 83, 1, 68, 73, 53, 79, 55, 18, 94, 31, 42, 90, 83, 56, 22, 50, 29, 75, 74, 35, 52, 82, 91, 34, 39, 59, 18],83).
f([8, 75, 26, 12, 95, 45, 41, 59, 19, 33, 83, 98, 92, 45, 37, 32, 58, 21, 64, 64, 3, 35, 36, 48, 72, 64, 100, 78, 87, 65, 42, 101, 65, 66, 96, 93, 91, 11, 88, 44],96).
f([84, 87, 73, 73, 54, 74, 70, 62, 12, 38, 56, 31, 32, 39, 79, 100, 84, 98, 34, 87, 89, 21, 55, 43, 30, 63, 94, 68, 85, 57, 65, 95, 45, 75, 68, 97, 64, 46, 5, 76, 73, 23, 40, 47, 6, 47, 1, 8],6).
f([84, 27, 36],84).
f([71, 39, 55, 36, 82, 51, 51, 92, 14, 30, 92, 53],92).
f([49, 85, 93, 28, 35, 22, 67, 88, 88, 62, 73, 41, 25, 90, 47, 27, 9, 9, 4, 61, 63, 52, 38, 47, 99, 80, 86, 18, 24, 57, 59, 54, 20, 45],35).
f([3, 25, 20, 96, 12, 34, 28, 14, 18, 18, 39, 18, 4, 94, 16, 22, 48, 93, 93, 41, 70, 100, 41, 87, 38, 80, 95, 92, 6, 5, 90, 37, 98, 48, 57, 73, 42],14).
f([98, 64, 23, 101, 19, 69, 29, 67, 68, 89, 14, 57, 76, 23, 8, 58, 28, 30, 45, 29, 51, 94, 94, 49, 26, 48, 10, 86, 7, 61, 3, 32, 86, 81],67).
f([17, 15, 76, 77, 10, 58, 83, 43, 101, 50, 17, 19, 60, 88, 40],101).
f([76, 81, 94, 21, 72, 74, 101, 15, 55, 54, 3, 24, 94, 16, 98, 66, 84, 77, 52, 69, 37, 36, 47, 90, 56, 17, 42, 60, 20, 100, 48, 42, 6, 29, 36, 57, 94, 21, 29, 72],100).
:-end_in_pos.
:-begin_in_neg.
f([55, 84, 90, 20, 36, 52, 65, 80, 59, 66, 12, 23, 78, 72, 23, 101, 51, 22, 16, 51, 101, 33, 99, 78, 14, 96, 66, 17, 97, 51, 87, 27, 9, 35, 95, 74, 68, 11, 55, 53, 31, 23, 5, 11],42).
f([57, 54, 25, 15, 72, 71, 78, 4, 2, 59, 65, 26, 41, 95, 67, 35, 86, 29, 52, 53, 30, 20, 86, 19, 9, 50, 90, 2, 100],55).
f([72, 35, 84, 20],79).
f([46, 23, 44, 70, 78, 43, 46, 4, 90, 36, 24, 57, 60, 78, 97, 77, 96, 1, 85, 10, 13, 6, 44, 50, 45, 46, 70, 85, 55, 96, 75, 42, 31, 64, 56, 16, 79, 19, 30, 87, 68, 54, 63],62).
f([62, 12, 41, 37, 33, 6, 19, 99, 60, 20, 9, 87, 13, 77, 88, 55, 53, 94, 93, 93, 42, 17, 32, 51, 20, 61, 5, 22, 85, 16, 69, 69, 88, 51, 64, 100, 21, 35, 16],96).
f([71, 15, 63],47).
f([20, 40, 24, 37, 89, 39, 2, 86, 69, 98, 34, 7, 16, 21, 82, 71, 49, 5, 66, 73, 10, 43, 1, 18, 89, 17, 98, 7, 4, 51, 45, 73, 99, 94, 42, 92, 101, 32, 24, 47, 33, 20],70).
f([38, 8, 83, 50, 79, 37, 2, 5, 11, 94, 9, 72, 11, 87, 75, 47, 51, 56, 64],61).
f([62, 75, 83, 23, 6, 33, 89, 101, 10, 3, 63, 27, 6, 15, 18, 53, 100, 64, 87, 94, 67, 59, 8, 15, 61, 61, 13, 101, 46, 48, 91, 52, 15, 31],30).
f([72, 62, 94, 6],87).
f([26, 82, 80, 33, 34, 48, 47, 51, 29, 30, 43, 101, 29, 53, 76, 64, 92, 46, 67, 74, 20, 91, 101, 21, 15, 40, 38, 93, 8, 63, 57, 82, 84, 52],85).
f([56],71).
f([2, 54, 43, 90, 75, 25, 57, 34],78).
f([66, 13, 32, 13, 12, 50, 65, 68, 82, 27],64).
f([67, 23, 31, 82, 86, 78, 11, 81, 80, 30, 3, 4, 81, 2, 97, 60, 52, 70, 70, 9, 49, 68, 50, 97, 26, 35, 7, 75, 6, 100, 53, 38, 76, 77, 24, 27, 23, 62],19).
f([22, 101, 61, 21, 33, 36, 8, 76, 29, 34, 23, 67, 50, 25, 49, 85, 47, 52],18).
f([19, 68, 66, 4],36).
f([24, 83],26).
f([1, 79, 94, 24, 40, 86, 51, 75, 5, 5, 24, 46, 84, 14, 62, 70, 63, 61, 7, 5, 56, 42, 30, 10, 56, 99, 38, 93, 63, 4, 59, 69, 94, 34, 33, 8, 28, 26, 1, 71, 13, 62, 89, 47, 61, 64, 75, 5],97).
f([32, 61, 68, 48, 9, 32, 32, 37, 53, 95, 8, 82, 29, 77, 86, 14, 101, 69, 93, 16, 80, 55, 85, 4, 63, 13, 63, 39, 94, 101, 29, 38, 36, 50, 36, 42, 23, 43, 9, 65, 57, 50, 73, 46, 95, 19, 2],97).
:-end_in_neg.

:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,-element)).
:- modeb(*,f(+list,-element)).
%% :- modeb(*,cons(+element,+list,-list)).

:- determination(f/2,head/2).
:- determination(f/2,tail/2).
:- determination(f/2,geq/2).
:- determination(f/2,empty/1).
:- determination(f/2,even/1).
:- determination(f/2,odd/1).
:- determination(f/2,one/1).
:- determination(f/2,zero/1).
:- determination(f/2,decrement/2).
:- determination(f/2,f/2).
%% :- determination(f/2,element/2).
%% :- determination(f/2,increment/2).
%% :- determination(f/2,element/2).
%% :- determination(f/2,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.

my_append(A,B,C):-
    append(A,[B],C).





c_0(0).
c_1(1).
c_2(2).
c_3(3).
c_4(4).
c_5(5).
c_6(6).
c_7(7).
c_8(8).
c_9(9).
c_10(10).
c_11(11).
c_12(12).
c_13(13).
c_14(14).
c_15(15).
c_16(16).
c_17(17).
c_18(18).
c_19(19).
c_20(20).
c_21(21).
c_22(22).
c_23(23).
c_24(24).
c_25(25).
c_26(26).
c_27(27).
c_28(28).
c_29(29).
c_30(30).
c_31(31).
c_32(32).
c_33(33).
c_34(34).
c_35(35).
c_36(36).
c_37(37).
c_38(38).
c_39(39).
c_40(40).
c_41(41).
c_42(42).
c_43(43).
c_44(44).
c_45(45).
c_46(46).
c_47(47).
c_48(48).
c_49(49).
c_50(50).
c_51(51).
c_52(52).
c_53(53).
c_54(54).
c_55(55).
c_56(56).
c_57(57).
c_58(58).
c_59(59).
c_60(60).
c_61(61).
c_62(62).
c_63(63).
c_64(64).
c_65(65).
c_66(66).
c_67(67).
c_68(68).
c_69(69).
c_70(70).
c_71(71).
c_72(72).
c_73(73).
c_74(74).
c_75(75).
c_76(76).
c_77(77).
c_78(78).
c_79(79).
c_80(80).
c_81(81).
c_82(82).
c_83(83).
c_84(84).
c_85(85).
c_86(86).
c_87(87).
c_88(88).
c_89(89).
c_90(90).
c_91(91).
c_92(92).
c_93(93).
c_94(94).
c_95(95).
c_96(96).
c_97(97).
c_98(98).
c_99(99).
c_100(100).
:-end_bg.
:-begin_in_pos.
f([79, 64, 91, 92, 96, 30, 36, 85, 61, 41, 58, 69, 37, 42, 64, 67, 25, 57, 41, 9, 57, 27, 89, 60],91).
f([100, 75, 89, 58, 17, 50, 42, 92, 36, 78, 16, 46, 19, 49, 24, 62, 71, 42, 49, 30, 69, 74, 56, 53, 60, 99, 65, 62, 86, 64, 85, 98, 70, 90, 81, 70, 59, 100, 66],19).
f([90, 75, 35, 96, 26, 54, 65, 22, 44, 47, 95, 41, 16, 75, 75, 97, 38, 3, 51, 18, 20, 57, 44, 80, 75, 96, 46, 23, 101, 53, 66, 2, 55, 5, 20, 101, 76, 71, 25, 32, 38, 32, 95, 72, 22, 80, 56, 3, 45],96).
f([99, 46, 97, 68, 72, 45, 79, 21, 40, 63, 57, 66, 96, 37, 59, 43, 72, 42, 20, 10, 23, 88, 60, 61, 57, 96, 6, 18, 54, 64],64).
f([15, 24, 39, 36, 13, 68, 86, 10, 12, 1, 39, 5, 53, 92, 47, 96, 86, 77, 93, 57, 99, 82, 99, 75, 54, 81, 55],54).
f([12, 72, 40, 35, 51, 23, 69, 69, 47, 58, 67, 98, 41, 53, 65, 70, 24],40).
f([56, 38, 73, 15, 20, 12, 29, 53, 60, 91, 38, 49, 60, 25, 25, 77, 19, 88, 5, 13, 74, 80, 70, 9, 17, 7, 101, 60, 82, 48, 93, 77, 70, 27, 97, 7, 36, 13, 6, 12, 78, 77, 45],77).
f([72, 71, 47, 65, 24, 86, 63, 43, 53, 78, 22, 79],78).
f([78, 60, 4, 65, 3, 45, 71, 72, 69, 94, 5, 10, 46, 37, 82],4).
f([13, 14, 22, 30, 20, 49, 75, 8, 10, 78, 8, 32, 87, 38, 77, 88],20).
f([77, 8, 50, 14, 46, 72, 82, 52, 64, 87, 19, 10, 24, 101, 22, 6, 99, 94, 32, 19, 74, 43, 100, 61, 62, 79, 100, 68, 89, 56, 97],68).
f([26, 9, 89, 81, 42, 58, 8, 101, 60, 77, 34, 61, 57, 77, 10, 51, 31, 66, 19, 95, 76, 101, 100, 50, 32, 3, 15, 67, 86, 12, 51, 7, 53, 8, 26, 96, 82, 88, 20, 51, 48, 66, 98, 9, 16, 11, 60, 31, 98],50).
f([81, 33, 29, 89, 83, 79, 45, 93, 47, 44, 29, 16, 7, 86, 10, 28, 95, 78, 7],44).
f([43, 71, 27, 77, 19, 11, 94, 68, 34, 14, 98, 10, 79, 45],43).
f([90, 99, 7, 47, 22, 23, 30, 40, 35, 73, 80, 90, 11, 35, 22, 71, 87, 50, 4, 72, 47, 98, 35, 87, 39, 86, 54, 39, 68, 72, 70, 57, 70, 36, 59, 43, 86, 13, 6, 78, 93, 61],54).
f([6, 68, 78, 5, 92, 37, 77, 34, 48, 69, 88, 89, 79, 25, 73, 60, 66, 54, 5, 96, 86, 90, 32, 81, 43, 20, 37, 59, 91, 84, 5, 44, 61, 78, 42, 101, 101, 23, 21, 12, 70, 17, 80, 71, 80, 5, 88],48).
f([62, 34, 83, 99, 97, 87, 12, 94, 7, 39, 86, 53, 13, 75, 35, 51, 60, 76, 52, 4, 79, 56, 19, 51, 36, 25, 18, 30, 62, 56, 96, 96, 74, 57, 65],96).
f([65, 37, 40, 87, 9, 36, 57, 72, 9, 58, 33, 42, 30, 32, 80, 53, 88, 19, 59, 82, 63, 51, 88, 43, 77, 12, 92, 45, 11, 2, 95, 61, 13, 78, 20, 44, 85, 90, 25, 26, 37, 7, 33, 80],2).
f([4, 88, 83, 72, 5, 28, 72, 63, 37, 32, 36, 25, 20, 45, 56, 36, 4, 85, 72, 16, 82, 17, 13, 86, 66, 85, 61, 91, 49],45).
f([6, 5, 84, 98, 91, 80, 52, 63, 59, 12, 89, 34, 9, 36, 1, 49, 11, 41, 18, 5, 84, 51, 1, 13, 19, 37, 74, 12, 55, 26, 14, 92, 65, 99, 41, 56, 96, 44, 95, 73, 43, 18, 55, 4, 61, 82, 38, 38],44).
:-end_in_pos.
:-begin_in_neg.
f([79, 71, 62, 81, 54, 62, 64, 56, 73, 4, 78, 73, 96, 55, 42, 10, 40, 93, 87, 32, 81],30).
f([19, 36, 68, 59, 64, 51],88).
f([7, 100, 101, 82, 93, 89, 90, 21, 24, 17, 36, 13, 99, 7, 88, 25, 17, 29, 73, 26],55).
f([2, 67, 79, 15, 14, 38, 64, 56, 26],3).
f([87, 97, 45, 37, 17, 52, 27, 61, 61, 84, 13, 57, 16, 62, 46, 89, 93, 89, 62, 98, 22, 72, 66, 81, 34, 18, 1, 77, 58, 26, 27],53).
f([94, 29, 32, 66, 2, 97, 21, 73],25).
f([73, 56, 37, 86, 56, 54, 59, 12, 5, 66, 71, 34, 10, 1, 31, 62, 30, 56, 22, 42, 19, 37, 97, 43, 83, 18, 24, 75, 63, 82, 84, 21, 27, 36, 15, 30, 6, 20, 64, 101, 19, 37, 5, 24, 52, 43, 22],8).
f([11, 6, 39, 60, 66, 27, 13, 57, 15, 61, 41, 66, 91, 37, 94, 33],83).
f([33, 62, 2, 92, 56, 83, 1, 92, 65, 74, 14, 31, 40, 65, 53, 8, 20, 65, 37, 62, 99, 24, 51, 16, 82, 44, 20, 61, 84, 80, 22, 63, 64, 50, 4, 31, 65, 8, 84, 91, 36, 94],28).
f([75, 60, 82, 89, 91, 94, 25, 76, 62, 27, 25, 100, 37, 36, 67],45).
f([16, 95, 45, 11, 78, 16, 30, 64, 71, 93, 101, 22, 35, 90, 43, 50, 31],20).
f([46, 89, 76, 73, 95, 46, 7, 29, 6, 71, 76, 26, 73, 77, 79, 19, 87, 59, 12, 43, 56, 33, 78, 51, 18, 35, 71, 9, 85, 37, 53, 8, 3, 29, 95, 96, 25, 65, 89, 29, 46, 24, 94, 75, 5, 100, 20, 8],82).
f([98, 3, 90, 41, 44, 40, 3, 81, 50, 85, 70, 58, 15, 90, 95, 27, 37, 33, 89, 8, 44, 42, 34, 48, 65, 40, 7, 81, 50, 71, 40, 33, 36, 53, 70],52).
f([77, 29, 6, 74, 97, 9, 81, 60, 90, 101, 46, 49, 58, 87, 39, 71, 8, 35, 17, 73, 55, 18, 91, 47, 64, 20, 49, 24, 28, 79, 78, 76, 87, 48, 55, 98, 24, 19, 35, 50, 70, 41, 88, 36, 74, 51, 98, 71, 59, 75],37).
f([9, 94, 24, 70, 69, 20, 61, 39, 32, 73, 1, 100, 68, 15, 65, 69, 8, 81, 5, 63, 9, 7, 10, 2, 20, 47, 42, 50, 27, 33, 49, 37, 48, 2, 19, 78, 13, 26, 6, 48, 33, 90, 88, 35, 19, 26, 52, 35, 39, 46, 8],54).
f([14, 99, 27, 61, 98, 2, 23, 42, 8, 45, 13, 36, 87, 57, 79, 81, 50, 4, 56],55).
f([37, 72, 41, 19, 86, 1, 14, 53, 56, 75, 72, 32, 100, 47, 86, 66, 61, 24, 7, 88, 71, 51, 73, 56, 58, 31, 81, 29, 76, 10, 57, 60, 71, 72, 36, 47, 23, 36, 6, 63, 57, 14, 8, 89, 19, 63, 78, 55, 75, 11, 15],2).
f([8, 21, 82, 39, 31, 47, 96, 97, 41, 51, 57, 50, 6, 21, 5, 20, 2, 80, 46, 14, 90, 19, 21, 61, 92, 87, 100, 38, 16, 55, 78, 56, 43, 63, 27, 82, 19, 94, 56, 101],66).
f([77, 15, 12, 76, 64],88).
f([6, 81, 4],64).
:-end_in_neg.

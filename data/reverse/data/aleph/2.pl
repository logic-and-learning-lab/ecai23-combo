:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,-list)).
:- modeb(*,f(+list,-list)).
:- modeb(*,my_append(+list,+element,-list)).
:- modeb(*,empty_out(-list)).

:- determination(f/2,head/2).
:- determination(f/2,tail/2).
:- determination(f/2,geq/2).
:- determination(f/2,empty/1).
:- determination(f/2,even/1).
:- determination(f/2,odd/1).
:- determination(f/2,one/1).
:- determination(f/2,zero/1).
:- determination(f/2,decrement/2).
:- determination(f/2,f/2).
:- determination(f/2,element/2).
:- determination(f/2,empty_out/1).
%% :- determination(f/2,increment/2).
%% :- determination(f/2,element/2).
%% :- determination(f/2,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.

my_append(A,B,C):-
    append(A,[B],C).





c_0(0).
c_1(1).
c_2(2).
c_3(3).
c_4(4).
c_5(5).
c_6(6).
c_7(7).
c_8(8).
c_9(9).
c_10(10).
c_11(11).
c_12(12).
c_13(13).
c_14(14).
c_15(15).
c_16(16).
c_17(17).
c_18(18).
c_19(19).
c_20(20).
c_21(21).
c_22(22).
c_23(23).
c_24(24).
c_25(25).
c_26(26).
c_27(27).
c_28(28).
c_29(29).
c_30(30).
c_31(31).
c_32(32).
c_33(33).
c_34(34).
c_35(35).
c_36(36).
c_37(37).
c_38(38).
c_39(39).
c_40(40).
c_41(41).
c_42(42).
c_43(43).
c_44(44).
c_45(45).
c_46(46).
c_47(47).
c_48(48).
c_49(49).
c_50(50).
c_51(51).
c_52(52).
c_53(53).
c_54(54).
c_55(55).
c_56(56).
c_57(57).
c_58(58).
c_59(59).
c_60(60).
c_61(61).
c_62(62).
c_63(63).
c_64(64).
c_65(65).
c_66(66).
c_67(67).
c_68(68).
c_69(69).
c_70(70).
c_71(71).
c_72(72).
c_73(73).
c_74(74).
c_75(75).
c_76(76).
c_77(77).
c_78(78).
c_79(79).
c_80(80).
c_81(81).
c_82(82).
c_83(83).
c_84(84).
c_85(85).
c_86(86).
c_87(87).
c_88(88).
c_89(89).
c_90(90).
c_91(91).
c_92(92).
c_93(93).
c_94(94).
c_95(95).
c_96(96).
c_97(97).
c_98(98).
c_99(99).
c_100(100).
:-end_bg.
:-begin_in_pos.
f([99, 10, 27, 22, 9, 91, 1, 91, 38, 28, 13, 50],[50, 13, 28, 38, 91, 1, 91, 9, 22, 27, 10, 99]).
f([91, 50, 50, 9, 39, 38, 47, 3, 19, 85, 86, 58, 45, 4, 49],[49, 4, 45, 58, 86, 85, 19, 3, 47, 38, 39, 9, 50, 50, 91]).
f([84, 4, 89, 47, 64, 49, 20, 94, 7, 74, 100, 26, 34, 37, 9, 16, 78, 12, 96, 79, 93, 66, 69, 4, 20, 100, 96, 16, 60, 16, 58, 99, 22, 41, 61, 46, 16, 18, 59, 98, 8, 95, 87, 47, 39, 44, 87],[87, 44, 39, 47, 87, 95, 8, 98, 59, 18, 16, 46, 61, 41, 22, 99, 58, 16, 60, 16, 96, 100, 20, 4, 69, 66, 93, 79, 96, 12, 78, 16, 9, 37, 34, 26, 100, 74, 7, 94, 20, 49, 64, 47, 89, 4, 84]).
f([92, 94, 25, 12, 17, 62, 5, 53, 40, 45, 21, 79, 60, 84, 41, 41, 48, 70, 1, 6, 3, 100, 10, 68, 91, 73, 4, 79, 10, 54, 85, 31, 3, 63, 12, 91, 73, 81, 25, 3, 91, 42, 51, 49, 2, 57, 79, 38, 90],[90, 38, 79, 57, 2, 49, 51, 42, 91, 3, 25, 81, 73, 91, 12, 63, 3, 31, 85, 54, 10, 79, 4, 73, 91, 68, 10, 100, 3, 6, 1, 70, 48, 41, 41, 84, 60, 79, 21, 45, 40, 53, 5, 62, 17, 12, 25, 94, 92]).
f([58, 5, 49, 70, 46, 50, 4, 51, 72, 45, 3, 77, 20, 29, 45, 70, 92, 21, 79, 63, 64, 47, 79, 70, 54, 36, 36, 79, 70, 93, 96, 13, 20, 57, 56, 9, 98, 51, 72, 54, 100, 14, 39, 3, 3, 59, 49, 21],[21, 49, 59, 3, 3, 39, 14, 100, 54, 72, 51, 98, 9, 56, 57, 20, 13, 96, 93, 70, 79, 36, 36, 54, 70, 79, 47, 64, 63, 79, 21, 92, 70, 45, 29, 20, 77, 3, 45, 72, 51, 4, 50, 46, 70, 49, 5, 58]).
f([57, 51, 4, 91, 49, 17, 54, 2, 77, 64, 77],[77, 64, 77, 2, 54, 17, 49, 91, 4, 51, 57]).
f([79, 62, 82, 45, 76, 40, 17, 89, 40, 59, 46, 66, 81, 93, 54, 43, 65, 66, 17, 29, 22, 58, 52, 4, 57, 17, 41, 63, 93, 46, 48],[48, 46, 93, 63, 41, 17, 57, 4, 52, 58, 22, 29, 17, 66, 65, 43, 54, 93, 81, 66, 46, 59, 40, 89, 17, 40, 76, 45, 82, 62, 79]).
f([24, 37, 31, 27, 58, 50, 56, 67, 60, 53, 58, 25, 5, 42, 64, 61, 18, 24, 56, 49, 46, 35, 53, 55, 101, 20, 82, 100],[100, 82, 20, 101, 55, 53, 35, 46, 49, 56, 24, 18, 61, 64, 42, 5, 25, 58, 53, 60, 67, 56, 50, 58, 27, 31, 37, 24]).
f([77, 14, 68, 34, 90, 46, 101, 45, 56, 12, 38, 79, 55, 74, 39, 98, 5, 55, 30, 92, 56, 56, 90, 50, 16, 91, 15, 56, 14, 63, 31, 62, 74, 62, 33, 71, 74],[74, 71, 33, 62, 74, 62, 31, 63, 14, 56, 15, 91, 16, 50, 90, 56, 56, 92, 30, 55, 5, 98, 39, 74, 55, 79, 38, 12, 56, 45, 101, 46, 90, 34, 68, 14, 77]).
f([97, 20, 30, 41, 87, 54],[54, 87, 41, 30, 20, 97]).
:-end_in_pos.
:-begin_in_neg.
f([35, 99, 33, 37, 88, 84, 68, 37, 44, 33, 9, 76, 88, 95, 17],[37, 9, 88, 95, 99, 76, 33, 68, 44, 17, 35, 37, 84, 88, 33]).
f([88, 2, 28, 81, 100, 16, 57, 13, 90, 1, 17, 99, 39, 83, 77, 71, 70, 24, 96, 101, 9, 27, 14, 7, 49, 43, 27, 69, 17, 34, 38, 78, 94, 1, 84, 65, 14, 81, 52, 38],[69, 84, 83, 14, 17, 43, 94, 34, 2, 7, 57, 49, 39, 13, 65, 27, 9, 101, 38, 1, 28, 78, 16, 38, 99, 90, 24, 96, 100, 71, 81, 77, 70, 27, 1, 17, 88, 14, 81, 52]).
f([23, 28, 36, 79, 62, 15, 17, 53, 59, 15, 36, 6, 4, 9, 28, 92, 2, 9, 8, 46, 94, 31, 6, 101, 5],[2, 46, 94, 59, 15, 62, 79, 28, 28, 5, 9, 53, 9, 36, 6, 8, 17, 101, 6, 36, 4, 31, 23, 15, 92]).
f([46, 30, 43, 67, 30, 25, 54, 63],[30, 67, 54, 30, 63, 43, 25, 46]).
f([81, 84, 98, 81, 25, 69, 90, 19, 43, 78, 95, 34, 1, 52, 67, 30, 92, 57, 34, 5, 48, 20, 1, 24, 11, 18, 71, 7, 47, 46, 24, 101, 68, 69, 23, 5, 92, 71],[52, 23, 71, 7, 48, 18, 90, 34, 68, 24, 5, 69, 1, 84, 47, 78, 46, 101, 57, 81, 34, 69, 98, 81, 19, 1, 92, 30, 92, 95, 67, 25, 43, 5, 71, 20, 11, 24]).
f([59, 62, 29, 97, 53, 2, 73, 42, 16, 24, 57, 79, 69, 47, 6, 72, 14, 88, 97, 88, 99, 39, 9, 2, 17, 6, 64, 6, 31, 28, 61, 52, 77, 17, 22, 33, 86, 74, 37, 51, 78],[6, 24, 53, 88, 28, 17, 2, 74, 77, 79, 42, 69, 6, 14, 61, 86, 22, 72, 33, 97, 97, 17, 51, 78, 37, 39, 73, 29, 47, 31, 2, 88, 16, 99, 64, 9, 57, 62, 6, 52, 59]).
f([89, 80, 69, 90, 24, 101, 14, 23, 42, 28, 60, 72],[42, 89, 80, 101, 28, 23, 69, 24, 72, 90, 14, 60]).
f([59, 65, 62, 4, 64, 65, 67, 88, 89, 22, 68, 32, 81, 51, 41, 16, 37, 83, 97, 40, 70, 101, 27, 13, 99, 73, 79, 38, 27, 72, 71, 32, 5, 56, 33, 67, 90, 58, 40, 68, 78, 97, 88, 50, 88, 42, 84],[67, 78, 99, 58, 13, 33, 5, 4, 40, 101, 88, 97, 81, 88, 90, 38, 73, 71, 67, 51, 72, 41, 42, 32, 27, 84, 22, 64, 16, 70, 62, 65, 68, 50, 59, 68, 40, 83, 56, 32, 79, 97, 65, 27, 37, 89, 88]).
f([22, 60, 40, 73, 85, 8, 1, 19, 26, 27, 72, 71, 64, 55, 93, 97],[1, 93, 26, 27, 55, 8, 72, 40, 73, 22, 19, 60, 97, 64, 71, 85]).
f([17, 96, 76, 6, 47, 8, 19, 79, 54, 77, 67, 67, 98, 75, 77, 12, 20, 39, 78, 47, 30, 73, 11, 11, 48, 40, 84, 42, 50, 70, 5, 19],[50, 77, 42, 67, 48, 96, 6, 5, 47, 11, 20, 67, 70, 75, 78, 77, 76, 19, 54, 84, 30, 47, 40, 39, 17, 12, 98, 79, 11, 19, 8, 73]).
:-end_in_neg.

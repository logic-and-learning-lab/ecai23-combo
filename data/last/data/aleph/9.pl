:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,-element)).
:- modeb(*,f(+list,-element)).
%% :- modeb(*,cons(+element,+list,-list)).

:- determination(f/2,head/2).
:- determination(f/2,tail/2).
:- determination(f/2,geq/2).
:- determination(f/2,empty/1).
:- determination(f/2,even/1).
:- determination(f/2,odd/1).
:- determination(f/2,one/1).
:- determination(f/2,zero/1).
:- determination(f/2,decrement/2).
:- determination(f/2,f/2).
%% :- determination(f/2,element/2).
%% :- determination(f/2,increment/2).
%% :- determination(f/2,element/2).
%% :- determination(f/2,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.

my_append(A,B,C):-
    append(A,[B],C).





c_0(0).
c_1(1).
c_2(2).
c_3(3).
c_4(4).
c_5(5).
c_6(6).
c_7(7).
c_8(8).
c_9(9).
c_10(10).
c_11(11).
c_12(12).
c_13(13).
c_14(14).
c_15(15).
c_16(16).
c_17(17).
c_18(18).
c_19(19).
c_20(20).
c_21(21).
c_22(22).
c_23(23).
c_24(24).
c_25(25).
c_26(26).
c_27(27).
c_28(28).
c_29(29).
c_30(30).
c_31(31).
c_32(32).
c_33(33).
c_34(34).
c_35(35).
c_36(36).
c_37(37).
c_38(38).
c_39(39).
c_40(40).
c_41(41).
c_42(42).
c_43(43).
c_44(44).
c_45(45).
c_46(46).
c_47(47).
c_48(48).
c_49(49).
c_50(50).
c_51(51).
c_52(52).
c_53(53).
c_54(54).
c_55(55).
c_56(56).
c_57(57).
c_58(58).
c_59(59).
c_60(60).
c_61(61).
c_62(62).
c_63(63).
c_64(64).
c_65(65).
c_66(66).
c_67(67).
c_68(68).
c_69(69).
c_70(70).
c_71(71).
c_72(72).
c_73(73).
c_74(74).
c_75(75).
c_76(76).
c_77(77).
c_78(78).
c_79(79).
c_80(80).
c_81(81).
c_82(82).
c_83(83).
c_84(84).
c_85(85).
c_86(86).
c_87(87).
c_88(88).
c_89(89).
c_90(90).
c_91(91).
c_92(92).
c_93(93).
c_94(94).
c_95(95).
c_96(96).
c_97(97).
c_98(98).
c_99(99).
c_100(100).
:-end_bg.
:-begin_in_pos.
f([85, 33, 26, 42, 6, 100, 67, 86, 78, 5, 76, 94, 19, 70, 1, 40, 53, 64, 60, 27, 38, 54, 80, 6, 3, 95, 9, 77, 64, 92, 4, 26, 49, 100, 35, 88, 61],61).
f([58, 90, 9, 5, 67, 17, 8, 52, 30, 58, 3, 17, 40, 92, 96, 46, 62, 20, 85, 46, 98, 57, 28],28).
f([98, 26, 69, 34, 101, 81, 78, 94, 44, 36, 16, 77, 81, 101, 68, 31, 77, 98, 47, 62, 32, 23, 27, 63, 88, 98, 69, 52, 44, 100, 51, 36, 13, 64, 12],12).
f([101, 12, 93, 2, 66, 99, 60, 47, 52, 39, 67, 39, 95, 5, 32, 57, 21, 6, 30, 9, 100, 71, 54],54).
f([17, 63, 11, 68, 7, 70, 78, 53, 93, 94, 46, 23, 77, 53, 59, 7, 57, 81, 86, 28, 64],64).
f([60, 37, 93, 34, 74, 92, 27, 81, 29, 81, 4, 49, 77, 30, 10, 6, 54, 95, 14, 23, 24, 60, 84, 91, 27, 86, 34, 2, 68, 42, 16, 92, 3, 23, 16, 16, 75, 36, 47, 28, 7, 96, 74, 17, 77, 42, 58, 28, 77],77).
f([65, 33, 52, 95, 99, 80, 17, 50, 36, 83, 33],33).
f([51, 48, 33, 44, 94, 90, 88, 68, 16, 98, 7, 99, 16, 100, 74, 71, 1, 53, 23, 100, 73, 12, 91, 45, 89, 56, 44, 14, 40, 37, 73, 45, 68, 31, 59, 3, 34, 87, 50, 78],78).
f([33, 31, 95, 74, 93, 38, 9],9).
f([80, 76, 66, 60, 90, 38, 68, 42, 11],11).
f([35, 72, 97, 93, 55, 100],100).
f([76, 42, 96, 63, 56, 65, 68, 26, 53, 100, 60, 53, 99, 90, 5, 28, 21, 43, 25, 89, 36],36).
f([24, 48, 70, 7, 19, 73, 22, 5, 69, 21, 101, 41, 33, 80, 28, 23, 45, 33, 87, 53],53).
f([65, 94, 70, 53, 60, 70, 54, 43, 15, 86, 3, 38, 73, 89, 10, 27, 80, 25, 70, 59, 32, 49, 71],71).
f([20, 11, 65, 56, 29, 49, 58, 71, 48, 73, 67],67).
f([44, 12, 96, 58, 31, 97, 83, 92, 12, 31, 59, 86, 35, 61, 98, 95, 52, 65, 59, 81, 20, 46, 59, 27, 64, 65, 31, 17, 9, 87, 39, 2, 80, 91, 52, 78, 6, 72, 37, 94, 63, 21, 43, 25, 3, 25, 25],25).
f([5, 9, 4, 15, 42, 94, 68, 50, 76, 1, 55, 57, 34, 59, 29],29).
f([43, 100],100).
f([98, 62, 74, 28, 6, 23, 61, 37, 23, 29, 73, 64, 56, 17, 22, 29, 53, 40, 58, 73, 44, 11, 54, 78, 69, 3, 88, 44, 49, 92, 68, 23, 86, 57, 25, 42, 27, 25, 85, 73, 37],37).
f([25, 55, 48, 6, 83, 62, 22, 20, 42, 1, 75, 44, 93, 35, 11, 61, 57, 16, 72, 13, 91, 64, 41, 57, 68, 53, 63, 51, 34, 89, 73, 7, 96, 32, 2],2).
:-end_in_pos.
:-begin_in_neg.
f([45, 63, 85, 66, 62, 7, 55, 44, 19, 8, 77, 37, 85, 61, 68, 95, 70, 58, 2, 81, 13, 38, 29, 87, 45, 28, 24, 31, 43, 24, 18, 25, 24, 82, 81, 34, 60, 28, 14, 31, 51, 79, 7, 40, 46],28).
f([79, 50, 45, 78, 16, 33, 6, 71, 96, 73, 7, 66, 37, 77, 33, 79, 97, 93, 100, 68],50).
f([86, 69, 45, 8, 92, 8, 5, 100, 5, 97, 70, 2, 44, 90, 84, 40, 29, 8, 51, 48, 28, 47, 85, 31],51).
f([40, 25, 27, 10, 69, 75, 16, 6, 57, 72, 97, 46, 15, 10, 35, 67, 22, 50, 96, 92, 67, 86],40).
f([60, 24, 18, 69, 92, 33, 12, 83, 66, 2, 3, 92, 77, 95, 31, 97],3).
f([46, 75, 11, 83, 64, 2, 85, 67, 52, 49, 49, 3, 81, 13, 4, 43, 98, 90, 88, 36, 40, 76, 4, 95, 16, 30, 88, 75, 91, 85, 26, 61, 18, 97, 64, 93, 70, 101, 92, 2, 23, 15],101).
f([43, 57, 4, 29, 99, 87, 85, 42, 2, 8, 90, 51, 77, 55, 96, 27, 36, 59, 54, 20, 15, 95, 96, 42, 59, 37, 24, 10, 39, 51, 36, 44, 35, 101, 57, 27, 23, 95, 85, 16, 99, 23, 68, 94],15).
f([87, 24, 9, 8, 86, 83, 99, 46, 16, 77, 4, 1, 79, 70, 48, 62, 16, 26, 60, 23, 30, 11, 66, 1, 25, 26, 52, 89, 46, 82, 85, 100],1).
f([30, 53, 41, 42, 15, 86, 24, 36],86).
f([71, 12, 8, 60, 63, 13, 14, 77, 24, 94, 8, 32, 35, 74, 36, 18, 5, 99, 40, 23, 42, 11, 11, 91, 20, 85, 48, 19, 36, 97, 39, 42, 58, 24, 26, 26, 59, 95, 36, 13, 22, 81, 39, 3, 74],99).
f([81, 53, 35, 46, 50, 7, 97, 91, 9, 12, 19, 5, 57, 85],81).
f([80, 63, 12, 62, 80, 31, 40, 85, 86, 18, 66, 74, 91, 100, 44, 9, 30, 59, 48, 90, 68, 41, 87, 19, 21, 2, 61, 82, 37, 34, 5, 80, 89, 70, 38, 8, 52, 25],85).
f([38, 17, 15, 76, 29, 55, 56, 57, 50, 74, 101, 73, 15, 97, 98, 69],29).
f([76, 4, 84, 12, 49, 92, 5, 39, 12, 90, 54, 30, 100, 76, 44, 73, 36, 54, 29, 22, 27, 62, 32, 97, 6],44).
f([43, 81, 52, 45, 45, 15, 61, 81, 43, 3, 73, 9, 52, 78, 63],52).
f([32, 18, 44, 69, 59, 49, 78, 67, 95, 26, 54, 98, 100, 61, 67, 51, 46, 101, 9, 53, 18, 77, 97, 5, 58, 57, 82, 61, 49],61).
f([42, 2, 60, 38, 18, 90, 94, 80, 59, 59, 11, 19, 96, 72, 10, 100, 47, 53, 86, 17, 43, 70, 45, 9, 84, 61, 87, 17, 24, 13, 68, 87, 43, 20, 38, 55, 86, 34, 15, 63, 42, 28, 18, 40, 77, 98, 95, 78],43).
f([7, 2, 47, 100, 96, 64, 56, 64, 27, 16, 62, 1, 2, 95, 38, 73, 55, 30, 59, 71, 98, 75, 63, 55, 66, 100, 95, 10, 77, 70, 4, 35, 1, 78, 95, 92, 13, 95, 91, 48, 65],16).
f([65, 101, 33, 59, 38, 52, 24, 57, 86, 82, 80, 75, 24, 52, 37, 37, 46, 38, 91, 31, 17, 51, 88, 50, 86, 21, 23, 62, 43, 38, 6, 79, 5, 38, 100, 41, 42, 90, 88, 69, 85, 55, 96, 43],41).
f([30, 16, 37, 63, 68, 93, 93, 26, 64, 68, 60, 4, 32, 7, 51, 100, 97, 87, 97, 96, 39, 70, 57, 53, 34, 6, 64, 17, 49, 81, 5, 63, 3],34).
:-end_in_neg.

:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,-element)).
:- modeb(*,f(+list,-element)).
%% :- modeb(*,cons(+element,+list,-list)).

:- determination(f/2,head/2).
:- determination(f/2,tail/2).
:- determination(f/2,geq/2).
:- determination(f/2,empty/1).
:- determination(f/2,even/1).
:- determination(f/2,odd/1).
:- determination(f/2,one/1).
:- determination(f/2,zero/1).
:- determination(f/2,decrement/2).
:- determination(f/2,f/2).
%% :- determination(f/2,element/2).
%% :- determination(f/2,increment/2).
%% :- determination(f/2,element/2).
%% :- determination(f/2,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.

my_append(A,B,C):-
    append(A,[B],C).





c_0(0).
c_1(1).
c_2(2).
c_3(3).
c_4(4).
c_5(5).
c_6(6).
c_7(7).
c_8(8).
c_9(9).
c_10(10).
c_11(11).
c_12(12).
c_13(13).
c_14(14).
c_15(15).
c_16(16).
c_17(17).
c_18(18).
c_19(19).
c_20(20).
c_21(21).
c_22(22).
c_23(23).
c_24(24).
c_25(25).
c_26(26).
c_27(27).
c_28(28).
c_29(29).
c_30(30).
c_31(31).
c_32(32).
c_33(33).
c_34(34).
c_35(35).
c_36(36).
c_37(37).
c_38(38).
c_39(39).
c_40(40).
c_41(41).
c_42(42).
c_43(43).
c_44(44).
c_45(45).
c_46(46).
c_47(47).
c_48(48).
c_49(49).
c_50(50).
c_51(51).
c_52(52).
c_53(53).
c_54(54).
c_55(55).
c_56(56).
c_57(57).
c_58(58).
c_59(59).
c_60(60).
c_61(61).
c_62(62).
c_63(63).
c_64(64).
c_65(65).
c_66(66).
c_67(67).
c_68(68).
c_69(69).
c_70(70).
c_71(71).
c_72(72).
c_73(73).
c_74(74).
c_75(75).
c_76(76).
c_77(77).
c_78(78).
c_79(79).
c_80(80).
c_81(81).
c_82(82).
c_83(83).
c_84(84).
c_85(85).
c_86(86).
c_87(87).
c_88(88).
c_89(89).
c_90(90).
c_91(91).
c_92(92).
c_93(93).
c_94(94).
c_95(95).
c_96(96).
c_97(97).
c_98(98).
c_99(99).
c_100(100).
:-end_bg.
:-begin_in_pos.
f([94, 67, 21, 1, 90, 6, 4, 21, 64, 79, 9, 49, 7, 12, 13, 22, 3, 16, 58, 21, 25, 17, 10, 70, 3, 44, 76, 95, 26, 27, 89, 87],87).
f([4, 15, 47, 88, 12, 55, 50, 74, 10, 78, 6, 2, 90, 78, 38, 75, 14, 49, 90, 49, 37, 18, 80, 48, 74, 32, 8, 17, 85, 28, 31, 37, 68, 83, 68, 18, 59, 69, 43, 51, 55, 70, 47, 54],54).
f([37, 86, 8, 70, 92, 16, 36, 82, 31, 97, 90, 66, 89, 97, 82],82).
f([30],30).
f([20, 59, 48, 64, 4, 33, 56, 3, 85, 1, 13, 22, 12, 81, 47, 28, 45, 7, 78, 23, 93, 81, 26, 8, 10, 44, 20, 55, 34, 58, 79, 93, 16, 35, 47, 57, 39, 50, 16, 26, 20, 84],84).
f([59, 60],60).
f([13, 97, 90, 33, 21, 36, 27, 56, 80, 31, 30, 49, 97, 68, 23, 7, 53, 46, 38, 32, 68, 30, 99, 95, 45, 73, 6, 51, 87, 23, 58, 99, 54, 59, 87, 89, 9, 66, 46, 53, 40, 75, 4, 12, 9, 65, 26, 54, 82, 94],94).
f([64, 16, 55, 91, 33, 26, 39, 1, 52, 22, 7, 62, 87, 58, 42, 53, 19, 4, 98, 71, 75, 96, 47, 54, 2, 64, 30, 32, 63, 33, 27, 61, 100, 83, 5, 7, 21, 18, 99, 17, 28, 9, 101, 99, 10],10).
f([31, 92, 49, 54, 44, 68, 24, 78],78).
f([62, 33, 7, 23, 90, 98, 81, 28, 97, 75, 100, 11, 5, 94, 100, 46, 77, 29, 87, 72, 69, 40, 44, 64, 82, 82, 26, 12, 81, 85, 90, 68, 55, 31, 77],77).
f([55, 74, 5, 20],20).
f([82, 51, 19, 50, 100, 82, 7, 22, 14, 79, 21, 54],54).
f([67],67).
f([20, 20, 75, 16, 70, 17, 11, 72, 90, 48, 50, 51, 93, 7, 82],82).
f([55, 92, 66, 50, 65, 39, 20, 56, 17, 41, 88, 86, 26, 97, 9, 90, 80, 82, 50, 61, 99, 78, 78, 94, 82, 47, 18, 81, 95, 64, 38, 21, 31, 69, 54, 70, 69, 40, 62, 52, 98, 34, 37, 35, 7, 63, 55, 11, 26, 16, 43],43).
f([39, 84, 83, 41, 18, 40, 27, 1, 86, 19, 58, 77, 79, 83, 25, 47, 83, 95],95).
f([100, 44, 15, 21, 51, 65, 41, 4, 1, 97, 85, 9, 15, 8, 95, 55, 78, 35, 95, 58, 23, 95, 41, 19, 69, 97, 98, 14, 2, 2, 65, 38, 98, 79, 98, 74, 62, 33, 93],93).
f([48, 30, 43, 43, 34, 12, 100, 14, 43, 38, 10, 50, 74, 45, 36, 35, 36, 35, 39, 44, 76, 7, 69, 17, 83, 61, 85, 50, 19, 70, 36, 12, 68, 96, 52, 44, 70, 3, 53, 21, 19, 19, 83, 38, 86, 3, 33, 100],100).
f([14, 76, 22, 58, 90, 40, 49, 66, 80, 98, 11, 48, 30, 22, 84, 65, 76, 73, 41, 20, 75, 41, 38, 34, 9, 58, 10, 85, 20, 80, 72, 71, 57, 82, 86, 99, 100, 47, 94, 74, 54, 69, 69, 49, 44, 89, 39, 4, 95],95).
f([47, 99, 40, 67],67).
:-end_in_pos.
:-begin_in_neg.
f([33, 99, 48, 11, 91, 6, 55, 89, 77, 24, 16, 65, 74, 86, 49],16).
f([55, 16, 57, 52, 43, 10, 44, 77, 39, 14, 56, 85, 66, 62, 49, 14, 1, 27, 49, 101, 60, 24, 90, 52, 39, 30, 6, 41, 55, 42, 39],10).
f([46, 52, 13, 36],52).
f([31, 63, 88, 37, 49, 47, 21, 7, 97, 28, 27, 58],7).
f([80, 98, 76, 39, 57, 86, 6, 36, 13, 7, 81],6).
f([98, 56, 32, 93, 100, 94, 31, 31, 10, 70, 37, 43, 86, 15, 41, 6, 64, 6, 75, 67, 98, 80, 48, 46, 95, 85, 39, 10, 78, 98, 53, 63, 69, 70, 45, 20, 12, 9, 28, 58, 30, 75, 92, 36, 22, 1, 54, 45],1).
f([68, 95, 19, 42, 78, 20, 74, 84, 24, 90, 8, 38, 90, 38, 76, 81, 11, 8, 77, 89, 33, 82, 18, 10, 43, 61, 14, 52, 69, 39, 7, 36, 4],42).
f([78, 43, 4, 7, 41, 97, 37, 69, 87, 55, 19],69).
f([43, 91, 14, 58, 92, 99, 42, 54, 41, 38, 12, 44, 73, 80, 59, 3, 65, 32, 66, 72, 60, 52, 3, 81, 33, 93, 14, 69, 47],81).
f([86, 86, 21, 2, 65, 31, 71, 54, 38, 42, 36, 4, 22, 21, 3, 92, 5, 95, 37, 91, 71, 13, 48, 69, 93, 31, 3, 1, 4, 50, 100, 52, 21, 69, 26, 99, 22, 68, 75, 25, 56, 23, 42, 15, 56, 4, 67, 49, 28],75).
f([62, 79, 85, 97, 13],62).
f([32, 66, 79, 37, 90, 77, 66, 41, 60, 61, 39, 78, 11, 56],66).
f([27, 62, 95, 77, 81, 45, 99, 32],27).
f([3, 81, 84, 1, 39, 58, 69, 56, 87, 33, 58, 64, 72, 99, 72, 87, 20, 83, 73, 81, 78],39).
f([93, 68, 81, 53, 66, 23, 14, 8, 91, 14, 93, 61, 15, 89, 79, 88, 25, 48, 11, 34, 19],66).
f([85, 34, 83, 92],85).
f([37, 42, 14, 42, 70, 92, 14, 66, 55, 20, 84, 66, 30, 5, 43, 62, 58, 57, 48, 32, 67, 41, 79, 69, 76, 14, 51, 48, 94, 47, 100, 65, 24, 62, 26],42).
f([77, 2, 31, 45, 57, 81, 11, 78, 71, 70, 75, 55, 81, 77, 18, 78, 64, 5, 100, 68, 99],71).
f([45, 57, 19],57).
f([35, 13, 71, 56, 79, 37, 6, 20, 79, 86, 2, 35, 10, 38, 65],71).
:-end_in_neg.

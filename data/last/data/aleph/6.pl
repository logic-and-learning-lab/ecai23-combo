:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,-element)).
:- modeb(*,f(+list,-element)).
%% :- modeb(*,cons(+element,+list,-list)).

:- determination(f/2,head/2).
:- determination(f/2,tail/2).
:- determination(f/2,geq/2).
:- determination(f/2,empty/1).
:- determination(f/2,even/1).
:- determination(f/2,odd/1).
:- determination(f/2,one/1).
:- determination(f/2,zero/1).
:- determination(f/2,decrement/2).
:- determination(f/2,f/2).
%% :- determination(f/2,element/2).
%% :- determination(f/2,increment/2).
%% :- determination(f/2,element/2).
%% :- determination(f/2,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.

my_append(A,B,C):-
    append(A,[B],C).





c_0(0).
c_1(1).
c_2(2).
c_3(3).
c_4(4).
c_5(5).
c_6(6).
c_7(7).
c_8(8).
c_9(9).
c_10(10).
c_11(11).
c_12(12).
c_13(13).
c_14(14).
c_15(15).
c_16(16).
c_17(17).
c_18(18).
c_19(19).
c_20(20).
c_21(21).
c_22(22).
c_23(23).
c_24(24).
c_25(25).
c_26(26).
c_27(27).
c_28(28).
c_29(29).
c_30(30).
c_31(31).
c_32(32).
c_33(33).
c_34(34).
c_35(35).
c_36(36).
c_37(37).
c_38(38).
c_39(39).
c_40(40).
c_41(41).
c_42(42).
c_43(43).
c_44(44).
c_45(45).
c_46(46).
c_47(47).
c_48(48).
c_49(49).
c_50(50).
c_51(51).
c_52(52).
c_53(53).
c_54(54).
c_55(55).
c_56(56).
c_57(57).
c_58(58).
c_59(59).
c_60(60).
c_61(61).
c_62(62).
c_63(63).
c_64(64).
c_65(65).
c_66(66).
c_67(67).
c_68(68).
c_69(69).
c_70(70).
c_71(71).
c_72(72).
c_73(73).
c_74(74).
c_75(75).
c_76(76).
c_77(77).
c_78(78).
c_79(79).
c_80(80).
c_81(81).
c_82(82).
c_83(83).
c_84(84).
c_85(85).
c_86(86).
c_87(87).
c_88(88).
c_89(89).
c_90(90).
c_91(91).
c_92(92).
c_93(93).
c_94(94).
c_95(95).
c_96(96).
c_97(97).
c_98(98).
c_99(99).
c_100(100).
:-end_bg.
:-begin_in_pos.
f([51, 43, 42, 72, 67, 32, 41, 38, 20, 21, 100, 54, 26, 14, 72, 67, 68, 2, 45, 27, 79, 68, 26, 45, 33, 8, 42, 74, 4, 22, 11, 56, 32, 98, 32, 37, 83, 15, 13],13).
f([49, 8, 67, 97, 42, 49, 95, 93, 63, 54, 46, 23, 54, 79, 68, 48, 87, 56, 63, 73, 8, 88, 7, 39, 98, 49, 95, 21, 23, 59, 78],78).
f([43, 76, 14, 54, 87, 97, 23, 55, 30, 68, 66, 99, 86, 15, 81, 41, 70, 11, 61, 85, 49, 1, 81],81).
f([96, 7, 47, 64, 42, 15, 28, 45, 46, 19, 99, 92, 50, 39, 79, 46, 66, 69, 65, 12, 89, 52, 11, 83, 80, 97, 92, 15, 63, 66, 30, 18, 86, 72, 79, 6, 61, 84, 59, 5, 98, 34, 49, 15, 87, 73, 62, 91],91).
f([28, 81, 46, 30, 32, 23, 41, 31, 28, 8, 28, 91, 92, 64, 90, 12, 69, 13, 95, 23, 90, 4, 70, 56, 78, 60, 67, 52, 45, 75, 96, 69, 37, 7, 15],15).
f([35, 75, 54, 33, 21, 53, 10, 90, 36, 63, 35, 8, 87, 82, 5, 13, 32, 39],39).
f([29, 68, 36, 38, 19, 75, 89, 7, 96, 22, 100, 60, 61, 15, 86, 17, 79, 47, 77, 88, 94, 85, 41, 30, 43, 96, 85, 17, 42, 72, 24, 7, 50, 72, 56, 80, 27, 74, 35, 75, 76, 99, 97, 14, 9, 73, 89, 65],65).
f([24, 77, 59, 25, 19, 71, 6, 60, 6, 3, 76, 42, 22, 34, 70, 5, 86, 17, 53, 77, 64, 34, 84, 1, 5, 40, 64, 70, 58, 66, 101],101).
f([50],50).
f([98, 38, 52, 26, 4, 82, 2, 26, 71, 6, 62, 82, 5, 36, 13, 30, 7, 53, 40, 88, 101, 5, 25, 9, 30, 92, 18, 79, 68, 30, 43, 91, 10, 49, 89, 38, 74, 20, 90, 64, 34, 37, 14, 23, 2, 66, 53],53).
f([34, 97, 1, 17, 85, 24, 56, 96, 2, 17, 31, 50, 65, 39, 9, 3, 80, 44, 49, 4, 76, 99, 35, 85, 87, 43, 99, 6, 24, 95, 21, 79, 92, 53, 94, 16, 92, 81, 46, 12, 39, 77, 30, 47, 11, 3, 13, 37, 85, 38, 96],96).
f([41, 56, 42, 61, 73, 21, 58, 20, 55, 65, 6, 62, 34, 9, 32, 98, 28, 77, 62, 30, 45, 21, 44, 17, 41, 76, 72, 100, 82, 56, 7, 101, 79, 23, 42, 74, 83, 4, 82, 50, 86],86).
f([70, 23, 21, 23, 32, 86, 41, 56, 69, 33, 63],63).
f([36, 73, 31, 9, 47, 87, 39, 9],9).
f([97, 48, 29, 50, 46, 29, 2, 33, 3, 27, 98, 48, 89, 8, 19, 8, 65],65).
f([81, 92, 84, 18, 64, 14, 80, 36, 41, 87, 76, 86, 82, 17, 77, 92, 81],81).
f([28, 63, 28, 11, 31, 83, 60],60).
f([55, 54, 16, 78, 89, 61, 38, 97, 85, 68, 50, 7, 38, 101, 17, 58, 35, 26, 32, 68, 24, 58, 21, 46, 22, 79, 72, 14, 75, 34, 76, 101, 62, 61, 59, 89, 36, 21, 64, 2, 6, 96, 54, 67, 3, 41, 95, 18, 94],94).
f([96, 56, 85, 13, 31, 26, 11, 54, 18, 45, 94, 27, 61, 8, 42, 72, 58, 26, 55, 28, 92, 89, 11, 37, 11, 84, 97, 1, 14, 53, 97, 22, 66, 11, 83, 58, 46, 81],81).
f([11, 4],4).
:-end_in_pos.
:-begin_in_neg.
f([83, 12, 4, 55, 9, 62, 19, 44, 57, 29, 25, 17, 78, 21, 6, 86, 57, 64, 16, 56, 17, 54, 78, 36, 6, 77, 12, 86, 91, 51, 19, 19, 38, 100, 64],4).
f([50, 87, 84, 14, 13, 97, 10, 11, 22, 16, 12, 26, 80, 77, 20],77).
f([4, 28, 23, 63, 84, 60, 15, 65, 73, 13, 12, 80, 85, 90],4).
f([63, 42, 94, 14, 61, 9, 73, 16, 76, 6, 95, 43, 75, 78, 82, 30, 4, 50, 59, 55],59).
f([29, 67, 89, 60, 20, 46, 81, 40, 31, 97, 56, 56, 4, 2, 26, 60, 96, 39, 26, 15, 5, 3, 91, 77, 20, 32, 28, 84, 84, 86, 16, 1, 20, 74, 86, 87, 93, 21, 22, 25, 60, 9],60).
f([34, 98, 21, 37, 7, 96, 31, 16, 12, 30, 28, 93, 14, 98, 56, 91, 71, 73, 52, 57, 2, 48, 53, 90, 69, 80, 42],90).
f([91, 82, 61, 76, 63, 22, 48, 69, 78, 31, 19, 45, 32, 66, 88, 94, 67, 2, 28, 20, 23, 74, 14, 48, 81, 29, 25, 46, 44, 53, 43, 33, 98, 7, 54, 25, 60, 52, 86],48).
f([101, 60, 80, 3, 70, 79, 66, 41, 21, 63, 80, 41, 43, 62],3).
f([69, 94, 54, 39, 10, 14, 84, 78, 14, 29, 57, 18, 100, 65, 64, 26, 69, 24, 67, 9, 53, 64, 1, 5, 37, 79, 16, 41, 22, 66, 97, 78, 55, 89, 75, 93, 50, 50, 75, 25, 49, 94, 54, 55, 74, 38, 46, 61, 5, 90],1).
f([51, 95, 4, 41, 70, 94, 48, 34, 101, 92, 59, 53, 67],94).
f([96, 64, 92, 3, 14, 85, 97, 48, 23, 86, 63, 49, 77, 66, 47, 79, 31, 77, 3, 42, 80, 92, 31, 96, 95, 11, 96, 1, 26, 69, 3, 55, 38, 30, 99, 35, 89, 79, 78, 64],78).
f([68, 53, 70, 40, 8, 12, 90, 45, 32],12).
f([18, 22, 77, 2, 6, 90, 44, 57, 95, 70, 1, 77, 3, 21, 72, 97, 13, 70, 98, 74, 59, 9, 44, 20, 60, 27, 27, 100, 66, 47, 12, 87, 7, 94, 3, 40, 9, 42, 87, 38, 29, 23, 60, 53, 30],3).
f([21, 3, 58, 79, 12, 38, 78, 36, 13, 27, 46, 61, 24, 47, 78, 82, 78, 8, 92, 80, 74, 92, 54, 88, 45, 48, 26, 51, 47],46).
f([26, 76, 11, 24, 16, 20, 53, 3, 69, 53, 54, 2, 101, 92, 64, 52, 9, 31, 88, 11, 64, 24, 88, 52],53).
f([91, 65, 77, 14, 26, 82, 54, 94, 17],94).
f([3, 25, 54],3).
f([15, 77, 3, 77, 58, 68, 85, 77, 66, 93, 84, 41, 22, 22, 91, 21, 31, 81, 92, 29, 45, 100, 62, 63, 87, 94, 93, 3, 77, 28, 30, 83, 2, 53, 4, 25, 92, 52, 42, 77, 17, 36, 32, 54, 47, 57, 64, 36],3).
f([80, 34, 54, 76, 24, 64, 16, 65, 82, 77, 20, 9, 40, 59, 20, 57, 23, 28, 55, 87, 11, 56, 18, 91, 38, 94, 8, 51, 13, 77, 30, 43, 48, 48, 25, 1, 76, 43, 94, 76, 71, 40, 69, 100, 64],24).
f([41, 19, 8, 12, 47, 58, 38, 93, 68, 72, 55, 18, 97, 27, 66, 34, 77, 57, 20, 78, 72, 71, 99, 74, 26, 17, 96, 86, 71, 96, 89, 80, 75, 76, 59, 43, 72],58).
:-end_in_neg.

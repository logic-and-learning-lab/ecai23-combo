:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,-element)).
:- modeb(*,f(+list,-element)).
%% :- modeb(*,cons(+element,+list,-list)).

:- determination(f/2,head/2).
:- determination(f/2,tail/2).
:- determination(f/2,geq/2).
:- determination(f/2,empty/1).
:- determination(f/2,even/1).
:- determination(f/2,odd/1).
:- determination(f/2,one/1).
:- determination(f/2,zero/1).
:- determination(f/2,decrement/2).
:- determination(f/2,f/2).
%% :- determination(f/2,element/2).
%% :- determination(f/2,increment/2).
%% :- determination(f/2,element/2).
%% :- determination(f/2,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.

my_append(A,B,C):-
    append(A,[B],C).





c_0(0).
c_1(1).
c_2(2).
c_3(3).
c_4(4).
c_5(5).
c_6(6).
c_7(7).
c_8(8).
c_9(9).
c_10(10).
c_11(11).
c_12(12).
c_13(13).
c_14(14).
c_15(15).
c_16(16).
c_17(17).
c_18(18).
c_19(19).
c_20(20).
c_21(21).
c_22(22).
c_23(23).
c_24(24).
c_25(25).
c_26(26).
c_27(27).
c_28(28).
c_29(29).
c_30(30).
c_31(31).
c_32(32).
c_33(33).
c_34(34).
c_35(35).
c_36(36).
c_37(37).
c_38(38).
c_39(39).
c_40(40).
c_41(41).
c_42(42).
c_43(43).
c_44(44).
c_45(45).
c_46(46).
c_47(47).
c_48(48).
c_49(49).
c_50(50).
c_51(51).
c_52(52).
c_53(53).
c_54(54).
c_55(55).
c_56(56).
c_57(57).
c_58(58).
c_59(59).
c_60(60).
c_61(61).
c_62(62).
c_63(63).
c_64(64).
c_65(65).
c_66(66).
c_67(67).
c_68(68).
c_69(69).
c_70(70).
c_71(71).
c_72(72).
c_73(73).
c_74(74).
c_75(75).
c_76(76).
c_77(77).
c_78(78).
c_79(79).
c_80(80).
c_81(81).
c_82(82).
c_83(83).
c_84(84).
c_85(85).
c_86(86).
c_87(87).
c_88(88).
c_89(89).
c_90(90).
c_91(91).
c_92(92).
c_93(93).
c_94(94).
c_95(95).
c_96(96).
c_97(97).
c_98(98).
c_99(99).
c_100(100).
:-end_bg.
:-begin_in_pos.
f([52, 25, 7, 16, 1, 45, 35],35).
f([86, 53, 75, 66, 27, 37, 88, 69, 84, 90, 90, 37, 85, 31, 71, 53, 63, 11, 85, 23, 16, 89, 43, 42, 27, 57],57).
f([70, 101, 37, 4, 94, 49, 71, 18, 71, 18, 4, 90, 43, 18, 92, 32, 87, 65, 71, 80, 100, 66, 85, 47, 65, 54, 52, 76, 55, 70, 27, 37, 84, 77, 20, 8, 60, 87],87).
f([62, 67, 90, 68, 53, 69, 36, 65, 78, 57, 55, 54, 38, 10, 84, 62, 84, 7],7).
f([40, 16, 2, 15, 14, 56, 52, 83, 2, 42, 33, 56, 16, 76, 16, 71, 48, 57, 32, 3, 41, 4, 66, 93, 82, 47, 13, 68, 71],71).
f([94, 55, 52, 57, 88, 29, 28, 4, 52, 56, 35, 98, 72, 43, 53, 82, 33, 99, 70, 97, 1, 78, 15, 89, 80, 27, 40, 84, 33, 26, 58, 85, 95, 40, 55, 70, 7],7).
f([66, 21, 94, 60, 76, 80, 21, 101, 42, 83, 13, 80, 85, 51, 60, 12, 81, 47, 38, 5, 21, 3, 27, 80, 47, 101, 88, 69, 87, 99, 6, 88, 12, 101, 79, 59, 69, 70, 52],52).
f([64, 23, 98, 60, 63, 28, 89, 81, 78, 83],83).
f([65, 67, 25, 40, 84, 70, 67, 95, 86, 66, 61, 74, 45, 99, 85, 36, 47, 41, 99, 72, 73, 7, 69, 68, 46, 10],10).
f([20, 7, 62, 96, 92, 85, 35, 80, 75, 23, 70, 47, 2, 19, 45, 39, 48, 31, 56, 56, 30, 86, 27, 17, 78, 3, 25, 33, 95, 30, 98, 82, 51, 73, 14, 23, 29, 1, 20, 65],65).
f([94, 97, 89, 26, 19, 3, 69, 36, 26, 50, 45, 12, 10, 20, 70, 75, 60, 101, 82, 26, 62, 28, 91, 76, 21, 17, 24, 61, 40, 44, 31, 74, 52, 44, 67, 64, 90, 60, 99, 73, 63, 13, 83, 13, 9, 63, 67, 87, 48, 67],67).
f([48],48).
f([8, 5, 55, 89, 27, 16, 87, 42, 89, 18, 62, 96, 20, 91, 75],75).
f([18, 44, 91, 53, 8, 87, 61, 58, 14, 30, 2, 8],8).
f([96, 16, 5, 31, 49, 39, 78, 52, 100, 89, 53, 81, 65, 70, 23],23).
f([3, 49, 5, 35, 6, 10, 88, 17, 93, 35, 22, 59, 46, 48, 87, 76, 79, 68, 45, 42, 52, 17, 36, 87, 84, 22, 36, 97, 50, 61, 17, 14, 30, 37, 72],72).
f([6, 27, 81, 38, 67, 37, 10, 40, 77, 70, 60, 3, 72, 6, 48, 12, 31, 47, 96, 63, 30, 10, 72, 47, 78, 59, 83, 62, 101, 19, 27, 33, 11, 50, 98, 77, 36, 14],14).
f([74, 28, 6, 92, 10, 60, 45, 22, 1, 48, 83, 99, 36, 90, 72, 6, 64],64).
f([77, 51, 50, 22, 99, 94, 6, 82, 91, 1, 82, 92, 63],63).
f([72, 22, 5, 89, 20, 70],70).
:-end_in_pos.
:-begin_in_neg.
f([78, 43, 29, 81, 76, 26, 25, 91, 2, 40, 55, 65, 11, 15, 47, 39, 74, 45, 67],47).
f([25, 52, 21, 82, 4, 90, 27, 27, 17, 11, 53, 10],11).
f([43, 51, 8, 66, 60, 31, 98, 73, 68, 23, 8, 38, 65, 16, 91, 51, 74, 60, 62, 43, 90, 75, 84, 45, 67, 88, 56, 60, 20, 53, 64, 51, 101, 89, 61],98).
f([37, 28, 94, 88, 63, 85, 75, 51, 85, 25, 33, 50, 18, 62, 80, 12],85).
f([13, 99, 84],99).
f([13, 5, 48, 48, 9, 86, 47, 41, 91, 33, 82, 14, 41, 3, 38, 85, 50, 21, 41, 49, 98, 54, 6, 80, 42, 38, 20, 46, 22, 48, 98, 100, 65, 2, 92, 19, 85, 58],41).
f([42, 58, 35, 84, 30, 100, 71, 31, 48],100).
f([7, 48, 63, 79, 23, 47, 43, 67, 53, 35, 90, 66, 20, 38, 70, 5, 50, 15, 1, 96, 56, 48, 16, 73, 99, 30],38).
f([3, 91, 82, 100, 7, 80, 37, 46, 83, 20, 24, 11, 56, 33, 30, 12, 48, 17, 29, 68, 13, 91, 45, 62, 45, 11, 68, 15, 27, 30, 51, 50, 29, 33, 69, 57, 24, 85, 2],24).
f([88, 88, 2, 55, 4, 63, 53, 80, 83, 49, 88, 77, 44, 13, 54, 59, 88, 62, 91, 47, 78, 30, 36, 44, 99, 75, 97, 45],63).
f([92, 47, 7, 75, 52, 64, 54, 54, 55, 57, 82, 13, 61, 1, 60, 39, 17, 65, 39, 64, 74, 63, 27, 63, 40, 18, 5, 78, 14, 101, 5, 85],78).
f([89, 13, 2, 70, 32, 43, 14, 84, 7, 50, 88, 64, 55, 80, 67, 59, 89, 6, 24, 51, 44, 9, 84, 93, 34, 36, 12, 56],84).
f([2, 92, 6, 19, 50, 31, 16, 10, 94, 30, 77, 37, 48, 21, 83, 21, 72, 65, 79, 33, 22, 74, 54, 55, 42, 91, 51, 45, 1, 18, 98, 3, 45],16).
f([14, 11, 95, 92, 27, 77, 40, 71, 81, 42, 94, 22, 35, 12, 39, 14, 27, 75, 88, 35, 82, 68, 76, 77, 45, 22, 50, 4, 22, 28, 4, 73, 19, 24, 28, 75, 64, 65, 11, 79, 35, 87, 50, 50, 5],77).
f([63, 14, 62, 82, 87, 27, 57, 98, 98, 66, 8, 24, 46, 20, 86, 84, 88, 73, 83, 74, 88, 10, 81, 30, 56, 90, 6, 40, 75, 37, 38, 83, 84, 94, 78, 71, 3],83).
f([86, 79, 46, 11, 1, 14, 59, 37, 82, 65, 101, 30, 61, 47, 99, 63, 88, 52, 40, 62, 87, 62, 81, 12, 33, 2, 45, 29, 53, 49, 19, 55, 31, 17, 90, 53, 59, 61, 87, 90, 44],63).
f([83, 57, 84, 87, 67, 24, 17, 42, 49, 42, 10, 97, 33, 73, 86, 37, 29, 87, 37, 31, 56, 66],84).
f([85, 56, 75, 92, 41, 32, 52, 3, 100, 61, 19, 28, 36, 45, 8, 75, 92, 42, 89, 68, 32, 71, 74, 72, 31, 10, 91, 19, 28, 27, 41, 89, 91, 11, 49, 69, 53, 19, 39, 32, 45, 69, 28, 65, 49, 48, 93, 67, 55, 96],91).
f([17, 40, 47, 12, 34, 78, 92, 89, 83, 6, 54, 54, 83, 64, 39, 97, 34, 52, 14, 41],12).
f([8, 58, 82, 49, 3, 44, 33, 14, 32, 70, 66, 88, 75, 28, 98, 9, 77, 67, 41, 85, 4, 82, 14, 79, 43, 51, 5, 2, 12, 52, 18, 78, 87, 2, 59, 21],82).
:-end_in_neg.

:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list)).
:- modeb(*,f(+list)).
:- modeb(*,sum(+element,+element,-element)).

:- determination(f/2,head/2).
:- determination(f/2,tail/2).
:- determination(f/2,geq/2).
:- determination(f/2,empty/1).
:- determination(f/2,even/1).
:- determination(f/2,odd/1).
:- determination(f/2,one/1).
:- determination(f/2,zero/1).
:- determination(f/2,decrement/2).
:- determination(f/2,f/2).
%% :- determination(f/2,element/2).
%% :- determination(f/2,increment/2).
%% :- determination(f/2,element/2).
:- determination(f/2,sum/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.

my_append(A,B,C):-
    append(A,[B],C).





c_0(0).
c_1(1).
c_2(2).
c_3(3).
c_4(4).
c_5(5).
c_6(6).
c_7(7).
c_8(8).
c_9(9).
c_10(10).
c_11(11).
c_12(12).
c_13(13).
c_14(14).
c_15(15).
c_16(16).
c_17(17).
c_18(18).
c_19(19).
c_20(20).
c_21(21).
c_22(22).
c_23(23).
c_24(24).
c_25(25).
c_26(26).
c_27(27).
c_28(28).
c_29(29).
c_30(30).
c_31(31).
c_32(32).
c_33(33).
c_34(34).
c_35(35).
c_36(36).
c_37(37).
c_38(38).
c_39(39).
c_40(40).
c_41(41).
c_42(42).
c_43(43).
c_44(44).
c_45(45).
c_46(46).
c_47(47).
c_48(48).
c_49(49).
c_50(50).
c_51(51).
c_52(52).
c_53(53).
c_54(54).
c_55(55).
c_56(56).
c_57(57).
c_58(58).
c_59(59).
c_60(60).
c_61(61).
c_62(62).
c_63(63).
c_64(64).
c_65(65).
c_66(66).
c_67(67).
c_68(68).
c_69(69).
c_70(70).
c_71(71).
c_72(72).
c_73(73).
c_74(74).
c_75(75).
c_76(76).
c_77(77).
c_78(78).
c_79(79).
c_80(80).
c_81(81).
c_82(82).
c_83(83).
c_84(84).
c_85(85).
c_86(86).
c_87(87).
c_88(88).
c_89(89).
c_90(90).
c_91(91).
c_92(92).
c_93(93).
c_94(94).
c_95(95).
c_96(96).
c_97(97).
c_98(98).
c_99(99).
c_100(100).
:-end_bg.
:-begin_in_pos.
f([46, 86, 30, 37, 81, 87, 97],464).
f([29, 62, 35, 45, 41],212).
f([31, 76, 2, 59, 50, 90, 55, 6, 49, 96],514).
f([80, 87, 19, 58, 33, 14, 62, 24, 21, 58, 82, 76, 39, 6, 33, 26, 63, 74, 60, 93, 101, 59],1168).
f([99, 99, 75, 76, 57, 89, 45, 79, 59, 39, 52, 65, 43, 11, 64, 100, 74, 77, 31, 46, 86, 65, 71, 8, 62, 86, 37, 38, 70, 43, 33, 70, 19],1968).
f([13, 51, 44, 58, 15, 59, 59, 87, 8, 50, 10, 51, 35, 8, 22, 9, 89, 52, 41, 10, 34, 74, 77, 48, 34, 101, 94, 80, 19, 73, 25, 59, 62, 18, 7, 46, 24, 84, 89, 4, 36, 14, 55, 55, 3, 22, 21, 25, 2],2056).
f([71, 21, 31, 79, 79, 59, 96, 97, 84, 49, 72, 12, 14, 15, 32, 39, 29, 93, 68, 26, 59, 97, 92, 34, 51, 42, 3, 30],1474).
f([54, 55, 17, 13, 15, 36, 94, 9, 31, 58, 101, 94, 36, 69],682).
f([46, 64, 100, 74, 9, 6, 8],307).
f([24, 65, 74, 97, 14, 88, 43, 24, 47, 6, 85, 56, 79, 21, 82, 13, 5, 59, 81, 93, 79, 48, 60, 100, 101],1444).
f([13, 82, 50, 25, 79, 41, 19, 41, 7, 29, 83, 83, 19, 93, 81, 34, 80, 55, 83, 19, 84, 8, 84, 82],1274).
f([97, 11, 87, 65, 24, 12, 74, 84, 48, 88, 70, 88, 43, 58, 16, 64, 11, 15, 72, 44, 53, 51, 61, 100, 35, 29, 38, 40, 91, 49, 3],1621).
f([52, 62, 9, 75, 62, 46, 87, 22, 78, 52, 80, 56, 95, 33, 30, 65, 23, 31, 72, 75, 27, 59, 78, 84, 31, 43, 35, 62, 21, 82, 28, 46, 55, 100],1856).
f([88, 47, 21, 92, 72, 53, 49, 7, 20, 33, 50, 4, 34, 15, 43, 100, 37, 1, 5, 4, 60, 41, 79, 38, 19, 23, 60, 18, 48, 14, 58, 75, 73],1381).
f([53, 68, 14, 52, 74, 29, 43, 22, 54, 59, 27, 21, 33, 56, 5, 74, 21, 12, 32, 48, 67, 91, 34, 28, 53, 99, 24, 40, 27, 62, 41, 49, 6, 19, 67, 12, 26, 72, 52, 77, 3, 93],1839).
f([52, 21, 10, 62, 66, 33, 28, 98],370).
f([83, 14, 76, 52],225).
f([67, 22, 23, 67, 14, 99, 55, 15, 15, 77, 69, 86, 10, 30, 62, 47, 44, 86, 78, 29, 35, 95, 101, 34, 67, 53, 29, 22, 37, 35, 21, 24, 50, 30, 17, 63, 36, 1],1745).
f([40, 17, 37, 88, 90, 75, 97, 93, 58, 25, 79, 19, 60, 88, 62, 69, 9, 68, 17, 85, 20, 54, 66, 83, 7, 6, 6, 1, 69, 93, 93, 18, 81, 89],1862).
f([94, 6, 60, 33, 97, 10, 49, 4, 47, 86, 54, 98, 2, 55, 79, 32, 41, 28, 65],940).
:-end_in_pos.
:-begin_in_neg.
f([20, 85, 84, 50, 70, 60],[85]).
f([48, 4, 95, 92, 67, 31, 88],[48]).
f([2, 56, 39, 66, 65, 38, 13, 48, 80, 27, 11, 32, 46, 67, 51, 9, 71, 30, 91, 80, 2, 22, 4, 40, 1, 94, 93, 87, 72, 31, 16, 92, 40, 52, 18, 81, 20, 10, 6, 17, 4, 22, 36, 43, 59],[67]).
f([42, 100, 20, 98, 59, 97, 81, 96, 68, 101, 31, 54, 39, 56],[100]).
f([46, 72, 94, 45, 49, 85, 17, 73, 93, 91, 51, 75, 30, 40, 11, 84, 62, 16, 26, 95, 44, 30, 75, 74, 78, 6, 78, 96, 86, 49, 3, 72, 64, 57, 18, 19, 69, 93, 80, 1, 96, 94, 48, 16, 1, 24, 87],[75]).
f([7, 50, 90, 69, 39, 64, 92, 90, 56, 73, 7, 19, 7, 45, 53, 85, 86, 17, 55, 80, 25, 15, 67, 91, 22, 76, 4],[85]).
f([77, 43, 29, 7, 31, 81, 9, 16, 4, 76, 50, 91, 86, 32, 63, 40, 55, 87, 46, 39, 49, 58, 28, 43, 50, 14, 46, 89, 55, 58],[43]).
f([33, 26, 36, 53, 60, 86, 40, 7, 48, 48, 29, 34, 42, 96, 85, 22, 41, 72, 11, 57, 96, 22, 13, 80, 88, 47, 62, 79, 72, 65, 69, 26, 84, 88, 100],[88]).
f([79],[79]).
f([84, 48, 68, 35, 88, 57, 80, 101, 7, 30, 86, 10, 54, 58, 1, 50],[86]).
f([47, 5, 66, 67, 28, 83, 60, 3, 20, 82, 84, 28, 40, 66, 88, 9, 93, 43, 69, 64, 99, 25, 88, 93, 100, 77, 98, 9, 37, 72, 55, 7, 60, 32, 11, 79, 9, 93, 81, 11],[3]).
f([40, 17, 14, 30, 59, 9, 18, 42, 60, 21, 56, 47, 76, 88, 41, 15],[47]).
f([65, 3, 29, 47, 80, 59, 1, 84, 87, 77, 56, 58, 72, 18, 12, 89, 30, 54, 17, 32, 6, 26, 37, 27, 84, 33],[54]).
f([94, 38, 28, 25, 55, 87, 100],[100]).
f([62, 84, 23, 80, 91, 59, 89, 46, 83, 28, 13, 3, 62, 80, 100, 54, 97, 8, 1, 81, 18, 44],[91]).
f([23, 21, 9, 10, 85, 6, 64, 44, 11, 61, 62, 45, 34, 44, 88, 17, 18],[61]).
f([4, 35, 100, 58, 63, 4, 72, 42, 82, 22, 34, 63, 83, 88],[34]).
f([60, 4, 7, 95, 13, 29, 59, 39, 13, 5],[60]).
f([29, 23, 81, 28, 41, 32, 9, 93, 29, 23, 73, 71, 7, 15, 78, 8, 31, 48, 15, 13, 58, 89, 77],[77]).
f([29, 34],[29]).
:-end_in_neg.

:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list)).
:- modeb(*,f(+list)).
:- modeb(*,sum(+element,+element,-element)).

:- determination(f/2,head/2).
:- determination(f/2,tail/2).
:- determination(f/2,geq/2).
:- determination(f/2,empty/1).
:- determination(f/2,even/1).
:- determination(f/2,odd/1).
:- determination(f/2,one/1).
:- determination(f/2,zero/1).
:- determination(f/2,decrement/2).
:- determination(f/2,f/2).
%% :- determination(f/2,element/2).
%% :- determination(f/2,increment/2).
%% :- determination(f/2,element/2).
:- determination(f/2,sum/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.

my_append(A,B,C):-
    append(A,[B],C).





c_0(0).
c_1(1).
c_2(2).
c_3(3).
c_4(4).
c_5(5).
c_6(6).
c_7(7).
c_8(8).
c_9(9).
c_10(10).
c_11(11).
c_12(12).
c_13(13).
c_14(14).
c_15(15).
c_16(16).
c_17(17).
c_18(18).
c_19(19).
c_20(20).
c_21(21).
c_22(22).
c_23(23).
c_24(24).
c_25(25).
c_26(26).
c_27(27).
c_28(28).
c_29(29).
c_30(30).
c_31(31).
c_32(32).
c_33(33).
c_34(34).
c_35(35).
c_36(36).
c_37(37).
c_38(38).
c_39(39).
c_40(40).
c_41(41).
c_42(42).
c_43(43).
c_44(44).
c_45(45).
c_46(46).
c_47(47).
c_48(48).
c_49(49).
c_50(50).
c_51(51).
c_52(52).
c_53(53).
c_54(54).
c_55(55).
c_56(56).
c_57(57).
c_58(58).
c_59(59).
c_60(60).
c_61(61).
c_62(62).
c_63(63).
c_64(64).
c_65(65).
c_66(66).
c_67(67).
c_68(68).
c_69(69).
c_70(70).
c_71(71).
c_72(72).
c_73(73).
c_74(74).
c_75(75).
c_76(76).
c_77(77).
c_78(78).
c_79(79).
c_80(80).
c_81(81).
c_82(82).
c_83(83).
c_84(84).
c_85(85).
c_86(86).
c_87(87).
c_88(88).
c_89(89).
c_90(90).
c_91(91).
c_92(92).
c_93(93).
c_94(94).
c_95(95).
c_96(96).
c_97(97).
c_98(98).
c_99(99).
c_100(100).
:-end_bg.
:-begin_in_pos.
f([28, 69, 85, 69, 66, 63, 37, 28, 69, 33, 24, 10, 78, 69, 2, 58, 69, 21, 45, 46, 26],995).
f([73, 99, 15, 20, 76, 28, 20, 96, 43, 34, 32, 89, 27, 85, 24, 14, 32, 84, 86, 35, 94, 23, 56, 83, 7, 36, 53, 28, 61, 84, 58, 72, 98, 86, 30, 33, 94, 27, 44, 28, 73, 96, 28, 45, 64, 39, 35, 32, 69, 92],2680).
f([76, 8, 54, 65, 35, 90, 17, 65, 92, 72, 98, 13, 49, 63, 87, 38, 58, 25, 35, 72, 59, 33, 40, 10, 88, 16, 61, 48, 86, 24, 75, 81, 75, 71, 86, 75, 56, 76, 25, 85, 15, 66, 4, 28, 42, 21, 60],2518).
f([42, 101, 87, 3, 22, 21, 53, 24, 27, 57, 68, 21, 62, 70, 18, 88, 57, 8, 82, 34, 54, 61, 34, 40, 57, 61, 64, 1, 21, 5, 14, 53, 99, 43, 34, 27],1613).
f([15, 31, 72, 42, 99, 34, 36, 31, 97],457).
f([1, 51, 40, 72, 91, 69, 99, 100, 93, 100],716).
f([34, 13, 5, 52, 47, 14, 22, 49, 69, 54, 8, 32, 30, 33, 87, 77, 88, 67, 100, 47, 47, 69, 87, 12],1143).
f([45],45).
f([4, 59, 41, 42, 56, 78, 59, 29, 26, 62, 15, 55, 12, 3, 40, 30, 47, 43, 6, 73, 21, 57, 69, 48, 65, 83, 97, 72, 6, 101, 32, 87, 28, 101, 58, 62, 73, 35, 41, 50, 78, 66, 28, 91],2229).
f([38, 98, 7, 99, 19, 18, 96, 100, 3, 62, 46, 2, 51, 77],716).
f([62, 76, 46, 74, 45, 95, 69, 69, 38, 7, 7, 68, 47, 76, 86, 54, 74, 55],1048).
f([53, 93, 85, 40, 39, 81, 10, 10],411).
f([56, 32, 24, 31, 41, 95, 55, 38, 75, 83, 79, 33, 65, 42, 60, 73, 72, 52, 101, 1, 95, 71, 21, 33, 68, 56, 67, 29, 45, 96, 34, 54],1777).
f([58],58).
f([45, 1, 6, 1, 55, 44, 75, 5, 36, 30, 101, 16, 80],495).
f([34, 70, 80, 97, 40, 86, 78, 13, 71, 89, 61, 32, 32, 25, 6, 46, 5, 96, 27, 43, 47, 5, 87, 93],1263).
f([68, 91, 33, 70, 38, 64, 76, 101, 44, 64, 27, 22, 84, 93, 100, 51, 21, 20, 71, 85, 80, 93, 31, 82],1509).
f([73, 17, 88],178).
f([4, 63, 43, 9, 101, 9, 85, 85, 72, 34, 24, 87, 100, 27, 47, 5, 51, 40],886).
f([43, 73, 7, 44, 76, 61, 27, 30, 23, 99, 101, 62, 75, 95, 49, 22, 59, 30, 91, 6, 45, 96, 45, 22, 91, 12, 11, 69, 96, 67, 21, 53, 78, 54, 27, 65, 69, 42, 53, 21, 62, 58, 29, 16, 35, 50, 95, 64, 29],2548).
:-end_in_pos.
:-begin_in_neg.
f([21, 2, 92, 71, 44, 79, 67, 30, 47, 73, 62, 29, 66, 90, 51, 66, 79, 27, 41, 22, 57, 63, 56, 100, 90, 58, 52, 5, 85, 95, 2, 38, 68, 50],[21]).
f([100, 1, 77, 30, 87, 62, 96, 17, 82, 87, 100],[87]).
f([16, 73],[16]).
f([90, 4, 58, 26, 39, 11, 95, 65, 76],[95]).
f([59, 57, 75, 29, 92, 10, 31, 98, 12],[98]).
f([89, 38, 18, 96, 17, 61, 65, 37, 91, 29, 4, 28, 92, 64, 9, 70, 58, 83, 34, 97, 87, 1, 29, 88, 19, 89, 85, 31, 35, 72, 20, 43, 74, 32],[32]).
f([73, 87, 25, 95, 88, 99, 83, 95, 22, 37, 13, 36, 21, 82, 14, 42, 29, 69, 12, 37, 37, 95, 60, 59, 54, 86, 88, 20, 48, 87, 83, 61, 58, 19, 57, 46, 30, 90, 9, 95, 97, 86, 82, 83, 81, 39, 101, 43, 57],[43]).
f([21, 52, 11, 73, 65, 10, 65, 22, 21, 10, 5, 19, 37, 13, 27],[10]).
f([40, 67, 47, 76, 97, 72, 28, 14, 48, 88, 22, 59, 22, 27, 51, 38, 21, 97, 101, 92, 74, 89],[22]).
f([55, 9, 11, 8, 91, 26, 79, 1, 4, 4, 7, 91, 48],[55]).
f([66, 48, 88, 34, 13, 87, 80, 98, 41, 23, 77, 85, 17, 86],[80]).
f([21, 52, 91, 76, 64, 66, 75, 93, 7, 41, 23, 61, 18, 79, 50, 52, 65, 51],[76]).
f([31, 15, 77, 73, 88, 6, 7, 48, 58, 86, 99, 74, 38, 47, 5, 18, 74, 30, 11, 25, 41, 40, 67],[47]).
f([18, 86, 55, 76, 5, 23, 43, 31, 28, 15, 46, 86, 57, 48, 65, 32, 94, 74, 30, 25, 52, 80, 51, 6, 74, 34, 72, 28, 92, 31, 78, 42, 95, 57, 87, 38, 92, 73, 6, 25, 27],[28]).
f([29, 18, 64, 100, 3, 54, 74, 11, 22, 96, 49, 72, 23, 51, 56, 60, 18, 28, 66, 38, 29, 6, 81, 74, 46, 66, 50, 51, 32, 29, 38, 79, 91, 90, 89, 18, 94, 25, 6, 11, 87, 40, 42, 93, 21, 7, 49, 52, 57, 43, 39],[29]).
f([75, 82, 33, 37, 37, 35, 46],[37]).
f([23, 56, 37, 72, 21, 49, 84, 43, 11, 14, 39, 24, 95, 77, 95, 87, 85, 29, 47, 95, 86, 78, 28, 55, 23, 39, 28, 13, 85, 13, 60, 9, 13, 12, 96, 61, 43, 92, 33, 8, 7, 29, 45, 56, 20, 2, 65, 97],[95]).
f([40, 62, 52, 86, 34, 87, 45, 48, 26, 54, 88, 14, 15, 54, 76, 73, 101, 84, 8, 7, 100, 40, 32, 92, 69, 11, 92, 81, 50, 29, 7, 75, 69, 32, 15, 83, 61, 44, 84, 76, 43, 57],[7]).
f([21, 100, 63, 15],[100]).
f([34, 19, 46, 89, 19, 19, 2, 27, 62, 11, 39, 68, 68, 92, 48, 100, 43, 22, 95, 53, 9, 91, 48, 32, 87, 94, 53, 63, 38, 38, 66, 43, 33, 8, 69, 88, 20, 36, 60, 39, 81, 89, 18, 26, 43, 36, 69, 17, 42, 87, 42],[94]).
:-end_in_neg.

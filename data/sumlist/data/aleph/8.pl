:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list)).
:- modeb(*,f(+list)).
:- modeb(*,sum(+element,+element,-element)).

:- determination(f/2,head/2).
:- determination(f/2,tail/2).
:- determination(f/2,geq/2).
:- determination(f/2,empty/1).
:- determination(f/2,even/1).
:- determination(f/2,odd/1).
:- determination(f/2,one/1).
:- determination(f/2,zero/1).
:- determination(f/2,decrement/2).
:- determination(f/2,f/2).
%% :- determination(f/2,element/2).
%% :- determination(f/2,increment/2).
%% :- determination(f/2,element/2).
:- determination(f/2,sum/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.

my_append(A,B,C):-
    append(A,[B],C).





c_0(0).
c_1(1).
c_2(2).
c_3(3).
c_4(4).
c_5(5).
c_6(6).
c_7(7).
c_8(8).
c_9(9).
c_10(10).
c_11(11).
c_12(12).
c_13(13).
c_14(14).
c_15(15).
c_16(16).
c_17(17).
c_18(18).
c_19(19).
c_20(20).
c_21(21).
c_22(22).
c_23(23).
c_24(24).
c_25(25).
c_26(26).
c_27(27).
c_28(28).
c_29(29).
c_30(30).
c_31(31).
c_32(32).
c_33(33).
c_34(34).
c_35(35).
c_36(36).
c_37(37).
c_38(38).
c_39(39).
c_40(40).
c_41(41).
c_42(42).
c_43(43).
c_44(44).
c_45(45).
c_46(46).
c_47(47).
c_48(48).
c_49(49).
c_50(50).
c_51(51).
c_52(52).
c_53(53).
c_54(54).
c_55(55).
c_56(56).
c_57(57).
c_58(58).
c_59(59).
c_60(60).
c_61(61).
c_62(62).
c_63(63).
c_64(64).
c_65(65).
c_66(66).
c_67(67).
c_68(68).
c_69(69).
c_70(70).
c_71(71).
c_72(72).
c_73(73).
c_74(74).
c_75(75).
c_76(76).
c_77(77).
c_78(78).
c_79(79).
c_80(80).
c_81(81).
c_82(82).
c_83(83).
c_84(84).
c_85(85).
c_86(86).
c_87(87).
c_88(88).
c_89(89).
c_90(90).
c_91(91).
c_92(92).
c_93(93).
c_94(94).
c_95(95).
c_96(96).
c_97(97).
c_98(98).
c_99(99).
c_100(100).
:-end_bg.
:-begin_in_pos.
f([94, 55, 54, 77, 88, 30, 56, 48, 95, 18, 93, 85, 61, 70, 24, 60, 58, 46, 69, 29, 23, 65, 47],1345).
f([60, 92, 50, 23, 73, 90, 95, 98, 96, 66, 51, 13, 45, 3, 8, 81, 55, 48, 89, 65, 82, 92, 9, 97, 72, 22, 17, 53, 69, 60, 64, 65, 54, 23, 100, 52, 35, 21, 61, 39, 45, 76, 16, 66, 3],2494).
f([26, 36, 85, 2, 67, 75, 72, 63, 58, 64, 60, 29, 2, 96, 72, 35, 20, 62, 54, 25, 49, 50, 26, 33, 53, 99, 31, 95, 18, 89],1546).
f([32, 62, 48, 93, 65, 9, 3, 85, 34, 54, 73, 81, 62, 48, 49, 31, 52, 67, 37],985).
f([27, 29, 68, 38, 85, 66, 101, 29, 79, 51, 32, 54, 21, 56, 1, 98, 78, 81, 47, 2, 52, 34, 6, 10, 36, 73, 45, 4, 28, 12, 76, 61, 7, 7, 30, 14, 92, 6, 86, 33, 26, 10, 49, 69, 64],1973).
f([43, 19, 48, 5, 21, 52, 15, 82, 31, 33, 93, 86, 48, 87, 101, 62, 60, 38, 95, 41, 83, 35, 16, 33, 58, 80, 90, 50, 100, 36],1641).
f([76, 19, 5, 91, 42, 83, 59, 95, 30, 34, 15, 47, 12, 64],672).
f([28, 8, 81, 90, 68, 85, 69, 98, 45, 27, 28, 46, 91, 73, 44],881).
f([28, 15, 26, 63, 24, 33],189).
f([50, 21, 11, 3, 13, 82, 53, 87, 46, 67, 54, 69],556).
f([3, 101, 73, 26, 44, 77, 69, 87, 17, 4, 52, 79, 5, 16, 13, 95, 1, 100, 55, 73, 77, 10, 96, 15, 72, 71, 7],1338).
f([7, 55, 71, 24, 14, 22, 12, 3, 53, 77, 4, 21, 48, 26],437).
f([22, 52, 37, 20, 42, 25, 14, 24, 94, 12, 53, 55, 9, 87, 15, 18, 77, 77, 10, 10, 55, 66],874).
f([81, 21, 101, 49, 32, 53, 70, 10, 14, 18, 20],469).
f([97, 65, 60, 8, 96, 24, 27, 10, 17, 36, 44, 94, 11, 14, 77, 12, 88, 71, 42, 53, 83, 51],1080).
f([59, 34, 15, 14, 66, 12, 101, 27, 94, 35, 20, 85, 5, 25, 66, 68, 89, 87, 67, 30, 70, 2, 10, 2, 86, 80, 56, 69, 86, 32, 43, 41, 65, 41, 21, 58, 34, 83, 17, 57, 31, 76, 40, 91, 75, 23, 17, 31, 60, 10],2406).
f([27, 46, 33, 25, 62, 92, 73, 17, 37, 99, 1, 83, 92, 68, 31, 56, 54, 9, 39, 35, 29, 10, 81, 57, 19, 82, 100],1357).
f([100, 8, 70, 55, 100, 59, 64, 37],493).
f([27, 62, 32, 32, 31, 3, 19, 61, 17, 85, 79, 7, 12, 94, 24, 41, 50, 88, 53, 64, 49, 20, 54, 74, 16, 32, 5, 7, 37, 60, 59, 48, 75, 101, 98, 36, 63, 2],1717).
f([57, 40, 39, 10, 97, 7, 2, 14, 40, 38],344).
:-end_in_pos.
:-begin_in_neg.
f([97, 55, 33, 73, 5, 99, 13, 4, 51, 21, 57, 3, 101, 51, 78, 25, 57, 62, 22, 38, 50, 68, 62, 26, 42, 26, 30, 91, 51, 24, 37, 54, 1, 74, 46, 48, 88, 96, 57, 85, 6, 42, 45, 63, 89, 80, 69, 57, 46],[97]).
f([39, 87, 99, 3, 66, 82, 13, 66, 18, 45, 81, 26, 79, 68, 69, 92, 95, 6, 29, 25, 10, 50, 71, 61, 10, 22, 46, 60, 30, 3, 92, 52, 67, 75, 82, 56, 39, 27],[99]).
f([59, 27, 18, 63, 48, 38, 49, 51, 83, 73, 99, 59, 38, 16, 13, 58, 80, 78, 67, 92, 89, 91, 19, 15, 16],[58]).
f([80, 10, 45, 69, 14, 99, 35, 77, 9, 9, 22, 9, 64, 90, 80, 9, 87],[80]).
f([60, 32, 74, 12, 1, 72, 87, 7, 40, 40, 14],[60]).
f([58, 95, 12, 90, 60, 86],[58]).
f([7, 82, 42, 58, 96, 14, 65, 58, 92, 47, 26, 70, 15, 26, 49, 4, 76, 67, 80, 100, 15, 11, 40, 8, 13, 56, 26, 93, 80, 40, 1, 71, 12, 88, 40, 63, 31, 40, 33, 35, 73, 22, 30, 11],[30]).
f([99, 97, 82, 79, 28, 98, 62, 47, 93, 18, 42, 56, 68],[68]).
f([69, 3, 23, 40, 14],[69]).
f([86, 65, 75, 9, 88, 63, 77, 42, 87, 94, 9, 57, 48, 64, 71, 46, 31, 54, 52, 80, 35, 15, 59, 60, 32, 98, 94, 1, 42, 63, 88, 47, 12, 45, 2, 77, 93, 43, 43, 56],[60]).
f([74, 63, 54, 3, 79, 65, 55, 72, 70, 79, 99, 56, 54, 47, 91, 99, 66, 9, 22, 8, 65, 84, 8, 62, 6, 62, 97, 83, 1, 70, 20, 21, 90, 4, 62, 82, 86, 27, 42, 28, 4, 37, 5, 29, 44, 5, 80, 89, 7],[8]).
f([58, 25, 61, 23, 56, 99, 55, 73, 99, 27, 17, 21, 1, 25, 69, 34, 55, 43, 64, 32, 64, 25, 61, 85, 10, 13, 81, 97, 22, 51, 58, 37, 45, 79, 55, 40, 85, 90, 46, 90, 78, 5, 51, 79, 99, 93, 22, 66, 38, 48],[97]).
f([43, 32, 62, 23, 93, 13, 37, 55, 34],[32]).
f([5, 98, 81, 69, 80, 26, 24, 58, 88, 74, 41, 51, 41, 60, 89, 47, 86, 13, 34, 80, 58, 56, 98, 67, 98, 28, 95, 98, 49, 84, 4, 62, 1, 54, 15, 44, 63, 98, 51, 51, 87, 90, 55, 96, 76, 37, 60, 6],[84]).
f([89, 42, 56, 40, 55, 21, 3, 68, 99, 42, 56, 37, 1, 18, 82, 4, 92],[99]).
f([37, 74, 72, 28, 26, 40, 79, 36, 53, 80, 30, 42, 88, 31, 3, 21, 94, 90, 98, 28, 86, 21, 91, 50, 16, 77, 43, 29, 58, 98, 54, 2, 62, 10],[98]).
f([73, 46, 92, 41, 83],[92]).
f([77, 17, 20, 99, 82, 12, 45, 45, 30, 25, 20, 25, 91, 89, 59, 20, 36, 10, 53, 60, 63, 54, 39, 92, 90, 76, 14, 67, 60, 51, 73, 23, 26, 86, 49, 20, 73, 77, 44, 19, 12, 66],[60]).
f([33, 5, 2, 62, 4, 35, 46, 55, 92, 27, 56, 28, 40, 57, 74, 64, 73, 96, 26, 20, 64, 42, 3, 87, 79, 38, 35, 44, 100, 82, 77, 57, 91, 11, 94, 100, 13, 57, 73, 63, 47, 65, 89],[87]).
f([83, 46, 49, 35, 58, 47, 28, 14, 5, 50, 50, 49, 59, 23, 38, 56, 52, 38, 7, 7, 79, 8, 15, 38, 101, 73, 11, 48, 88, 17, 88],[101]).
:-end_in_neg.

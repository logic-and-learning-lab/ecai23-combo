:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list)).
:- modeb(*,f(+list)).
%% :- modeb(*,cons(+element,+list,-list)).

:- determination(f/1,head/2).
:- determination(f/1,tail/2).
:- determination(f/1,geq/2).
:- determination(f/1,empty/1).
:- determination(f/1,even/1).
:- determination(f/1,odd/1).
:- determination(f/1,one/1).
:- determination(f/1,zero/1).
:- determination(f/1,decrement/2).
:- determination(f/1,f/1).
%% :- determination(f/1,increment/2).
%% :- determination(f/1,element/2).
%% :- determination(f/1,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.

my_append(A,B,C):-
    append(A,[B],C).





c_0(0).
c_1(1).
c_2(2).
c_3(3).
c_4(4).
c_5(5).
c_6(6).
c_7(7).
c_8(8).
c_9(9).
c_10(10).
c_11(11).
c_12(12).
c_13(13).
c_14(14).
c_15(15).
c_16(16).
c_17(17).
c_18(18).
c_19(19).
c_20(20).
c_21(21).
c_22(22).
c_23(23).
c_24(24).
c_25(25).
c_26(26).
c_27(27).
c_28(28).
c_29(29).
c_30(30).
c_31(31).
c_32(32).
c_33(33).
c_34(34).
c_35(35).
c_36(36).
c_37(37).
c_38(38).
c_39(39).
c_40(40).
c_41(41).
c_42(42).
c_43(43).
c_44(44).
c_45(45).
c_46(46).
c_47(47).
c_48(48).
c_49(49).
c_50(50).
c_51(51).
c_52(52).
c_53(53).
c_54(54).
c_55(55).
c_56(56).
c_57(57).
c_58(58).
c_59(59).
c_60(60).
c_61(61).
c_62(62).
c_63(63).
c_64(64).
c_65(65).
c_66(66).
c_67(67).
c_68(68).
c_69(69).
c_70(70).
c_71(71).
c_72(72).
c_73(73).
c_74(74).
c_75(75).
c_76(76).
c_77(77).
c_78(78).
c_79(79).
c_80(80).
c_81(81).
c_82(82).
c_83(83).
c_84(84).
c_85(85).
c_86(86).
c_87(87).
c_88(88).
c_89(89).
c_90(90).
c_91(91).
c_92(92).
c_93(93).
c_94(94).
c_95(95).
c_96(96).
c_97(97).
c_98(98).
c_99(99).
c_100(100).
:-end_bg.
:-begin_in_pos.
f([62, 86, 48, 100, 62, 44, 42, 26, 66, 44, 94, 80, 86, 42, 24, 46, 84, 70, 50, 86, 40]).
f([84, 68, 16, 16, 64, 30, 86, 16, 18, 52, 78, 10, 18, 10, 96, 88, 10, 26, 44, 82, 20, 30, 82, 94, 100, 38, 44, 84, 30, 60]).
f([2, 12, 66, 6, 86, 16, 26, 58, 62, 10, 56, 74, 74, 22, 90, 28, 56, 40, 86, 36, 42, 84, 42]).
f([36, 96, 72, 22, 54, 24, 16, 24, 20, 90, 68, 36, 94, 50, 98, 18, 100, 32, 96, 60, 100, 74, 50, 18, 46, 62, 88, 68, 56, 56]).
f([84, 70, 86, 70, 82, 64, 32, 86, 32, 26, 2, 48, 42, 52, 40, 56]).
f([2, 70, 16, 90, 30, 16, 54, 72, 72, 16, 74, 14, 42, 82, 26, 2, 52, 52, 54, 56, 62, 58, 10, 60, 32, 38, 76, 2, 60, 58, 94, 62, 30, 78, 80, 58, 66, 14, 54, 44, 96, 4, 56, 22, 76, 82, 18, 82]).
f([16, 36, 2, 86, 48, 80, 12, 24, 72, 52, 78, 96, 20, 10, 74, 34, 2, 4, 64, 78, 94, 50, 68, 78, 30, 40, 16]).
f([46, 56, 14, 58, 6, 80, 16, 60, 40, 30, 70, 90, 88, 4, 26, 98, 14, 56, 50, 76, 36, 96, 92, 28, 32, 80, 58, 18, 38, 46, 84, 92, 76, 100, 66, 98, 16, 36, 82, 46, 50, 38, 98, 62, 96]).
f([88, 44, 82, 72, 82, 42, 82, 74, 80, 100, 64, 88, 58, 76, 56, 46, 88, 80, 10, 10, 8, 6, 98, 66, 40, 98, 82, 48, 42, 100, 24, 94, 56, 98, 74, 64, 92, 72, 14, 58, 98, 74, 92, 48]).
f([82, 14, 56]).
f([78, 42, 30, 32, 14, 28, 80, 8, 52, 78, 46, 96, 66, 94, 42, 2, 84, 72, 10, 96, 30, 56, 90, 16]).
f([2, 96, 70, 30, 90, 22, 50, 56, 36, 50, 20, 52, 56, 58, 36, 12, 74, 40, 38, 34, 78, 8, 34, 40, 4, 98, 46, 94, 92, 26, 2, 56, 56, 70, 48, 50]).
f([18, 84, 24, 40, 34, 50, 18, 68, 58, 18, 52, 16]).
f([74, 72, 6, 76, 56, 100, 42, 64, 26, 84, 88, 46, 48, 24, 54, 18, 72, 4, 46, 92, 2, 26, 40, 34, 46]).
f([46, 100, 26, 68, 10, 66, 34, 74, 58, 24, 60, 46, 56, 32, 96, 86, 48, 44, 16, 82, 26, 24, 22, 4, 36, 62, 86, 56, 2, 10, 8, 38, 30, 30, 66, 68, 38, 58, 64, 82]).
f([44, 20, 20, 6, 96, 48, 10, 38, 16, 60, 68, 4, 4, 8, 34, 34, 64, 74, 6, 72, 62, 18, 78, 98, 82, 48, 70, 80, 82, 32, 18, 84, 20, 82, 56, 58, 74, 24, 22, 86, 38, 4, 64, 76, 86, 72, 40, 50, 54]).
f([50, 50, 54, 80, 98, 52, 52, 80, 94, 26, 86, 10, 50, 42, 20, 18, 50, 38, 76, 60, 66, 2, 10, 72, 6, 56, 42, 8, 58, 74, 62, 16, 26, 98, 10, 36, 82, 60, 38, 26, 76, 6, 32, 42]).
f([86, 74, 22, 60, 30, 64, 34, 88, 62, 4, 2, 80, 62, 44, 100, 46, 62, 72, 86, 8, 78, 74, 72]).
f([82, 32, 24, 6, 52, 4, 92, 30, 12, 8, 88, 20, 92, 98, 72, 86, 80, 70, 86, 4, 100, 38, 80, 24, 66, 34, 58, 32, 30, 14, 92, 38, 88, 10, 100, 46, 20, 48, 62, 28]).
f([72, 82, 42, 74, 38, 38, 50, 62, 16, 52, 100, 8, 58, 80, 8, 82, 94, 98, 24, 12, 52, 82, 74, 2, 10, 82, 44, 20, 46, 80, 14, 98, 44]).
:-end_in_pos.
:-begin_in_neg.
f([63, 70, 7, 52, 96, 15, 79, 43, 40, 80, 57, 57, 73, 81, 86, 17, 84, 59, 74, 89, 57, 95, 79, 3, 66, 2, 79, 59, 41, 44, 93, 43, 22, 45, 90, 77, 70, 21, 25, 29]).
f([60, 91, 100, 15, 94, 68, 23, 84, 22, 62, 40, 24, 47, 45, 7, 8, 14, 84, 88, 28, 85, 94, 43, 79, 18, 36, 90, 13, 9, 27, 82, 63, 32, 17, 19, 72, 90, 25, 1, 84, 3, 54, 59]).
f([28, 40, 32, 34, 90, 78, 38, 28, 46, 50, 45, 4, 14, 88, 16, 56, 28, 84, 32, 88, 52, 6, 19, 80, 52, 52, 32, 70, 76, 16, 39, 44, 78, 6, 40, 10, 62, 78, 20, 20, 9, 64, 48, 8]).
f([70, 82, 80, 92, 32, 99, 52, 82, 64, 38, 6, 66, 7, 100, 18, 90, 3, 98, 50, 92, 85, 29, 2, 53, 79, 60, 56]).
f([8, 4, 70, 64, 41, 59, 97, 57, 41, 64, 47, 65, 73, 63, 93, 70, 98, 5, 55, 19, 24, 14, 4, 15, 35, 32, 2, 82, 13, 55, 25, 46, 100, 26, 17, 31]).
f([50, 34, 40, 45, 96, 85, 20, 45, 44, 49, 1, 78, 6, 100, 49, 2, 70, 88, 64, 70, 18, 46, 22, 35, 22, 24, 16, 19, 35, 48, 98, 6, 94, 40, 42, 64, 38, 56, 90, 57, 18, 94, 68, 15, 66, 12, 71, 50]).
f([30, 24, 12, 82, 51, 6, 22, 22, 74, 78, 34, 68, 5, 15, 9, 54, 20, 62, 22, 77, 26, 10, 18, 34, 30, 1, 62, 82, 45, 56]).
f([56, 25, 20, 59, 82, 65]).
f([93, 91, 65, 69, 3, 75, 41, 73, 15, 69, 47, 41, 91]).
f([96, 66, 20, 23, 31, 51, 64, 57, 31, 89]).
f([13, 9, 17, 93, 24, 75, 13, 74, 99, 47, 2, 40, 58, 45, 5, 74, 11, 70, 98, 73, 56, 11, 41, 54, 83, 25, 46, 30]).
f([31, 49, 35, 42, 13, 99, 31, 99, 93, 67, 11, 90, 38, 65, 53, 1, 95, 98, 14, 77, 47, 17, 75, 11, 47, 83, 89, 43, 29, 43, 93, 12, 75]).
f([5, 35, 89, 15, 57, 21, 27, 63, 22, 58, 92, 15, 90, 41, 85, 96, 33, 55, 3, 54, 55, 7, 7, 75, 99, 29, 33, 60, 85, 10, 13, 1, 75, 46, 71, 75, 64, 45, 39, 47]).
f([23, 13, 89, 83, 3, 11, 39, 13, 56, 83, 3, 27, 55, 79, 72, 59, 11, 35, 85, 91, 71, 79, 9, 30, 31, 15, 95, 79, 83, 94, 95, 55, 54, 55, 77, 77, 69, 91, 73, 99, 78, 15, 15, 85]).
f([85, 43, 57, 43, 21, 89, 73, 97, 93, 99, 71, 13, 89, 63, 23, 11, 18, 62, 61, 33, 29, 49, 25, 85, 22, 61, 17, 63, 86, 35, 83, 67, 21, 37, 57, 45, 71, 5, 5, 59]).
f([5, 48, 25, 83, 100, 28, 30, 5, 86, 19, 58, 10, 46, 28, 12, 72, 42, 20, 100, 41, 82]).
f([74, 71, 70, 96, 66, 54, 55, 22, 72, 22, 27, 80, 82, 14, 34, 45, 60, 54, 31, 14, 65, 49, 48, 19, 94, 91, 24, 2, 16, 64, 16, 50, 64, 68, 55, 48, 88, 4, 26, 10, 100, 99, 49, 8, 46, 53, 98, 25]).
f([70, 5, 68, 22, 67, 30, 49, 89, 100, 96, 14, 38, 77, 32, 6]).
f([49, 7, 95, 28, 27, 24, 33, 75, 92, 63, 70, 60, 18, 87, 93, 15, 94, 39, 79, 53, 70, 17, 100, 49, 62, 15, 97, 89, 77, 83, 17, 54, 15, 1]).
f([63, 33, 71, 99, 75, 39, 51, 100, 87, 96, 9, 15]).
:-end_in_neg.

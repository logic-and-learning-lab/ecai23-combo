:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list)).
:- modeb(*,f(+list)).
%% :- modeb(*,cons(+element,+list,-list)).

:- determination(f/1,head/2).
:- determination(f/1,tail/2).
:- determination(f/1,geq/2).
:- determination(f/1,empty/1).
:- determination(f/1,even/1).
:- determination(f/1,odd/1).
:- determination(f/1,one/1).
:- determination(f/1,zero/1).
:- determination(f/1,decrement/2).
:- determination(f/1,f/1).
%% :- determination(f/1,increment/2).
%% :- determination(f/1,element/2).
%% :- determination(f/1,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.

my_append(A,B,C):-
    append(A,[B],C).





c_0(0).
c_1(1).
c_2(2).
c_3(3).
c_4(4).
c_5(5).
c_6(6).
c_7(7).
c_8(8).
c_9(9).
c_10(10).
c_11(11).
c_12(12).
c_13(13).
c_14(14).
c_15(15).
c_16(16).
c_17(17).
c_18(18).
c_19(19).
c_20(20).
c_21(21).
c_22(22).
c_23(23).
c_24(24).
c_25(25).
c_26(26).
c_27(27).
c_28(28).
c_29(29).
c_30(30).
c_31(31).
c_32(32).
c_33(33).
c_34(34).
c_35(35).
c_36(36).
c_37(37).
c_38(38).
c_39(39).
c_40(40).
c_41(41).
c_42(42).
c_43(43).
c_44(44).
c_45(45).
c_46(46).
c_47(47).
c_48(48).
c_49(49).
c_50(50).
c_51(51).
c_52(52).
c_53(53).
c_54(54).
c_55(55).
c_56(56).
c_57(57).
c_58(58).
c_59(59).
c_60(60).
c_61(61).
c_62(62).
c_63(63).
c_64(64).
c_65(65).
c_66(66).
c_67(67).
c_68(68).
c_69(69).
c_70(70).
c_71(71).
c_72(72).
c_73(73).
c_74(74).
c_75(75).
c_76(76).
c_77(77).
c_78(78).
c_79(79).
c_80(80).
c_81(81).
c_82(82).
c_83(83).
c_84(84).
c_85(85).
c_86(86).
c_87(87).
c_88(88).
c_89(89).
c_90(90).
c_91(91).
c_92(92).
c_93(93).
c_94(94).
c_95(95).
c_96(96).
c_97(97).
c_98(98).
c_99(99).
c_100(100).
:-end_bg.
:-begin_in_pos.
f([94, 70, 56, 28, 12, 38, 88, 84, 92, 48, 74, 6, 100, 42]).
f([46, 72, 68, 18, 62, 82, 100, 66, 4, 18, 32, 6, 26, 58, 20, 10]).
f([10, 92, 58, 78, 56, 36, 44, 68, 12, 44, 64]).
f([20, 44, 26, 42, 32, 42, 48, 34, 96, 34, 56, 78, 36, 48, 92, 16, 82, 84, 62, 54, 32, 82, 54, 92, 94, 32]).
f([92, 74, 70, 72, 24, 22, 44, 84, 46, 92, 64, 54, 90, 18, 30, 36, 50, 96, 96, 10, 98, 28, 70]).
f([90, 74, 36, 30, 36, 44, 18, 60, 68, 80, 28, 30, 70, 92, 32, 32, 22, 90, 90, 60, 98, 12, 84, 4, 60, 80, 10, 6, 98, 62, 68, 12, 38, 34, 18, 46, 18, 58, 2, 4, 58, 86, 52, 90, 20, 82, 66, 88, 58, 82, 42]).
f([40, 52, 24, 34, 86, 82, 8, 30, 38, 38, 78, 90, 72, 98, 16, 100, 52, 84, 16, 30, 70, 88, 12, 4, 54, 12, 38, 58, 24, 28, 18, 34, 26, 26, 14, 90, 38, 2, 46, 80, 10, 32, 80]).
f([6, 78, 68, 18, 18, 96, 92, 30, 96, 8, 32, 100, 24, 22, 30, 10, 86, 24, 14, 78, 44, 8, 28, 30, 34, 4, 16, 22, 56, 34]).
f([82, 30, 56, 60, 58, 14, 36, 94, 92, 70, 30, 32, 26, 98, 42, 46, 32, 30, 86, 24, 96, 4, 52, 94, 44, 66]).
f([78, 60, 44, 46, 12, 24, 20, 62, 100, 78, 90, 14, 96, 14, 50, 38, 8, 40, 54, 30, 48, 94, 38, 70, 14, 88, 46, 92, 60, 76, 12, 34, 2, 78, 46, 46, 36, 86, 36, 98, 8, 20, 22, 38, 10, 62, 62, 94, 78]).
f([86, 94, 86, 4, 62, 40, 2, 68, 34, 40, 84, 98, 84, 34, 100, 68, 66, 58, 86, 34, 58, 20, 28, 42, 78]).
f([56, 100, 74, 68, 84, 8, 50, 86, 44, 86, 82, 20, 32, 84, 22, 44]).
f([52, 22, 86, 68, 68, 100, 14, 84, 56, 74, 46, 86, 94, 82, 74, 26, 42, 32, 100, 14, 8, 38, 74, 72, 32, 20, 74, 32, 60, 78, 14, 36, 86]).
f([68, 24, 2, 80, 100, 66, 64, 94, 92, 78, 60, 100, 50, 6, 94, 98, 82, 88, 64, 72, 80, 86, 100, 72]).
f([50, 78, 4, 42, 58, 82, 58, 28, 40]).
f([48, 42, 94, 54, 76, 28, 52, 24, 88, 84, 18, 34, 14, 48, 52, 26, 56, 42, 20, 10, 22, 50, 94, 8, 88, 30, 88, 30, 24, 12, 56, 28, 84, 4, 70, 70, 60, 2, 30, 98, 4]).
f([90, 12, 28, 58, 20, 30, 2, 68, 64, 60, 56, 38, 46, 30, 64, 32, 96, 92, 82, 48, 4, 82, 58, 2, 84, 98, 18, 22, 14, 38, 80, 8, 90, 84, 24, 80, 38, 42, 50, 68, 72, 68]).
f([68, 90, 40, 6, 46, 68, 26, 72, 56, 80, 98, 40, 84, 30, 56, 84, 64, 96, 10, 38, 32, 78, 52, 78, 58, 58, 52, 44, 52, 64, 12, 26, 96, 8]).
f([12, 42, 6, 34, 72, 58, 74, 58, 70, 28, 10, 72, 38, 46, 70, 98, 22, 50, 50, 6, 24, 70, 98, 82, 72, 30, 26, 68, 54, 30, 40, 54, 26, 78]).
f([20, 54, 90, 98, 82, 10, 34, 82, 76]).
:-end_in_pos.
:-begin_in_neg.
f([68, 61, 58, 29, 38, 34, 66, 13, 20, 60, 88, 84, 40, 78, 84, 94, 14, 95, 18, 26, 88, 80, 54, 20, 100, 14, 7, 48]).
f([4, 24, 12, 57, 88, 17, 1, 65, 92, 48, 57, 6, 57, 58, 30, 73, 28, 23, 34, 58, 10, 56, 33, 94, 28, 96, 76, 94, 64, 44, 78]).
f([19, 76, 32, 16, 100, 92, 8, 96, 50, 50, 16, 30, 58, 33, 24, 38, 70, 18, 60, 40, 32, 34, 2, 46, 94, 84, 60, 23, 10, 56, 60, 86, 65, 14, 5, 52, 9, 52, 36, 50, 1, 56, 50]).
f([26, 67, 54, 7, 89, 18, 28, 14, 100, 49, 3, 39, 90, 36, 22, 8, 33, 28, 73, 30, 36, 13, 28, 91, 66, 47, 87, 46, 88, 34, 6, 71, 43, 35, 98, 16, 20, 53, 32, 78, 53, 71, 15, 62, 29, 46, 100]).
f([23, 97, 68, 81, 99, 17, 65, 74, 89, 61, 11, 42, 77, 83, 61, 59, 17, 24]).
f([76, 67, 87, 57, 20]).
f([29, 27, 53, 69, 27, 71, 99, 51, 73, 37, 11, 33, 11, 25, 64, 19, 32, 53, 85, 39, 65, 15, 85, 17, 90, 69, 59, 24, 61, 83, 17, 97, 60, 51, 96, 77, 73, 91]).
f([95, 27, 51, 21, 93, 23, 73, 43, 11, 73, 15, 29, 67, 45, 7, 51, 81, 91, 53, 33, 7, 97, 79, 19, 54, 3, 35, 29, 19, 3, 24, 21, 5, 77, 11, 71, 13, 95, 81, 11, 57]).
f([46, 74, 21, 38, 62, 23, 71, 26, 99, 38, 91, 86, 93, 33, 58, 50, 37, 59, 35, 69, 31, 14, 17]).
f([18, 82, 81, 85, 51]).
f([66, 58, 59, 10, 7, 27, 32, 85, 97, 13, 31, 99, 76, 78, 7, 8, 57, 6, 87, 92, 33, 61, 78, 7, 48, 72, 95, 25, 65, 69, 3, 5, 8, 65, 67, 8, 39, 32, 59, 67, 42, 23, 74, 79, 91]).
f([13, 67, 54, 21, 23, 87, 63, 41, 42, 7, 22, 17, 53, 23, 20, 71, 39, 59, 90]).
f([97, 52, 63, 25, 77, 55, 5, 47, 49, 67, 16, 69, 70, 51, 3, 65, 34, 79, 12, 80, 61, 9, 33, 77, 3, 79, 17, 96, 51, 63, 15, 6, 51, 53, 71, 53, 41, 15, 43, 37, 47, 71, 27, 63, 46]).
f([26, 85, 66, 51, 71, 85, 41]).
f([43, 25, 17, 35, 19, 45, 64, 9, 6, 36, 17, 55, 2]).
f([73, 67, 64, 50, 38, 92, 8, 30, 32, 88]).
f([59, 90, 51, 55, 10]).
f([15, 39, 99, 47, 49, 38, 13, 93, 23, 57, 53, 17, 87, 10, 26, 11]).
f([68, 12, 3, 18, 89, 20, 9, 5, 96, 25, 3, 67, 78, 19, 32, 94, 36, 89, 6, 42, 93, 34, 80, 99, 8]).
f([57, 85, 65, 22, 31, 53, 25, 35, 37, 97, 19, 57, 35, 90, 29, 1, 73, 24, 8, 37, 69, 45, 52, 47, 84, 33, 87, 91, 89, 46, 3, 19, 43, 31, 98, 83, 61, 62, 64, 39, 36, 67, 25, 69, 64, 1, 73, 99, 62]).
:-end_in_neg.

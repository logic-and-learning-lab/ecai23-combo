:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list)).
:- modeb(*,f(+list)).
%% :- modeb(*,cons(+element,+list,-list)).

:- determination(f/1,head/2).
:- determination(f/1,tail/2).
:- determination(f/1,geq/2).
:- determination(f/1,empty/1).
:- determination(f/1,even/1).
:- determination(f/1,odd/1).
:- determination(f/1,one/1).
:- determination(f/1,zero/1).
:- determination(f/1,decrement/2).
:- determination(f/1,f/1).
%% :- determination(f/1,increment/2).
%% :- determination(f/1,element/2).
%% :- determination(f/1,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.

my_append(A,B,C):-
    append(A,[B],C).





c_0(0).
c_1(1).
c_2(2).
c_3(3).
c_4(4).
c_5(5).
c_6(6).
c_7(7).
c_8(8).
c_9(9).
c_10(10).
c_11(11).
c_12(12).
c_13(13).
c_14(14).
c_15(15).
c_16(16).
c_17(17).
c_18(18).
c_19(19).
c_20(20).
c_21(21).
c_22(22).
c_23(23).
c_24(24).
c_25(25).
c_26(26).
c_27(27).
c_28(28).
c_29(29).
c_30(30).
c_31(31).
c_32(32).
c_33(33).
c_34(34).
c_35(35).
c_36(36).
c_37(37).
c_38(38).
c_39(39).
c_40(40).
c_41(41).
c_42(42).
c_43(43).
c_44(44).
c_45(45).
c_46(46).
c_47(47).
c_48(48).
c_49(49).
c_50(50).
c_51(51).
c_52(52).
c_53(53).
c_54(54).
c_55(55).
c_56(56).
c_57(57).
c_58(58).
c_59(59).
c_60(60).
c_61(61).
c_62(62).
c_63(63).
c_64(64).
c_65(65).
c_66(66).
c_67(67).
c_68(68).
c_69(69).
c_70(70).
c_71(71).
c_72(72).
c_73(73).
c_74(74).
c_75(75).
c_76(76).
c_77(77).
c_78(78).
c_79(79).
c_80(80).
c_81(81).
c_82(82).
c_83(83).
c_84(84).
c_85(85).
c_86(86).
c_87(87).
c_88(88).
c_89(89).
c_90(90).
c_91(91).
c_92(92).
c_93(93).
c_94(94).
c_95(95).
c_96(96).
c_97(97).
c_98(98).
c_99(99).
c_100(100).
:-end_bg.
:-begin_in_pos.
f([24, 54, 88, 44, 40, 72, 82, 80, 94, 34, 14, 92, 80, 84, 40, 42, 44, 72, 36, 12, 48, 46, 28, 84, 96, 52, 60, 100, 62, 78]).
f([58, 76, 72, 32, 72, 86, 14, 82, 2, 88, 42, 22, 74, 68, 70, 70, 100, 24, 52, 36, 84, 98, 78, 98, 60, 84, 26, 62, 92, 30, 20, 76, 38, 68, 58, 74, 18, 64]).
f([28, 94, 88, 16, 20, 60, 68, 4, 62, 66, 20, 42, 98, 94, 78, 2, 54, 88, 14, 36, 94, 70, 100, 54, 32, 96, 66, 36, 58, 12, 26, 26, 58, 12]).
f([98, 12, 40]).
f([76, 34, 92, 74, 94, 2, 34, 14, 72, 36, 36, 54, 40, 72, 2, 50, 22, 54, 74, 72, 98, 90, 74, 82, 48, 58, 22, 78, 26, 8, 2, 26, 10]).
f([52, 100, 4]).
f([24, 78, 34, 84, 98, 100, 98, 2, 94, 70, 36, 44, 6, 38, 66, 60, 10, 26, 22, 16, 82, 90, 62, 54, 84, 4, 32, 72, 84, 62, 58, 56, 46, 90, 44, 82, 6, 58]).
f([16, 36, 20, 80, 100, 40, 48, 54, 40, 62, 60, 14, 64, 64, 88, 12, 68, 80, 30, 34, 68]).
f([66, 88, 56, 26, 68, 30, 78, 52, 60, 38, 80, 6, 58, 78, 60, 24, 98, 70, 58, 64, 16, 74, 44, 46, 96, 74, 46, 52, 24, 56, 26, 80]).
f([70, 68, 52, 72, 20, 78, 40, 88, 84, 90, 16, 22, 54, 66, 22, 74, 36, 24, 38, 72, 38, 68, 34, 2, 26, 94, 56, 30, 26, 86, 74, 82, 18, 82, 52]).
f([56, 90, 46, 24, 12, 24, 52, 54, 92, 24]).
f([12, 14, 66, 72, 6, 54, 92, 100, 50, 48, 86, 34, 36, 12, 36, 48, 96, 14, 32, 14, 2, 6, 46, 16, 28, 92, 76, 2, 28, 22, 90, 62, 48, 98, 22, 52, 48]).
f([8, 26, 82, 50, 24, 90, 90, 84, 6, 56, 22, 10, 72, 72, 36, 32, 76, 38, 32, 80, 16, 100, 22, 44, 16, 2, 80, 62, 100, 14, 60, 32, 32, 72, 80]).
f([34, 72, 56, 38, 52, 92, 32, 98, 2, 100, 8, 72, 6, 74, 32, 94, 56, 100, 46]).
f([50, 76, 26, 34, 10, 2, 78, 78, 52, 94, 84, 22, 22, 82, 30, 76, 64, 44, 18, 46, 40, 24, 70, 22, 34, 80, 100, 32, 46, 64, 90, 72, 88, 20, 8, 34]).
f([38, 14, 86, 20, 76, 32, 12, 10, 58, 92, 96, 66, 16, 62, 22, 56, 30, 34, 24, 12, 56, 78, 18, 14, 14, 36, 34, 78, 34, 26, 14, 28]).
f([14, 34, 70, 58, 62, 14, 52, 12, 70, 48, 84, 32, 88, 28, 78, 64, 46, 56, 88, 56, 40, 84, 58, 88, 36, 56]).
f([88, 34, 12, 72, 78, 74, 94, 2, 14, 82, 58, 52, 70, 42, 18, 62, 50, 88, 72, 40]).
f([70, 18, 42, 20, 20, 8, 74, 22, 22, 86, 40, 30]).
f([64, 14, 92, 26, 62, 94, 44, 82, 4, 62, 26, 36, 8, 12, 70, 56, 80, 92, 4, 20, 8]).
:-end_in_pos.
:-begin_in_neg.
f([10, 1, 5, 44, 94, 26, 70, 60, 68, 42, 96, 94, 86, 16, 90, 10, 76, 65, 42, 87, 80, 88, 24, 59, 94, 76, 21, 3, 26, 99, 62, 10, 48, 22, 71, 88, 26, 44, 78, 12, 92, 44, 48, 90, 8, 14, 96, 22]).
f([70, 9, 38, 94, 17, 57]).
f([82, 48, 44, 42, 47, 97, 25, 39, 88, 100, 11, 44, 37, 11, 88, 87, 13, 28, 49, 71, 22, 55, 26, 16, 54, 30, 41, 19, 16, 39, 1, 36, 95, 90]).
f([43, 53, 82, 91, 35, 81, 42, 33, 53, 60]).
f([97, 83, 81, 83, 41, 81, 60, 11, 13, 23, 57, 13, 11, 19, 23, 81, 34, 33, 28, 11, 17, 25, 57, 3, 57, 9, 57, 15, 75, 60, 11, 22, 67, 13, 37, 56, 69]).
f([43, 53, 67, 39, 27, 92, 62, 16, 38, 67, 11, 10, 29, 87, 9, 92, 10, 4]).
f([9, 46, 80, 24]).
f([84, 69, 41, 6, 9, 11, 45, 6, 58, 35, 73, 5, 82, 52, 44, 91, 78, 54, 65, 71, 83, 12]).
f([70, 21, 69, 63, 81, 92, 57]).
f([5, 37, 55, 71, 21, 71, 10, 17, 85, 93, 87, 97, 85, 48, 61, 33, 71, 32, 75, 75, 53, 29, 96, 27, 19, 98, 7, 24, 47, 85, 81]).
f([33, 20, 68, 73, 80, 63, 41, 18, 29, 75, 23, 33, 89, 67, 21, 75, 19, 5, 29, 99, 43, 48, 85, 19, 75, 74, 65, 45, 91, 2, 44, 10, 71, 23, 29, 53]).
f([74, 8, 52, 4, 22, 70, 47, 2]).
f([49, 75, 90, 90, 65, 54, 59, 66, 89, 61, 33, 71, 16, 87, 45, 90, 59, 3, 97, 37, 4, 31, 99, 49, 69, 23, 63, 35, 39, 97, 33, 95, 5, 37, 86, 35, 64, 47, 29, 100, 87, 13, 45, 20, 25, 80, 8, 44, 14, 19]).
f([70, 16, 78, 43]).
f([31, 57, 56, 71, 35, 55, 74, 49, 65, 3, 19, 63, 91, 10, 96, 76, 15, 63, 81, 81, 97, 31, 33, 98, 3, 85, 96, 99, 45, 43, 95, 63, 55, 78, 1, 25, 65, 61, 77, 37, 3, 9]).
f([82, 92, 96, 48, 86, 36, 91, 70, 93, 60, 16, 10, 20, 32, 12, 6, 12, 20, 50, 64, 96, 47, 90, 98, 3, 42, 22, 22, 62, 50, 39, 32, 2, 14, 58, 56, 48, 16, 70, 86, 86, 74, 64, 6, 72, 56, 6, 60, 86, 12, 86]).
f([61, 11, 87, 33, 51, 3, 51, 37, 1, 74, 33, 43, 85, 87, 67, 63, 85, 59, 99]).
f([8, 84, 73, 14, 16, 29, 76, 39, 78, 89, 44, 100, 78, 2, 16, 42, 24, 10, 70, 94, 5, 84, 20, 53, 13, 46, 60, 64, 18, 55, 94]).
f([80, 92, 90, 37, 81, 6, 16, 20, 4, 66, 4, 44, 44, 88, 78, 6, 48, 13, 2, 77, 33, 20, 70, 58, 62, 98, 13, 42, 90, 68, 4]).
f([39, 81, 70, 33, 11, 95, 100, 9, 90, 89, 85, 47, 71]).
:-end_in_neg.

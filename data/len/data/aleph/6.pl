:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,-element)).
:- modeb(*,f(+list,-element)).
%% :- modeb(*,cons(+element,+list,-list)).

:- determination(f/2,head/2).
:- determination(f/2,tail/2).
:- determination(f/2,geq/2).
:- determination(f/2,empty/1).
:- determination(f/2,even/1).
:- determination(f/2,odd/1).
:- determination(f/2,one/1).
:- determination(f/2,zero/1).
:- determination(f/2,decrement/2).
:- determination(f/2,f/2).
:- determination(f/2,element/2).
:- determination(f/2,increment/2).
%% :- determination(f/2,element/2).
%% :- determination(f/2,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.

my_append(A,B,C):-
    append(A,[B],C).





c_0(0).
c_1(1).
c_2(2).
c_3(3).
c_4(4).
c_5(5).
c_6(6).
c_7(7).
c_8(8).
c_9(9).
c_10(10).
c_11(11).
c_12(12).
c_13(13).
c_14(14).
c_15(15).
c_16(16).
c_17(17).
c_18(18).
c_19(19).
c_20(20).
c_21(21).
c_22(22).
c_23(23).
c_24(24).
c_25(25).
c_26(26).
c_27(27).
c_28(28).
c_29(29).
c_30(30).
c_31(31).
c_32(32).
c_33(33).
c_34(34).
c_35(35).
c_36(36).
c_37(37).
c_38(38).
c_39(39).
c_40(40).
c_41(41).
c_42(42).
c_43(43).
c_44(44).
c_45(45).
c_46(46).
c_47(47).
c_48(48).
c_49(49).
c_50(50).
c_51(51).
c_52(52).
c_53(53).
c_54(54).
c_55(55).
c_56(56).
c_57(57).
c_58(58).
c_59(59).
c_60(60).
c_61(61).
c_62(62).
c_63(63).
c_64(64).
c_65(65).
c_66(66).
c_67(67).
c_68(68).
c_69(69).
c_70(70).
c_71(71).
c_72(72).
c_73(73).
c_74(74).
c_75(75).
c_76(76).
c_77(77).
c_78(78).
c_79(79).
c_80(80).
c_81(81).
c_82(82).
c_83(83).
c_84(84).
c_85(85).
c_86(86).
c_87(87).
c_88(88).
c_89(89).
c_90(90).
c_91(91).
c_92(92).
c_93(93).
c_94(94).
c_95(95).
c_96(96).
c_97(97).
c_98(98).
c_99(99).
c_100(100).
:-end_bg.
:-begin_in_pos.
f([9, 52, 53, 81, 28, 25, 71, 29, 98, 61, 42, 90, 36, 83, 97, 22, 29, 73, 60, 53, 65, 97, 9, 101, 83, 101, 37, 79, 70, 6, 53, 85, 100, 39, 54, 4, 71, 101, 98, 51, 3, 9, 98, 35, 13, 3, 18, 49, 15],49).
f([10, 26, 7, 71, 94, 80, 32, 22, 35, 89, 95, 46, 17, 34, 62, 80, 68, 13, 22, 67, 86, 100, 71, 43, 67, 17, 44, 32, 98, 44, 77, 62, 52, 88, 59, 61, 72, 50],38).
f([95, 1, 6, 94, 91, 7, 92, 48, 79, 26, 23, 83],12).
f([43, 56, 40, 2, 60, 2, 31, 10, 70, 23, 55, 83, 66, 50, 11, 46, 96, 28, 1, 8, 89, 18, 67, 98, 84, 47, 43, 22, 60, 70, 93, 12, 57, 40, 45, 77, 33, 84, 22, 8, 35, 78, 16, 91, 23, 100, 64, 75, 54],49).
f([96, 57, 33, 53, 15, 58, 23, 36, 96, 69, 68, 94, 99, 50, 51, 18, 31, 25, 100, 71, 28, 94, 99, 66, 13, 32, 96, 75, 87, 51, 9, 77, 74, 77, 16, 31, 73, 36, 98, 4, 10, 38, 10, 48],44).
f([14, 34, 26, 83, 26, 37, 82, 95, 86, 80, 66, 39, 41, 95, 74, 36, 28, 92],18).
f([71, 87, 84, 75, 41, 92, 64, 3, 38, 52, 74, 84, 51, 63, 38, 67, 18, 88, 59, 12, 92, 78, 13, 67, 68, 3, 12, 61, 57, 87, 26, 99, 61, 15, 77, 44, 50, 3, 44, 79],40).
f([79, 58, 76, 31, 4, 48, 11, 55, 28, 81, 17, 16, 57, 92, 94, 90, 27, 25, 67, 54, 35, 42, 44],23).
f([50, 98, 12, 13, 20, 45, 4, 91, 23],9).
f([13, 5, 61, 40, 50, 23, 60, 49, 87, 33, 55, 76, 66, 11, 61, 17, 85, 9, 62, 39, 101, 8, 43, 75, 54, 21, 26, 68, 34, 30, 46, 14, 61],33).
f([48, 74, 38, 32, 69, 98, 61, 1, 97, 14, 39, 14, 21, 80, 72, 26, 2, 32, 90, 1, 57, 72, 91, 23, 36, 41],26).
f([40, 101, 84, 95, 39, 49, 4, 27, 34, 47, 5, 62, 71, 84, 28, 5, 42, 19, 75, 26, 42, 60, 52, 70, 70, 12, 95, 86, 69, 57, 55, 6, 99, 51],34).
f([99, 62, 93, 25, 92, 93, 68, 16, 82, 17, 55, 3, 19, 5, 95, 44, 19, 88, 86, 61],20).
f([79, 84, 39, 77, 62, 86, 25, 50, 62, 54, 99, 22, 7, 5, 26, 29, 19, 62, 50, 14, 20, 38, 8, 101, 46],25).
f([9, 44, 19, 93, 48, 56, 73, 21, 64, 15, 51, 70, 66, 16, 4, 7, 69],17).
f([75, 40],2).
f([44, 72, 2, 51, 91, 9, 26, 77, 68],9).
f([34, 6, 19, 12, 92, 23, 71, 55, 54, 6, 66, 45, 15, 92, 15, 83, 1, 41, 61, 20, 85, 100, 2, 82, 18, 96, 54, 5, 76, 3, 11, 52, 99, 43],34).
f([48, 8, 92, 25, 2, 74, 97, 61, 45, 53, 50, 63, 69, 23, 32, 88, 50, 93, 59, 79, 24, 77, 4, 2, 76, 98, 87, 84, 79, 99, 30, 47],32).
f([99, 15, 37, 82, 71, 64, 75, 11, 64, 98, 58, 31, 61, 13, 47, 68, 36, 34, 61, 91],20).
:-end_in_pos.
:-begin_in_neg.
f([82, 73, 22, 57, 1, 95, 46, 79, 55, 27, 22, 48, 67, 29, 46, 90, 10, 22, 30, 98, 79, 89, 84, 48, 63, 4, 53, 11, 35, 87, 26, 58, 101, 41, 99, 67, 68, 15, 6, 28, 55, 87, 94, 88, 81, 1, 61, 59, 79],13).
f([67, 91, 46, 81, 29, 92, 24, 70, 52, 99, 33, 20, 86, 91, 39, 55, 5, 46, 15, 17, 11, 60, 91, 82, 53, 96, 71, 28, 91, 38, 11, 8, 93, 55, 18, 79, 69, 13, 61],73).
f([21, 61, 82, 86, 24, 53, 47, 82, 7, 88, 72, 53, 60, 93, 65, 51, 17, 85, 4, 71, 15, 85, 21, 81, 55, 66, 55, 46, 83, 75, 55, 43, 99, 76, 26, 65, 51, 23],52).
f([17, 42, 66, 62, 22, 90, 97, 83, 93, 28],52).
f([40, 43, 57, 24, 89, 15, 2, 93, 23, 17, 11, 55, 85, 15, 73, 14, 24, 50, 46, 49, 89, 3, 87, 5, 82, 73, 9, 63, 32, 84, 88, 86, 22, 99, 27, 22, 11, 44, 94, 87, 57, 8],93).
f([60, 47, 20, 7, 65, 10, 10, 13, 22, 79, 12, 70, 24, 63, 75, 92, 6, 84, 7, 78, 63, 60, 60],77).
f([64, 81, 30, 50, 42, 9, 14, 50, 29, 5, 71, 17, 26, 55, 86, 76, 20, 30, 62, 88, 55, 54, 66, 94, 53, 79, 21, 91],57).
f([81, 51, 86, 22, 22, 46, 56],61).
f([43, 24, 46, 20, 66, 14, 65, 33, 14, 32, 46, 98, 82, 56, 49, 50, 7],39).
f([59, 92, 8, 75, 83, 93, 3],64).
f([31, 24, 13, 2, 9, 51, 30, 29, 33, 25, 97, 52, 90, 37, 86, 54, 85],27).
f([62, 24, 21, 11, 5, 83, 81, 59, 90, 70, 55, 70, 88, 13, 78, 18, 14, 5, 15, 18, 2, 4, 35, 35, 6, 19],40).
f([75, 73, 69, 101, 55, 52, 9, 70, 93, 18, 10, 25, 98, 38, 80, 22, 91, 44, 15, 19, 74, 58, 25],67).
f([37, 53, 53, 34, 53, 81, 52, 43, 27, 23, 51, 55, 9, 15, 81, 47, 64, 57, 9, 99, 83, 66, 5, 30, 6, 87, 49, 26, 58, 44, 4, 50, 75, 15, 4, 51, 64, 101, 53, 52],41).
f([36, 55, 71, 96, 81, 100, 99, 74, 10, 30, 21, 42, 67, 85, 40, 71, 43, 18, 81, 61, 42, 52, 68, 18, 70, 69, 47, 8, 100],7).
f([95, 31, 48, 9, 57, 37, 10, 58, 78, 54, 43, 35, 60, 12, 13, 63, 57, 28, 92, 89, 98, 29, 31, 16, 37, 24, 79, 40, 95, 51, 74, 16, 29, 73, 3, 87, 55],81).
f([1, 88, 30, 51, 100, 59, 22, 34, 34, 34, 41, 12, 57, 72, 45, 79, 62, 54, 58, 88, 39, 86, 80, 7, 89, 80, 41, 16, 77, 36, 32, 79],17).
f([101, 68, 85, 23, 35, 79, 95, 82, 8, 93, 43, 29, 24],100).
f([21, 66, 56, 63, 14],93).
f([45, 64, 21, 66, 3, 93, 54, 74, 33, 9, 21, 42, 2, 75, 55, 85, 99, 31, 65, 86, 90, 1, 36, 48, 20, 38, 33, 92, 32, 42, 100, 85, 35, 9, 52, 31],81).
:-end_in_neg.

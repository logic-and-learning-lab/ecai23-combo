:- use_module(library(aleph)).
:- if(current_predicate(use_rendering/1)).
:- use_rendering(prolog).
:- endif.
:- aleph.
:-style_check(-discontiguous).

:- aleph_set(i,6).
:- aleph_set(clauselength,6).
:- aleph_set(nodes,30000).

%% :- modeh(*,f(+list,-element)). % PROBLEM SPECIFIC
:- modeb(*,head(+list,-element)).
:- modeb(*,tail(+list,-list)).
:- modeb(*,geq(+element,+element)).
:- modeb(*,empty(+list)).
:- modeb(*,even(+element)).
:- modeb(*,odd(+element)).
:- modeb(*,one(+element)).
:- modeb(*,zero(-element)).
:- modeb(*,decrement(+element,-element)).
%% :- modeb(*,increment(+element,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,element(+list,-element)). % PROBLEM SPECIFIC
%% :- modeb(*,cons(+element,+list,-list)). % PROBLEM SPECIFIC
:- modeh(*,f(+list,-element)).
:- modeb(*,f(+list,-element)).
%% :- modeb(*,cons(+element,+list,-list)).

:- determination(f/2,head/2).
:- determination(f/2,tail/2).
:- determination(f/2,geq/2).
:- determination(f/2,empty/1).
:- determination(f/2,even/1).
:- determination(f/2,odd/1).
:- determination(f/2,one/1).
:- determination(f/2,zero/1).
:- determination(f/2,decrement/2).
:- determination(f/2,f/2).
:- determination(f/2,element/2).
:- determination(f/2,increment/2).
%% :- determination(f/2,element/2).
%% :- determination(f/2,cons/3).
:-begin_bg.
is_list([]).
is_list([_|_]).

increment(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(A,B).

decrement(A,B):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    succ(B,A).

my_length(A,B):-
    (nonvar(A) -> is_list(A); true),
    (nonvar(B) -> \+is_list(B); true),
    length(A,B).

cons(A,B,C):-
    append([A],B,C).
comps([H|T],H,T).

tail([_|T],T).
head([H|_],H).
sum(A,B,C):-
    (nonvar(A) -> \+ is_list(A); true),
    (nonvar(B) -> \+ is_list(B); true),
    (nonvar(C) -> \+ is_list(B); true),
    C is A+B.
empty([]).

element([X|_],X):-!.
element([_|T],X):-
    element(T,X).

empty_in([]).
empty_out([]).

zero(0).
one(1).

gt(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A > B.

geq(A,B):-
    nonvar(A),
    nonvar(B),
    \+is_list(A),
    \+is_list(B),
    A >= B.

even(A):-
    nonvar(A),
    \+ is_list(A),
    0 is A mod 2.

odd(A):-
    nonvar(A),
    \+ is_list(A),
    1 is A mod 2.

my_append(A,B,C):-
    append(A,[B],C).





c_0(0).
c_1(1).
c_2(2).
c_3(3).
c_4(4).
c_5(5).
c_6(6).
c_7(7).
c_8(8).
c_9(9).
c_10(10).
c_11(11).
c_12(12).
c_13(13).
c_14(14).
c_15(15).
c_16(16).
c_17(17).
c_18(18).
c_19(19).
c_20(20).
c_21(21).
c_22(22).
c_23(23).
c_24(24).
c_25(25).
c_26(26).
c_27(27).
c_28(28).
c_29(29).
c_30(30).
c_31(31).
c_32(32).
c_33(33).
c_34(34).
c_35(35).
c_36(36).
c_37(37).
c_38(38).
c_39(39).
c_40(40).
c_41(41).
c_42(42).
c_43(43).
c_44(44).
c_45(45).
c_46(46).
c_47(47).
c_48(48).
c_49(49).
c_50(50).
c_51(51).
c_52(52).
c_53(53).
c_54(54).
c_55(55).
c_56(56).
c_57(57).
c_58(58).
c_59(59).
c_60(60).
c_61(61).
c_62(62).
c_63(63).
c_64(64).
c_65(65).
c_66(66).
c_67(67).
c_68(68).
c_69(69).
c_70(70).
c_71(71).
c_72(72).
c_73(73).
c_74(74).
c_75(75).
c_76(76).
c_77(77).
c_78(78).
c_79(79).
c_80(80).
c_81(81).
c_82(82).
c_83(83).
c_84(84).
c_85(85).
c_86(86).
c_87(87).
c_88(88).
c_89(89).
c_90(90).
c_91(91).
c_92(92).
c_93(93).
c_94(94).
c_95(95).
c_96(96).
c_97(97).
c_98(98).
c_99(99).
c_100(100).
:-end_bg.
:-begin_in_pos.
f([96, 87, 32, 42, 37, 13, 93, 89, 41, 26, 65, 56, 19, 4, 30, 95, 38, 54, 83, 65, 39, 55, 25],23).
f([56, 100, 46, 50, 79, 99, 16, 44, 24, 68, 1, 62, 81, 31, 71, 13, 38, 13, 15, 77, 17, 25, 20, 15, 97],25).
f([36, 76, 45, 43, 92, 90],6).
f([57, 12, 49, 16, 58, 39, 21, 75, 91, 99, 65, 7, 46, 33, 3, 4, 58, 95, 7, 71, 85, 56, 36, 78, 99, 66, 61, 45, 54, 7],30).
f([95, 88, 27, 91, 84, 78, 79, 62, 87, 63, 64, 10, 17, 92, 32, 59, 14, 93, 13, 53, 70, 32, 7, 4, 80, 53, 2, 10, 77, 81, 64, 44, 73, 30, 7, 35, 1, 65, 51, 25, 26, 15, 83, 10, 99, 54, 71, 7, 71, 66],50).
f([58, 56, 12, 22, 101, 73, 3, 26, 12, 13, 34, 17, 88, 48, 95, 95, 66, 90, 60, 43, 37, 77, 59, 18, 84, 15, 54],27).
f([66, 3, 10, 2, 68, 61, 47, 65, 44, 73, 26, 12, 14, 41, 9, 73, 26, 90, 19, 89, 83, 34, 46, 24, 48, 57, 22],27).
f([70, 55, 80, 70, 74, 93, 2, 36, 68, 101, 22, 5, 44, 64],14).
f([80, 7, 89, 63, 6, 86, 94, 99, 69, 10, 89, 9, 90, 98, 82, 43, 68, 16, 44, 56, 45, 33, 8, 2, 79, 10, 79, 7, 4, 11, 60, 51, 73, 45, 97],35).
f([55, 96, 18, 66, 16, 9, 38, 79, 61, 93, 55, 72, 29, 57, 30, 58, 61, 59, 27, 4, 87, 51, 60, 76, 33, 40, 31, 21, 30, 11, 13, 23, 19, 6, 22, 4, 84, 44, 32, 46, 63, 77, 74, 23, 81, 3, 14, 49, 99, 99],50).
f([53, 30, 69, 31, 81, 88, 19, 43, 100, 24, 82, 60, 44, 75, 11, 12, 75, 43, 19, 29, 92, 93, 6, 54, 70, 93, 49, 88, 37, 73, 63, 32, 12, 40, 22, 10, 63, 69, 11, 80, 6, 14, 20, 42, 32],45).
f([29, 17, 100, 50, 63, 7, 17, 11, 6, 79, 50, 74, 21, 79, 53, 29, 92, 65, 40, 48, 95, 48, 85, 27, 23, 70, 8, 41],28).
f([25, 30, 79, 1, 67, 57, 24, 94, 50, 35, 79, 5, 34, 20, 90, 68, 79, 37, 34, 91, 44, 93, 30, 101, 80, 48, 16, 83, 89, 39, 82, 91, 86, 47, 92, 80, 17, 90, 3, 84, 88, 44, 43, 37, 35, 14, 96, 73, 30],49).
f([29, 90, 86, 83, 6, 85, 5, 67, 75, 91, 88, 10, 82],13).
f([80, 37, 31, 31],4).
f([25, 96, 98, 18, 73, 18, 6, 36, 2, 7, 34, 48],12).
f([77, 30, 12, 65, 2, 67, 100],7).
f([84, 50, 63, 91, 83, 65, 38, 70, 22, 76, 73, 66, 51, 79, 73, 49, 62, 22, 48, 64, 75, 76, 6, 13, 52, 80, 82, 79, 98, 28, 83, 51, 56, 42, 51, 39, 99, 101, 68],39).
f([2, 45, 69, 19, 57, 31, 67, 80, 40],9).
f([21, 57, 15, 4, 50, 19, 62, 34, 74, 44, 8, 95, 68, 20, 77, 83, 12, 7, 29, 89, 70, 57, 39, 41, 62, 17, 36, 80, 33, 31, 39, 33, 73, 71, 42, 28],36).
:-end_in_pos.
:-begin_in_neg.
f([77],70).
f([79, 98, 22, 19, 60, 85, 4, 24, 78, 57, 3, 40, 100, 78, 52, 98, 68, 12, 81, 21, 21, 3],6).
f([95, 33, 4, 3, 70, 12, 50, 5, 49, 65, 74, 50, 50, 35, 74, 29],74).
f([56, 82, 9, 26, 92, 14, 1, 94, 32],18).
f([77, 25, 79, 23, 73, 29, 94, 50, 11, 6, 2, 4, 9, 78, 12, 61, 92, 27, 59, 71, 6, 4, 83, 37, 59, 27, 91, 23, 6, 66, 2, 93, 11, 72],58).
f([91, 93, 45, 96, 14, 40, 57, 62, 52, 21],49).
f([95, 48, 72, 75, 62, 39, 42, 97, 49, 1, 89, 94, 31, 96, 21, 67, 88, 25, 11, 51, 98, 86, 89, 86, 87, 54, 54, 28, 82, 11, 12, 30, 49, 11, 46, 53, 30, 15],33).
f([26, 43, 14, 70, 77, 26, 13, 37, 89, 78, 15, 99, 48, 39, 92, 71, 91, 72, 90, 66, 30, 93, 87, 42, 5, 58, 33, 56, 66, 76, 23, 69],22).
f([10, 25, 61, 20, 101, 48, 53, 5, 25, 63, 45, 89, 14, 55, 98, 98, 32, 15, 67, 74, 24, 37, 93, 57, 44, 12, 6],85).
f([45, 96, 10],77).
f([93, 25, 17, 77, 49, 9, 99, 46, 87, 35, 22, 22, 53, 46, 60, 24, 15, 70, 66, 29, 62, 16, 28, 89, 77, 11, 46, 64, 36, 91, 30, 6, 86, 100],86).
f([61, 10, 48, 15],15).
f([17, 62, 72, 49, 57, 7, 74, 69, 79, 101, 7, 93, 60, 27, 25, 55, 66, 49, 4, 49, 14, 70, 76, 2, 23, 57, 17, 64, 12, 97, 49, 22, 45, 91, 55],44).
f([56, 56, 11, 96, 85, 80, 66, 98, 3, 22, 24, 75, 57, 69, 23, 11, 96, 96, 99, 59, 11, 28, 9, 59, 51, 55, 24, 98, 98, 39, 101, 49, 40],70).
f([74, 85, 45, 69, 78, 99, 20, 72, 67, 66, 54, 95, 60, 73, 97, 73, 57, 50, 39, 22, 80],25).
f([41, 2, 22, 23, 37, 1, 98, 97, 84, 94, 99, 33, 15, 27, 2, 5, 57, 18, 30, 59, 2, 74, 5, 88, 75, 37, 26, 65, 49, 27, 1, 36, 60, 62, 60, 72, 29, 90, 99, 47, 72, 25, 23, 57, 63, 60, 73, 40, 69, 25, 52],64).
f([73, 19, 99, 59, 78, 16, 31, 79, 81, 75, 84, 64, 96, 51, 6, 41, 49, 62, 93, 18, 13, 100, 78, 23, 90, 42, 69, 12, 44, 80, 4, 44, 23, 49, 85, 1, 41, 63, 42, 89, 93, 6, 74, 80, 66],56).
f([91, 39, 76, 74, 24, 31, 100, 38, 56, 16, 30, 28, 61, 64, 5, 60, 60, 72, 9, 61, 60, 23, 99, 80, 70, 82, 70, 88, 77, 95, 89, 78, 48, 37, 98, 18, 93, 61, 35, 66, 87],23).
f([15, 64, 20, 17, 40, 50, 82, 94, 96, 66, 27, 5, 67, 64, 54, 7, 38],9).
f([52, 86, 86, 54, 52, 40, 31, 14, 66, 79, 53, 2, 47, 20, 97, 11, 44, 100, 28, 73, 8, 91, 83, 4, 15, 81, 21, 76, 92, 17, 66, 48, 65, 3, 70, 84, 50, 9, 74, 53, 11, 64, 92, 18, 35, 73, 3],78).
:-end_in_neg.
